"use strict";(self.webpackChunksc_viaduct=self.webpackChunksc_viaduct||[]).push([[9051],{59051:(e,t,i)=>{i.r(t),i.d(t,{default:()=>ji});var r=i(8),n=i(35143),s=i(16868),o=i(69098),a=i(50076),l=i(77717),u=i(50346),p=i(46053),c=(i(81806),i(76460)),d=(i(47249),i(85842)),m=i(17707),y=i(25515),h=i(35238),g=i(39356),f=i(71719),v=i(3825),w=i(53084),R=i(68134),_=i(90534),S=i(40565),b=i(28379),A=i(80963),x=i(95363),I=i(15359),M=i(42553),F=i(44038),D=i(52297);const P={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var j=i(93187),T=i(74916),O=i(73137);const N=new Set(["u1","u2","u4","u8","s8","u16","s16"]),Z={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},C=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function V(e){return C.has(e.type)}function J(e,t){var i;if(!e||!t)return(0,w.o8)(e||t);const r=(0,w.o8)(e);if(r.functionDefinition&&t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),E(r.functionDefinition.arguments,t),r.rasterFunctionDefinition=r.functionDefinition.toJSON()}else"none"!==(null===(i=t.functionName)||void 0===i?void 0:i.toLowerCase())&&(z(r.functionArguments).Raster=t);return r}function E(e,t){for(const i in e)"raster"===i.toLowerCase()&&("RasterFunctionVariable"===e[i].type?(e[i]=t.rasterFunctionDefinition,e[i].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[i].type&&E(e[i].arguments,t))}function q(e){const t=(0,w.o8)(P[e.functionName+"Function"]),i=e.functionArguments;for(const r in i)"raster"===r.toLowerCase()?(t.arguments[r]=q(i[r]),t.arguments[r].type="RasterFunctionTemplate"):"colormap"===r.toLowerCase()?(t.arguments[r].value=Q(i[r]),t.arguments.ColorSchemeType.value=0):t.arguments[r].value=i[r];return t}function G(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){var i;const r=t.convertToRFT,n=new F.A;n.functionName="Stretch";const s=L[T.u.toJSON(e.stretchType)],o="u8",a=null===(i=e.customStatistics)||void 0===i?void 0:i.map((e=>{var t,i;return[e.min,e.max,null!==(t=e.avg)&&void 0!==t?t:0,null!==(i=e.stddev)&&void 0!==i?i:1]})),l={StretchType:s,Statistics:a,DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(l.Min=e.outputMin),null!=e.outputMax&&(l.Max=e.outputMax),s===L.standardDeviation?(l.NumberOfStandardDeviations=e.numberOfStandardDeviations,n.outputPixelType=o):s===L.percentClip?(l.MinPercent=e.minPercent,l.MaxPercent=e.maxPercent,n.outputPixelType=o):s===L.minMax?n.outputPixelType=o:s===L.sigmoid&&(l.SigmoidStrengthLevel=e.sigmoidStrengthLevel),n.functionArguments=l,n.variableName="Raster",e.colorRamp){const i=e.colorRamp,s=new F.A;if(r)s.functionArguments={ColorRamp:(0,j.hf)(i)};else{const r=(0,j.hs)(i,!0);if(r)s.functionArguments={colorRampName:r};else if(!t.convertColorRampToColormap||"algorithmic"!==i.type&&"multipart"!==i.type){var u;const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&(null===(u=t.colorRamps)||void 0===u?void 0:u.length)&&t.colorRamps.forEach((e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm")),s.functionArguments={colorRamp:t}}else s.functionArguments={Colormap:(0,j.R8)(i)}}return s.variableName="Raster",s.functionName="Colormap",s.functionArguments.Raster=n,r?new F.A({rasterFunctionDefinition:q(s)}):s}return r?new F.A({rasterFunctionDefinition:q(n)}):n}(e,t);case"class-breaks":return function(e,t){const i=[],r=[],n=[],s=[],o=1e-4,{pixelType:a,rasterAttributeTable:l}=t,u=null==l?null:l.features,p=U(l);if(p&&u&&Array.isArray(u)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,i)=>{var r;const n=null===(r=t.symbol)||void 0===r?void 0:r.color;let o;(null===n||void 0===n?void 0:n.a)&&null!=t.minValue&&null!=t.maxValue&&u.forEach((r=>{null!=t.minValue&&null!=t.maxValue&&(o=r.attributes[e.field],(o>=t.minValue&&o<t.maxValue||i===e.classBreakInfos.length-1&&o>=t.minValue)&&s.push([r.attributes[p],n.r,n.g,n.b]))}))}));const i=a?B(s,a):s,r=new F.A;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=i,r.variableName="Raster",t.convertToRFT?new F.A({rasterFunctionDefinition:q(r)}):r}e.classBreakInfos.forEach(((e,t)=>{if(null==e.minValue||null==e.maxValue)return;const a=e.symbol&&e.symbol.color;null!==a&&void 0!==a&&a.a?(0===t?i.push(e.minValue,e.maxValue+o):i.push(e.minValue+o,e.maxValue+o),r.push(t),s.push([t,a.r,a.g,a.b])):n.push(e.minValue,e.maxValue)}));const c=a?B(s,a):s,d=new F.A;d.functionName="Remap",d.functionArguments={InputRanges:i,OutputValues:r,NoDataRanges:n},d.variableName="Raster";const m=new F.A;return m.functionName="Colormap",m.functionArguments={Colormap:c,Raster:d},t.convertToRFT?new F.A({rasterFunctionDefinition:q(m)}):m}(e,t);case"unique-value":return function(e,t){var i;const r=[],{pixelType:n,rasterAttributeTable:s}=t,o=null==s?null:s.features,a=U(s),l=null===(i=e.defaultSymbol)||void 0===i||null===(i=i.color)||void 0===i?void 0:i.toRgb(),u=e.uniqueValueInfos;if(u)if(o){if(a){const t=new Map;u.forEach((e=>{const i=e.value,r=H(e);null!=i&&(null===r||void 0===r?void 0:r.a)&&t.set(String(i),r.toRgb())}));const i=e.field;i&&o.forEach((e=>{let{attributes:n}=e;const s=String(n[i]),o=n[a],u=t.get(s);u?r.push([o,...u]):l&&r.push([o,...l])}))}}else for(let d=0;d<u.length;d++){const e=u[d],t=H(e),i=+e.value;if(null!==t&&void 0!==t&&t.a){if(isNaN(i))return null;r.push([i,t.r,t.g,t.b])}}const p=n?B(r,n):r,c=new F.A;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=p,c.variableName="Raster",t.convertToRFT?new F.A({rasterFunctionDefinition:q(c)}):c}(e,t);case"raster-colormap":return function(e,t){const i=e.extractColormap();if(!i||0===i.length)return null;const{pixelType:r}=t,n=r?B(i,r):i,s=new F.A;return s.functionName="Colormap",s.functionArguments={},s.functionArguments.Colormap=n,t.convertToRFT?new F.A({rasterFunctionDefinition:q(s)}):s}(e,t);case"vector-field":return function(e,t){const i=new F.A;i.functionName="VectorFieldRenderer";const{dataType:r,bandNames:n}=t,s="vector-uv"===r;let o,a;if(n&&2===n.length){const e=n.map((e=>e.toLowerCase()));o=e.indexOf("magnitude"),a=e.indexOf("direction")}-1!==o&&null!==o||(o=0,a=1);const l="arithmetic"===e.rotationType?1:2,u="flow-from"===e.flowRepresentation?0:1,p=e.visualVariables?e.visualVariables.find((e=>"Magnitude"===e.field)):new O.A,c={magnitudeBandID:o,directionBandID:a,isUVComponents:s,referenceSystem:l,massFlowAngleRepresentation:u,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:Z[e.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};i.functionArguments=c;const d=q(i);return t.convertToRFT?F.A.fromJSON({rasterFunctionDefinition:d}):i}(e,t);case"raster-shaded-relief":return function(e,t){const i=t.convertToRFT;if("elevation"!==t.dataType&&("generic"!==t.dataType||1!==t.bandCount||"s16"!==t.pixelType&&"s32"!==t.pixelType&&"f32"!==t.pixelType&&"f64"!==t.pixelType))return new F.A;const r=new F.A;r.functionName="Hillshade";const n="traditional"===e.hillshadeType?0:1,s="none"===e.scalingType?1:3,o={HillshadeType:n,SlopeType:s,ZFactor:e.zFactor};return 0===n&&(o.Azimuth=e.azimuth,o.Altitude=e.altitude),3===s&&(o.PSPower=e.pixelSizePower,o.PSZFactor=e.pixelSizeFactor),r.functionArguments=o,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",i?o.ColorRamp=(0,j.hf)(e.colorRamp):o.Colormap=(0,j.R8)(e.colorRamp)),i?new F.A({rasterFunctionDefinition:q(r)}):r}(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}function z(e){var t;const i=null!==(t=null===e||void 0===e?void 0:e.Raster)&&void 0!==t?t:null===e||void 0===e?void 0:e.raster;return i&&"esri.layers.support.RasterFunction"===i.declaredClass?z(i.functionArguments):e}const L={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function B(e,t){const i=N.has(t)?(0,D.hP)(t):null;return i&&e.push([Math.floor(i[0]-1),0,0,0],[Math.ceil(i[1]+1),0,0,0]),e}function U(e){if(null==e)return;const{fields:t}=e,i=null===t||void 0===t?void 0:t.find((e=>(null===e||void 0===e?void 0:e.name)&&"value"===e.name.toLowerCase()));return null===i||void 0===i?void 0:i.name}function H(e){var t,i,r;return"polygon-3d"===(null===(t=e.symbol)||void 0===t?void 0:t.type)?null===(i=e.symbol.symbolLayers)||void 0===i||null===(i=i.find((e=>"fill"===e.type)))||void 0===i||null===(i=i.material)||void 0===i?void 0:i.color:null===(r=e.symbol)||void 0===r?void 0:r.color}function Q(e){const t=[],i=[];return e.forEach((e=>{t.push(e[0]),i.push((0,j.vL)([...e.slice(1),255]))})),{type:"RasterColormap",values:t,colors:i}}var $=i(29365),k=i(58646);let K=class extends M.oY{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(e,t,i){this.layer.version<10.3||(t[i]=e)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(e,t,i){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[i]=e)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}get format(){var e;return"vector-field"===(null===(e=this.layer.renderer)||void 0===e?void 0:e.type)?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}writeLercVersion(e,t,i){"lerc"===this.format&&this.layer.version>=10.5&&(t[i]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("rasterFunction"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const i=e.definitionExpression;return t?i&&i!==t.where&&(t=t.clone(),t.where=i):i&&(t=new $.A({where:i})),t}get rasterFunction(){var e,t;const i=this.layer;let{rasterFunction:r}=i;const n=i.pixelFilter,s=!i.format||i.format.includes("jpg")||i.format.includes("png");r=this._addResampleRasterFunction(r);const o=null===(e=i.multidimensionalSubset)||void 0===e?void 0:e.areaOfInterest;return o&&(r=function(e,t){const i=new F.A({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}});return J(i,e)}(r,o)),s&&!n&&"vector-field"!==(null===(t=i.renderer)||void 0===t?void 0:t.type)&&(r=this.combineRendererWithRenderingRule(r)),r}combineRendererWithRenderingRule(e){var t;const i=this.layer,{rasterInfo:r,renderer:n}=i;return e=e||i.rasterFunction,n&&V(n)?J(G(n,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandNames:r.bandInfos.map((e=>{let{name:t}=e;return t})),convertColorRampToColormap:i.version<10.6,convertToRFT:!(null===(t=e)||void 0===t||!t.rasterFunctionDefinition),bandCount:r.bandCount}),e):e}_addResampleRasterFunction(e){var t;if("vector-field"!==(null===(t=this.layer.renderer)||void 0===t?void 0:t.type)||"Resample"===(null===e||void 0===e?void 0:e.functionName))return e;const i="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,r=this.layer.serviceRasterInfo.pixelSize;let n=new F.A({functionName:"Resample",functionArguments:{ResamplingType:i,InputCellSize:r}});return n=null!==e&&void 0!==e&&e.rasterFunctionDefinition?new F.A({rasterFunctionDefinition:q(n)}):n,J(n,e)}};(0,n._)([(0,p.MZ)()],K.prototype,"layer",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],K.prototype,"adjustAspectRatio",null),(0,n._)([(0,m.K)("adjustAspectRatio")],K.prototype,"writeAdjustAspectRatio",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],K.prototype,"bandIds",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],K.prototype,"compression",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],K.prototype,"compressionQuality",null),(0,n._)([(0,m.K)("compressionQuality")],K.prototype,"writeCompressionQuality",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],K.prototype,"compressionTolerance",null),(0,n._)([(0,m.K)("compressionTolerance")],K.prototype,"writeCompressionTolerance",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],K.prototype,"format",null),(0,n._)([(0,p.MZ)({type:String,json:{read:{reader:k.SZ.read},write:{writer:k.SZ.write}}})],K.prototype,"interpolation",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],K.prototype,"noData",null),(0,n._)([(0,p.MZ)({type:String,json:{read:{reader:k.hm.read},write:{writer:k.hm.write}}})],K.prototype,"noDataInterpretation",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],K.prototype,"pixelType",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],K.prototype,"lercVersion",void 0),(0,n._)([(0,m.K)("lercVersion")],K.prototype,"writeLercVersion",null),(0,n._)([(0,p.MZ)({type:Number})],K.prototype,"version",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],K.prototype,"mosaicRule",null),(0,n._)([(0,p.MZ)({json:{write:!0,name:"renderingRule"}})],K.prototype,"rasterFunction",null),K=(0,n._)([(0,d.$)("esri.layers.support.ExportImageServiceParameters")],K);var Y=i(44135),W=i(1900),X=i(16852),ee=i(13023),te=i(66486),ie=i(23032),re=i(42915),ne=i(68347),se=i(59648),oe=i(99846),ae=i(78937),le=i(20118),ue=i(1438),pe=i(54994),ce=i(19247);let de=class extends((0,o.O)(M.oY)){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};(0,n._)([(0,p.MZ)({type:ce.A,json:{read:!0}})],de.prototype,"fromGeometry",void 0),(0,n._)([(0,p.MZ)({type:ce.A,json:{read:!0,write:!0}})],de.prototype,"toGeometry",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],de.prototype,"objectIds",void 0),(0,n._)([(0,p.MZ)({type:String,json:{write:!0}})],de.prototype,"where",void 0),(0,n._)([(0,p.MZ)({type:Number,json:{write:!0}})],de.prototype,"maxCount",void 0),de=(0,n._)([(0,d.$)("esri.rest.support.FindImagesParameters")],de);const me=de,ye=e=>{let t=class extends e{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return(0,n._)([(0,p.MZ)({json:{write:!0}})],t.prototype,"make",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],t.prototype,"model",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],t.prototype,"focalLength",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],t.prototype,"pixelSize",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],t.prototype,"rows",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],t.prototype,"cols",void 0),t=(0,n._)([(0,d.$)("esri.rest.support.CameraInfoMixin")],t),t};let he=class extends(ye(M.oY)){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(e,t){t.acquisitionDate=null===e||void 0===e?void 0:e.getTime()}};(0,n._)([(0,p.MZ)({json:{write:!0}})],he.prototype,"id",void 0),(0,n._)([(0,p.MZ)({json:{name:"uri",write:!0}})],he.prototype,"referenceUri",void 0),(0,n._)([(0,p.MZ)({type:Date,json:{write:!0}})],he.prototype,"acquisitionDate",void 0),(0,n._)([(0,m.K)("acquisitionDate")],he.prototype,"writeAcquisitionDate",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],he.prototype,"cameraID",void 0),(0,n._)([(0,p.MZ)({type:ce.A,json:{write:!0}})],he.prototype,"center",void 0),(0,n._)([(0,p.MZ)({type:ce.A,json:{write:!0}})],he.prototype,"perspectiveCenter",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],he.prototype,"orientation",void 0),he=(0,n._)([(0,d.$)("esri.rest.support.ImageInspectionInfo")],he);const ge=he;let fe=class extends M.oY{constructor(){super(...arguments),this.images=null}};(0,n._)([(0,p.MZ)({type:[ge],json:{write:!0}})],fe.prototype,"images",void 0),fe=(0,n._)([(0,d.$)("esri.rest.support.FindImagesResult")],fe);const ve=fe;var we,Re=i(13312);let _e=we=class extends M.oY{constructor(e){super(e),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new we((0,w.o8)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};(0,n._)([(0,p.MZ)({type:[String],json:{name:"angleName",write:!0}})],_e.prototype,"angleNames",void 0),(0,n._)([(0,p.MZ)({type:ce.A,json:{write:!0}})],_e.prototype,"point",void 0),(0,n._)([(0,p.MZ)({type:Re.A,json:{write:!0}})],_e.prototype,"spatialReference",void 0),(0,n._)([(0,p.MZ)({type:S.jz,json:{write:!0}})],_e.prototype,"rasterId",void 0),_e=we=(0,n._)([(0,d.$)("esri.rest.support.ImageAngleParameters")],_e);const Se=_e;let be=class extends M.oY{constructor(e){super(e),this.north=null,this.up=null,this.spatialReference=null}};(0,n._)([(0,p.MZ)({type:Number,json:{write:!0}})],be.prototype,"north",void 0),(0,n._)([(0,p.MZ)({type:Number,json:{write:!0}})],be.prototype,"up",void 0),(0,n._)([(0,p.MZ)({type:Re.A,json:{write:!0}})],be.prototype,"spatialReference",void 0),be=(0,n._)([(0,d.$)("esri.rest.support.ImageAngleResult")],be);const Ae=be;var xe=i(31633),Ie=i(19902);const Me=new(i(45802).J)({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let Fe=class extends M.oY{constructor(){super(...arguments),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};var De;(0,n._)([(0,p.MZ)()],Fe.prototype,"type",void 0),(0,n._)([(0,p.MZ)({type:Me.apiValues,json:{read:Me.read,write:Me.write}})],Fe.prototype,"measureOperation",void 0),(0,n._)([(0,p.MZ)({type:$.A,json:{write:!0}})],Fe.prototype,"mosaicRule",void 0),(0,n._)([(0,p.MZ)({type:ce.A,json:{write:!0}})],Fe.prototype,"pixelSize",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],Fe.prototype,"raster",void 0),Fe=(0,n._)([(0,d.$)("esri.rest.support.BaseImageMeasureParameters")],Fe);let Pe=De=class extends Fe{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[i]=e.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new De((0,w.o8)({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,n._)([(0,p.MZ)({types:h.yR,json:{name:"fromGeometry",read:!0,write:!0}})],Pe.prototype,"geometry",void 0),(0,n._)([(0,m.K)("geometry")],Pe.prototype,"writeGeometry",null),(0,n._)([(0,p.MZ)({type:Me.apiValues,json:{write:Me.write}})],Pe.prototype,"measureOperation",null),(0,n._)([(0,p.MZ)({json:{read:!0}})],Pe.prototype,"is3D",void 0),(0,n._)([(0,p.MZ)({type:String,json:{read:xe.Sk.read,write:xe.Sk.write}})],Pe.prototype,"linearUnit",void 0),(0,n._)([(0,p.MZ)({type:String,json:{read:xe.dk.read,write:xe.dk.write}})],Pe.prototype,"areaUnit",void 0),Pe=De=(0,n._)([(0,d.$)("esri.rest.support.ImageAreaParameters")],Pe);const je=Pe;let Te=class extends M.oY{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};(0,n._)([(0,p.MZ)({type:Number,json:{read:!0,write:!0}})],Te.prototype,"value",void 0),(0,n._)([(0,p.MZ)({type:String,json:{read:!0,write:!0}})],Te.prototype,"displayValue",void 0),(0,n._)([(0,p.MZ)({type:Number,json:{read:!0,write:!0}})],Te.prototype,"uncertainty",void 0),Te=(0,n._)([(0,d.$)("esri.rest.support.BaseImageMeasureResult.BaseImageMeasureResultValue")],Te);let Oe=class extends Te{constructor(){super(...arguments),this.unit=null}};(0,n._)([(0,p.MZ)({type:String,json:{read:xe.Sk.read,write:xe.Sk.write}})],Oe.prototype,"unit",void 0),Oe=(0,n._)([(0,d.$)("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultLengthValue")],Oe);let Ne=class extends Te{constructor(){super(...arguments),this.unit=null}};(0,n._)([(0,p.MZ)({type:String,json:{read:xe.dk.read,write:xe.dk.write}})],Ne.prototype,"unit",void 0),Ne=(0,n._)([(0,d.$)("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAreaValue")],Ne);let Ze=class extends Te{constructor(){super(...arguments),this.unit=null}};(0,n._)([(0,p.MZ)({type:String,json:{read:xe.b$.read,write:xe.b$.write}})],Ze.prototype,"unit",void 0),Ze=(0,n._)([(0,d.$)("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAngleValue")],Ze);let Ce=class extends M.oY{constructor(){super(...arguments),this.name=null,this.sensorName=null}};(0,n._)([(0,p.MZ)({type:String,json:{read:!0,write:!0}})],Ce.prototype,"name",void 0),(0,n._)([(0,p.MZ)({type:String,json:{read:!0,write:!0}})],Ce.prototype,"sensorName",void 0),Ce=(0,n._)([(0,d.$)("esri.rest.support.BaseImageMeasureResult")],Ce);let Ve=class extends Ce{constructor(){super(...arguments),this.area=null,this.perimeter=null}};(0,n._)([(0,p.MZ)({type:Ne,json:{read:!0,write:!0}})],Ve.prototype,"area",void 0),(0,n._)([(0,p.MZ)({type:Oe,json:{read:!0,write:!0}})],Ve.prototype,"perimeter",void 0),Ve=(0,n._)([(0,d.$)("esri.rest.support.ImageAreaResult")],Ve);const Je=Ve;let Ee=class extends((0,o.O)(M.oY)){constructor(){super(...arguments),this.outSpatialReference=null}};(0,n._)([(0,p.MZ)({type:Re.A,json:{name:"outSR",write:!0}})],Ee.prototype,"outSpatialReference",void 0),Ee=(0,n._)([(0,d.$)("esri.rest.support.ImageBoundaryParameters")],Ee);const qe=Ee;var Ge=i(76797),ze=i(65215);let Le=class extends M.oY{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(e,t){return null==e?null:e.rings?ze.A.fromJSON(e):Ge.A.fromJSON(e)}};(0,n._)([(0,p.MZ)({type:Number,json:{write:!0}})],Le.prototype,"area",void 0),(0,n._)([(0,p.MZ)({json:{name:"shape",write:!0}})],Le.prototype,"geometry",void 0),(0,n._)([(0,b.w)("geometry")],Le.prototype,"readGeometry",null),Le=(0,n._)([(0,d.$)("esri.rest.support.ImageBoundaryResult")],Le);const Be=Le;var Ue;let He=Ue=class extends Fe{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(e,t,i){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[i]=e.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new Ue((0,w.o8)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,n._)([(0,p.MZ)({type:ce.A,json:{read:!0,write:!0}})],He.prototype,"fromGeometry",void 0),(0,n._)([(0,m.K)("fromGeometry")],He.prototype,"writeFromGeometry",null),(0,n._)([(0,p.MZ)({type:ce.A,json:{read:!0,write:!0}})],He.prototype,"toGeometry",void 0),(0,n._)([(0,p.MZ)({type:Me.apiValues,json:{write:Me.write}})],He.prototype,"measureOperation",null),(0,n._)([(0,p.MZ)({json:{read:!0}})],He.prototype,"is3D",void 0),(0,n._)([(0,p.MZ)({type:String,json:{read:xe.Sk.read,write:xe.Sk.write}})],He.prototype,"linearUnit",void 0),(0,n._)([(0,p.MZ)({type:String,json:{read:xe.b$.read,write:xe.b$.write}})],He.prototype,"angularUnit",void 0),He=Ue=(0,n._)([(0,d.$)("esri.rest.support.ImageDistanceParameters")],He);const Qe=He;let $e=class extends Ce{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};(0,n._)([(0,p.MZ)({type:Oe,json:{read:!0,write:!0}})],$e.prototype,"distance",void 0),(0,n._)([(0,p.MZ)({type:Ze,json:{read:!0,write:!0}})],$e.prototype,"azimuthAngle",void 0),(0,n._)([(0,p.MZ)({type:Ze,json:{read:!0,write:!0}})],$e.prototype,"elevationAngle",void 0),$e=(0,n._)([(0,d.$)("esri.rest.support.ImageDistanceResult")],$e);const ke=$e;var Ke=i(6409),Ye=i(38432),We=i(59187);let Xe=class extends((0,o.O)(M.oY)){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[i]=JSON.stringify(e.toJSON()))}};(0,n._)([(0,p.MZ)({types:h.yR,json:{read:Ie.rS,write:!0}})],Xe.prototype,"geometry",void 0),(0,n._)([(0,m.K)("geometry")],Xe.prototype,"writeGeometry",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],Xe.prototype,"objectIds",void 0),(0,n._)([(0,Ke.e)(Ye.x,{ignoreUnknown:!1,name:"spatialRel"})],Xe.prototype,"spatialRelationship",void 0),(0,n._)([(0,p.MZ)({type:We.A,json:{name:"time",write:!0}})],Xe.prototype,"timeExtent",void 0),(0,n._)([(0,p.MZ)({type:String,json:{write:!0}})],Xe.prototype,"where",void 0),Xe=(0,n._)([(0,d.$)("esri.rest.support.ImageGPSInfoParameters")],Xe);const et=Xe;let tt=class extends(ye(M.oY)){constructor(){super(...arguments),this.id=null}};(0,n._)([(0,p.MZ)({json:{write:!0}})],tt.prototype,"id",void 0),tt=(0,n._)([(0,d.$)("esri.rest.support.CameraInfo")],tt);const it=tt;let rt=class extends M.oY{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(e,t){t.acquisitionDate=null===e||void 0===e?void 0:e.getTime()}};(0,n._)([(0,p.MZ)({json:{write:!0}})],rt.prototype,"id",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],rt.prototype,"name",void 0),(0,n._)([(0,p.MZ)({type:Date,json:{write:!0}})],rt.prototype,"acquisitionDate",void 0),(0,n._)([(0,m.K)("acquisitionDate")],rt.prototype,"writeAcquisitionDate",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],rt.prototype,"cameraID",void 0),(0,n._)([(0,p.MZ)({type:ce.A,json:{write:!0}})],rt.prototype,"center",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],rt.prototype,"gps",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],rt.prototype,"orientation",void 0),rt=(0,n._)([(0,d.$)("esri.rest.support.ImageGPSInfo")],rt);const nt=rt;let st=class extends M.oY{constructor(){super(...arguments),this.images=null,this.cameras=null}};(0,n._)([(0,p.MZ)({type:[nt],json:{write:!0}})],st.prototype,"images",void 0),(0,n._)([(0,p.MZ)({type:[it],json:{write:!0}})],st.prototype,"cameras",void 0),st=(0,n._)([(0,d.$)("esri.rest.support.ImageGPSInfoResult")],st);const ot=st;var at;let lt=at=class extends Fe{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(e,t,i){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[i]=e.toJSON())}get measureOperation(){return this.operationType}clone(){return new at((0,w.o8)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,n._)([(0,p.MZ)({type:ce.A,json:{read:!0}})],lt.prototype,"fromGeometry",void 0),(0,n._)([(0,m.K)("fromGeometry")],lt.prototype,"writeFromGeometry",null),(0,n._)([(0,p.MZ)({type:ce.A,json:{read:!0,write:!0}})],lt.prototype,"toGeometry",void 0),(0,n._)([(0,p.MZ)({type:Me.apiValues,json:{write:Me.write}})],lt.prototype,"measureOperation",null),(0,n._)([(0,p.MZ)({json:{read:!0}})],lt.prototype,"operationType",void 0),(0,n._)([(0,p.MZ)({type:String,json:{read:xe.Sk.read,write:xe.Sk.write}})],lt.prototype,"linearUnit",void 0),lt=at=(0,n._)([(0,d.$)("esri.rest.support.ImageHeightParameters")],lt);const ut=lt;let pt=class extends Ce{constructor(){super(...arguments),this.height=null}};(0,n._)([(0,p.MZ)({type:Oe,json:{read:!0,write:!0}})],pt.prototype,"height",void 0),pt=(0,n._)([(0,d.$)("esri.rest.support.ImageHeightResult")],pt);const ct=pt;var dt,mt=i(46570);let yt=dt=class extends M.oY{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[i]=JSON.stringify(e.toJSON()))}set mosaicRule(e){var t;let i=e;null!==(t=i)&&void 0!==t&&t.mosaicMethod&&(i=$.A.fromJSON((0,r.A)((0,r.A)({},i.toJSON()),{},{mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation}))),this._set("mosaicRule",i)}writeMosaicRule(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON()))}set rasterFunction(e){var t;let i=e;null!==(t=i)&&void 0!==t&&t.rasterFunction&&(i=F.A.fromJSON((0,r.A)((0,r.A)({},i.toJSON()),{},{rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments}))),this._set("rasterFunction",i)}writeRasterFunction(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[i]=JSON.stringify(e.rasterFunctionDefinition))}writeRasterFunctions(e,t,i){null!=e&&(t[i]=JSON.stringify(e.map((e=>e.rasterFunctionDefinition||e.toJSON()))))}writePixelSize(e,t,i){null!=e&&(t[i]=JSON.stringify(e))}writeTimeExtent(e,t,i){if(null!=e){const r=null!=e.start?e.start.getTime():null,n=null!=e.end?e.end.getTime():null;t[i]=null!=r?null!=n?"".concat(r,",").concat(n):"".concat(r):null}}clone(){return new dt((0,w.o8)({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,n._)([(0,p.MZ)({json:{write:!0}})],yt.prototype,"geometry",void 0),(0,n._)([(0,m.K)("geometry")],yt.prototype,"writeGeometry",null),(0,n._)([(0,p.MZ)({type:$.A,json:{write:!0}})],yt.prototype,"mosaicRule",null),(0,n._)([(0,m.K)("mosaicRule")],yt.prototype,"writeMosaicRule",null),(0,n._)([(0,p.MZ)({type:F.A,json:{write:!0,name:"renderingRule"}})],yt.prototype,"rasterFunction",null),(0,n._)([(0,m.K)("rasterFunction")],yt.prototype,"writeRasterFunction",null),(0,n._)([(0,p.MZ)({type:[F.A],json:{write:!0,name:"renderingRules"}})],yt.prototype,"rasterFunctions",void 0),(0,n._)([(0,m.K)("rasterFunctions")],yt.prototype,"writeRasterFunctions",null),(0,n._)([(0,p.MZ)({type:ce.A,json:{write:!0}})],yt.prototype,"pixelSize",void 0),(0,n._)([(0,m.K)("pixelSize")],yt.prototype,"writePixelSize",null),(0,n._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],yt.prototype,"returnGeometry",void 0),(0,n._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],yt.prototype,"returnCatalogItems",void 0),(0,n._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],yt.prototype,"returnPixelValues",void 0),(0,n._)([(0,p.MZ)({type:Number,json:{write:!0}})],yt.prototype,"maxItemCount",void 0),(0,n._)([(0,p.MZ)({type:We.A,json:{write:{target:"time"}}})],yt.prototype,"timeExtent",void 0),(0,n._)([(0,m.K)("timeExtent")],yt.prototype,"writeTimeExtent",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],yt.prototype,"raster",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],yt.prototype,"viewId",void 0),(0,n._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],yt.prototype,"processAsMultidimensional",void 0),yt=dt=(0,n._)([(0,d.$)("esri.rest.support.ImageIdentifyParameters")],yt);const ht=yt;var gt=i(77725);let ft=class extends M.oY{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,n._)([(0,p.MZ)({json:{write:!0}})],ft.prototype,"catalogItemVisibilities",void 0),(0,n._)([(0,p.MZ)({type:gt.A,json:{write:!0}})],ft.prototype,"catalogItems",void 0),(0,n._)([(0,p.MZ)({type:ce.A,json:{write:!0}})],ft.prototype,"location",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],ft.prototype,"name",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],ft.prototype,"objectId",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],ft.prototype,"processedValues",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],ft.prototype,"properties",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],ft.prototype,"value",void 0),ft=(0,n._)([(0,d.$)("esri.rest.support.ImageIdentifyResult")],ft);const vt=ft;var wt;let Rt=wt=class extends M.oY{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(e,t,i){t.geometries={geometryType:"esriGeometryPoint",geometries:e.map((e=>e.toJSON()))}}clone(){var e,t;return new wt({geometries:null!==(e=null===(t=this.geometries)||void 0===t?void 0:t.map((e=>e.clone())))&&void 0!==e?e:[],rasterId:this.rasterId})}};(0,n._)([(0,p.MZ)({type:[ce.A],json:{write:!0}})],Rt.prototype,"geometries",void 0),(0,n._)([(0,m.K)("geometries")],Rt.prototype,"writeGeometry",null),(0,n._)([(0,p.MZ)({type:S.jz,json:{write:!0}})],Rt.prototype,"rasterId",void 0),Rt=wt=(0,n._)([(0,d.$)("esri.rest.support.ImagePixelLocationParameters")],Rt);const _t=Rt;let St=class extends M.oY{constructor(){super(...arguments),this.geometries=null}};(0,n._)([(0,p.MZ)({json:{write:!0}})],St.prototype,"geometries",void 0),St=(0,n._)([(0,d.$)("esri.rest.support.ImagePixelLocationResult")],St);const bt=St;var At;let xt=At=class extends Fe{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[i]=e.toJSON())}get measureOperation(){const{is3D:e,geometry:t}=this;return"point"===t.type?e?"point-3D":"point":e?"centroid-3D":"centroid"}clone(){return new At((0,w.o8)({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,n._)([(0,p.MZ)({types:h.yR,json:{name:"fromGeometry",read:Ie.rS}})],xt.prototype,"geometry",void 0),(0,n._)([(0,m.K)("geometry")],xt.prototype,"writeGeometry",null),(0,n._)([(0,p.MZ)({type:Me.apiValues,json:{read:Me.read,write:Me.write}})],xt.prototype,"measureOperation",null),(0,n._)([(0,p.MZ)({json:{read:!0}})],xt.prototype,"is3D",void 0),xt=At=(0,n._)([(0,d.$)("esri.rest.support.ImagePointParameters")],xt);const It=xt;let Mt=class extends Ce{constructor(){super(...arguments),this.point=null}};(0,n._)([(0,p.MZ)({type:ce.A,json:{name:"point.value",read:!0,write:!0}})],Mt.prototype,"point",void 0),Mt=(0,n._)([(0,d.$)("esri.rest.support.ImagePointResult")],Mt);const Ft=Mt;var Dt,Pt=i(66388);let jt=Dt=class extends M.oY{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[i]=e.toJSON())}set locations(e){if(null!==e&&void 0!==e&&e.length){const t=new Pt.A({spatialReference:e[0].spatialReference,points:e.map((e=>{let{x:t,y:i}=e;return[t,i]}))});this._set("locations",e),this.geometry=t}}clone(){return new Dt((0,w.o8)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};(0,n._)([(0,p.MZ)({types:h.yR,json:{read:Ie.rS}})],jt.prototype,"geometry",void 0),(0,n._)([(0,m.K)("geometry")],jt.prototype,"writeGeometry",null),(0,n._)([(0,p.MZ)()],jt.prototype,"locations",null),(0,n._)([(0,p.MZ)({type:String,json:{type:k.SZ.jsonValues,read:k.SZ.read,write:k.SZ.write}})],jt.prototype,"interpolation",void 0),(0,n._)([(0,p.MZ)({type:$.A,json:{write:!0}})],jt.prototype,"mosaicRule",void 0),(0,n._)([(0,p.MZ)({type:[String],json:{write:!0}})],jt.prototype,"outFields",void 0),(0,n._)([(0,p.MZ)({type:ce.A,json:{write:!0}})],jt.prototype,"pixelSize",void 0),(0,n._)([(0,p.MZ)({type:String,json:{write:!0}})],jt.prototype,"raster",void 0),(0,n._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],jt.prototype,"returnFirstValueOnly",void 0),(0,n._)([(0,p.MZ)({type:Number,json:{write:!0}})],jt.prototype,"sampleDistance",void 0),(0,n._)([(0,p.MZ)({type:Number,json:{write:!0}})],jt.prototype,"sampleCount",void 0),(0,n._)([(0,p.MZ)({type:Number,json:{write:!0}})],jt.prototype,"sliceId",void 0),(0,n._)([(0,p.MZ)({type:We.A,json:{read:{source:"time"},write:{target:"time"}}})],jt.prototype,"timeExtent",void 0),jt=Dt=(0,n._)([(0,d.$)("esri.rest.support.ImageSampleParameters")],jt);const Tt=jt;let Ot=class extends M.oY{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};(0,n._)([(0,p.MZ)({json:{write:!0}})],Ot.prototype,"attributes",void 0),(0,n._)([(0,p.MZ)({type:ce.A,json:{write:!0}})],Ot.prototype,"location",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],Ot.prototype,"locationId",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],Ot.prototype,"rasterId",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],Ot.prototype,"resolution",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],Ot.prototype,"pixelValue",void 0),Ot=(0,n._)([(0,d.$)("esri.rest.support.ImageSample")],Ot);const Nt=Ot;let Zt=class extends M.oY{constructor(){super(...arguments),this.samples=null}};(0,n._)([(0,p.MZ)({type:[Nt],json:{write:!0}})],Zt.prototype,"samples",void 0),Zt=(0,n._)([(0,d.$)("esri.rest.support.ImageSampleResult")],Zt);const Ct=Zt;let Vt=class extends((0,o.O)(M.oY)){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(e,t,i){t.geometries=null!==e&&void 0!==e&&e.length?{geometryType:(0,Ie.$B)(e[0]),geometries:e.map((e=>(0,r.A)((0,r.A)({},e.toJSON()),{},{spatialReference:void 0})))}:null}};(0,n._)([(0,p.MZ)({types:[h.yR]})],Vt.prototype,"geometries",void 0),(0,n._)([(0,m.K)("geometries")],Vt.prototype,"writeGeometries",null),(0,n._)([(0,p.MZ)({type:[S.jz],json:{write:!0}})],Vt.prototype,"rasterIds",void 0),(0,n._)([(0,p.MZ)({type:Re.A,json:{name:"outSR",write:!0}})],Vt.prototype,"outSpatialReference",void 0),Vt=(0,n._)([(0,d.$)("esri.rest.support.ImageToMapMultirayParameters")],Vt);const Jt=Vt;let Et=class extends((0,o.O)(M.oY)){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[i]=(0,r.A)((0,r.A)({},e.toJSON()),{},{spatialReference:void 0}))}};(0,n._)([(0,p.MZ)({types:h.yR,json:{read:Ie.rS,write:!0}})],Et.prototype,"geometry",void 0),(0,n._)([(0,m.K)("geometry")],Et.prototype,"writeGeometry",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],Et.prototype,"rasterId",void 0),(0,n._)([(0,p.MZ)({type:Re.A,json:{name:"outSR",write:!0}})],Et.prototype,"outSpatialReference",void 0),(0,n._)([(0,p.MZ)({json:{name:"options.DOff",write:!0}})],Et.prototype,"depthOffset",void 0),(0,n._)([(0,p.MZ)({json:{name:"options.Adjust",write:!0}})],Et.prototype,"adjust",void 0),Et=(0,n._)([(0,d.$)("esri.rest.support.ImageToMapParameters")],Et);const qt=Et;let Gt=class extends((0,o.O)(M.oY)){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};(0,n._)([(0,p.MZ)({type:String,json:{name:"uri",write:!0}})],Gt.prototype,"referenceUri",void 0),(0,n._)([(0,p.MZ)({type:Number,json:{write:!0}})],Gt.prototype,"rasterId",void 0),Gt=(0,n._)([(0,d.$)("esri.rest.support.ImageUrlParameters")],Gt);const zt=Gt;let Lt=class extends M.oY{constructor(){super(...arguments),this.url=null}};(0,n._)([(0,p.MZ)({json:{name:"imageURL",write:!0}})],Lt.prototype,"url",void 0),Lt=(0,n._)([(0,d.$)("esri.rest.support.ImageUrlResult")],Lt);const Bt=Lt;let Ut=class extends((0,o.O)(M.oY)){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[i]=JSON.stringify(e))}};(0,n._)([(0,p.MZ)({types:h.yR,json:{read:Ie.rS,write:!0}})],Ut.prototype,"geometry",void 0),(0,n._)([(0,m.K)("geometry")],Ut.prototype,"writeGeometry",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],Ut.prototype,"rasterId",void 0),(0,n._)([(0,p.MZ)({json:{name:"options.VisibleOnly",write:!0}})],Ut.prototype,"visibleOnly",void 0),Ut=(0,n._)([(0,d.$)("esri.rest.support.MapToImageParameters")],Ut);const Ht=Ut;let Qt=class extends M.oY{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(e,t){return e.spatialReference||(e=(0,r.A)((0,r.A)({},e),{},{spatialReference:t.Shape.spatialReference})),ce.A.fromJSON(e)}};(0,n._)([(0,p.MZ)({types:h.yR,json:{name:"Shape",read:Ie.rS,write:!0}})],Qt.prototype,"geometry",void 0),(0,n._)([(0,p.MZ)({json:{name:"Length",write:!0}})],Qt.prototype,"length",void 0),(0,n._)([(0,p.MZ)({json:{name:"Area",write:!0}})],Qt.prototype,"area",void 0),(0,n._)([(0,p.MZ)({json:{name:"Center",write:!0}})],Qt.prototype,"center",void 0),(0,n._)([(0,b.w)("center")],Qt.prototype,"readCenter",null),Qt=(0,n._)([(0,d.$)("esri.rest.support.MeasureAreaFromImageResult")],Qt);const $t=Qt;var kt;let Kt=kt=class extends M.oY{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[i]=(0,r.A)((0,r.A)({},e.toJSON()),{},{spatialReference:void 0}))}clone(){const e=(0,w.o8)({geometry:this.geometry,rasterId:this.rasterId});return new kt(e)}};(0,n._)([(0,p.MZ)({types:h.yR,json:{name:"fromGeometry",read:Ie.rS,write:!0}})],Kt.prototype,"geometry",void 0),(0,n._)([(0,m.K)("geometry")],Kt.prototype,"writeGeometry",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],Kt.prototype,"rasterId",void 0),Kt=kt=(0,n._)([(0,d.$)("esri.rest.support.MeasureFromImageParameters")],Kt);const Yt=Kt;let Wt=class extends M.oY{constructor(){super(...arguments),this.geometry=null,this.length=null}};(0,n._)([(0,p.MZ)({types:h.yR,json:{name:"Shape",read:Ie.rS,write:!0}})],Wt.prototype,"geometry",void 0),(0,n._)([(0,p.MZ)({json:{name:"Length",write:!0}})],Wt.prototype,"length",void 0),Wt=(0,n._)([(0,d.$)("esri.rest.support.MeasureLengthFromImageResult")],Wt);const Xt=Wt;function ei(e){const t=null===e||void 0===e?void 0:e.time;if(t&&(null!=t.start||null!=t.end)){const i=[];null!=t.start&&i.push(t.start),null==t.end||i.includes(t.end)||i.push(t.end),e.time=i.join(",")}}async function ti(e,t,i){t=(0,S.PZ)(mt.A,t);const n=(0,pe.Dl)(e),s=t.geometry?[t.geometry]:[],o=await(0,ue.el)(s),a=t.toJSON();ei(a);const l=null===o||void 0===o?void 0:o[0];null!=l&&(a.geometry=si(l));const u=(0,pe.lF)((0,r.A)((0,r.A)({},n.query),{},{f:"json"},a));return(0,pe.jV)(u,i)}async function ii(e,t,i){t=(0,S.PZ)(ht,t);const n=(0,pe.Dl)(e),s=t.geometry?[t.geometry]:[];return(0,ue.el)(s).then((e=>{const s=t.toJSON(),o=null===e||void 0===e?void 0:e[0];null!=o&&(s.geometry=JSON.stringify(si(o)));const a=(0,pe.lF)((0,r.A)((0,r.A)({},n.query),{},{f:"json"},s)),l=(0,pe.jV)(a,i);return(0,v.A)(n.path+"/identify",l)})).then((e=>vt.fromJSON(e.data)))}async function ri(e,t,i,n){const s=(0,pe.Dl)(e),o=await(0,ue.el)(i),a=t.toJSON();null!=o[0]&&(a.fromGeometry=JSON.stringify(si(o[0]))),null!=o[1]&&(a.toGeometry=JSON.stringify(si(o[1])));const l=(0,pe.lF)((0,r.A)((0,r.A)({},s.query),{},{f:"json"},a)),u=(0,pe.jV)(l,n),{data:p}=await(0,v.A)(s.path+"/measure",u);return p}async function ni(e,t,i){t=(0,S.PZ)(Yt,t);const n=(0,pe.Dl)(e),s=t.toJSON(),o=(0,pe.lF)((0,r.A)((0,r.A)({},n.query),{},{f:"json"},s)),a=(0,pe.jV)(o,i),{data:l}=await(0,v.A)(n.path+"/measureFromImage",a);return l}function si(e){var t;const i=e.toJSON();return null!==(t=e.spatialReference)&&void 0!==t&&t.imageCoordinateSystem&&(i.spatialReference=oi(e.spatialReference)),i}function oi(e){const{imageCoordinateSystem:t}=e;if(t){const{id:e,referenceServiceName:i}=t;return null!=e?i?{icsid:e,icsns:i}:{icsid:e}:{ics:t}}return e.toJSON()}function ai(e,t){if(!e.imageCoordinateSystem)return(0,A.YX)(e);const i=oi(e),{icsid:r,icsns:n}=i;return null!=r&&(null==n||null!==t&&void 0!==t&&t.toLowerCase().includes("/"+n.toLowerCase()+"/"))?"0:".concat(r):JSON.stringify(i)}var li=i(25213),ui=i(49653);var pi=i(37713),ci=i(53104),di=i(14009),mi=i(68295),yi=i(46533);const hi=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),gi=(0,S.Qp)(S.GB,{min:0,max:255});const fi=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new K({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.length<1||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,i){null!=e&&"lerc"!==this.format&&(t[i]=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?$.A.fromJSON(t):null}get fieldsIndex(){return this.fields?new W.A(this.fields):null}set format(e){e&&hi.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){var t;let i=e;null!==(t=i)&&void 0!==t&&t.mosaicMethod&&(i=$.A.fromJSON((0,r.A)((0,r.A)({},i.toJSON()),{},{mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation}))),this._set("mosaicRule",i)}readMosaicRule(e,t){const i=e||t.mosaicRule;return i?$.A.fromJSON(i):this._isMosaicRuleSupported(t)?$.A.fromJSON(t):null}writeMosaicRule(e,t,i){let r=this.mosaicRule;const n=this.definitionExpression;r?n&&n!==r.where&&(r=r.clone(),r.where=n):n&&(r=new $.A({where:n})),this._isValidCustomizedMosaicRule(r)&&(t[i]=r.toJSON())}writeNoData(e,t,i){null!=e&&"number"==typeof e&&(t[i]=gi(e))}readObjectIdField(e,t){if(!e){const i=t.fields.find((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=null===i||void 0===i?void 0:i.name}return e}get parsedUrl(){return(0,_.An)(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}get renderer(){const{activePresetRendererName:e,presetRenderers:t}=this;if(e){const i=null===t||void 0===t?void 0:t.find((t=>{let{name:i}=t;return i===e}));return null===i||void 0===i?void 0:i.renderer.clone()}return this.internalRenderer}set renderer(e){this.activePresetRendererName=null,this.internalRenderer=e}set internalRenderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("internalRenderer",e)}readRenderer(e,t,i){var r;const n=null===t||void 0===t||null===(r=t.layerDefinition)||void 0===r||null===(r=r.drawingInfo)||void 0===r?void 0:r.renderer,s=(0,f.LF)(n,i);return null==s?null:("vector-field"===s.type&&t.symbolTileSize&&!n.symbolTileSize&&(s.symbolTileSize=t.symbolTileSize),V(s)||c.A.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),s)}writeRenderer(e,t,i){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){var e,t;const i=this._rasterAttributeTableFieldPrefix,r=new Y.A({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),n=new Y.A({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),s=new Y.A({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let o=this.fields?(0,w.o8)(this.fields):[];o.push(n),null!==(e=this.capabilities)&&void 0!==e&&e.operations.supportsQuery&&this.fields&&this.fields.length>0&&o.push(r),this.version>=10.4&&null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&o.push(s),null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{o.push(new Y.A({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),this._isVectorDataSet()&&(o.push(new Y.A({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),o.push(new Y.A({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:a}=null!==(t=this.rasterInfo)&&void 0!==t?t:{};if(null!=a){const e=a.fields.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=(0,w.o8)(e);return t.name=i+e.name,t}));o=o.concat(e)}return o}set rasterFunction(e){var t;let i=e;null!==(t=i)&&void 0!==t&&t.rasterFunction&&(i=F.A.fromJSON((0,r.A)((0,r.A)({},i.toJSON()),{},{rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments}))),this._set("rasterFunction",i)}readRasterFunction(e,t){const i=t.rasterFunctionInfos;return t.renderingRule||null!==i&&void 0!==i&&i.length&&"None"!==i[0].name?this._isRFTJson(t.renderingRule)?F.A.fromJSON({rasterFunctionDefinition:t.renderingRule}):F.A.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const i=e||t.extent.spatialReference;return i?Re.A.fromJSON(i):null}readPixelType(e){return k.e8.fromJSON(e)||e}writePixelType(e,t,i){null!=this.serviceRasterInfo&&this.pixelType===this.serviceRasterInfo.pixelType||(t[i]=k.e8.toJSON(e))}readVersion(e,t){let i=t.currentVersion;return i||(i=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),i}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let i=e;const{renderer:n,symbolizer:s,pixelFilter:o,bandIds:a}=this;if(!this._isPicture()&&n&&s&&!o){const o=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(n.toJSON()),l=this._rasterJobHandler.instance;if(l){o&&(s.bind(),await l.updateSymbolizer(s,t),this._cachedRendererJson=n.toJSON());const u=await l.symbolize((0,r.A)({bandIds:a},e),t);i={extent:e.extent,pixelBlock:u}}else i={extent:e.extent,pixelBlock:s.symbolize((0,r.A)({bandIds:a},e))}}return i}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsComputeAngles)throw new a.A("imagery-layer:compute-angles","this operation is not supported on the input image service");return async function(e,t,i){var n,s;const o=(t=(0,S.PZ)(Se,t)).toJSON();null!=o.angleName&&(o.angleName=o.angleName.join(",")),null!==(n=t)&&void 0!==n&&null!==(n=n.point)&&void 0!==n&&null!==(n=n.spatialReference)&&void 0!==n&&n.imageCoordinateSystem&&(o.point.spatialReference=oi(t.point.spatialReference)),(null===(s=t)||void 0===s||null===(s=s.spatialReference)||void 0===s?void 0:s.imageCoordinateSystem)&&(o.spatialReference=ai(t.spatialReference));const a=(0,pe.Dl)(e),l=(0,pe.lF)((0,r.A)((0,r.A)({},a.query),{},{f:"json"},o)),u=(0,pe.jV)(l,i),{data:p}=await(0,v.A)("".concat(a.path,"/computeAngles"),u);return p.spatialReference=p.spatialReference?null!=p.spatialReference.geodataXform?new Re.A({wkid:0,imageCoordinateSystem:p.spatialReference}):Re.A.fromJSON(p.spatialReference):null,"NaN"===p.north&&(p.north=null),"NaN"===p.up&&(p.up=null),new Ae(p)}(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsComputePixelLocation)throw new a.A("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return async function(e,t,i){const n=(t=(0,S.PZ)(_t,t)).toJSON(),{geometries:s}=t;if(s)for(let r=0;r<s.length;r++){var o;(null===(o=s[r].spatialReference)||void 0===o?void 0:o.imageCoordinateSystem)&&(n.geometries.geometries[r].spatialReference=oi(s[r].spatialReference))}const a=(0,pe.Dl)(e),l=(0,pe.lF)((0,r.A)((0,r.A)({},a.query),{},{f:"json"},n)),u=(0,pe.jV)(l,i),{data:p}=await(0,v.A)("".concat(a.path,"/computePixelLocation"),u);return bt.fromJSON(p)}(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsComputeHistograms)throw new a.A("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=(0,w.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,i){const r=await ti(e,t,i),n=(0,pe.Dl)(e),{data:s}=await(0,v.A)("".concat(n.path,"/computeHistograms"),r);return{histograms:s.histograms}}(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsComputeStatisticsHistograms)throw new a.A("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=(0,w.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,i){const r=await ti(e,t,i),n=(0,pe.Dl)(e),{data:s}=await(0,v.A)("".concat(n.path,"/computeStatisticsHistograms"),r),{statistics:o}=s;return null!==o&&void 0!==o&&o.length&&o.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:o,histograms:s.histograms}}(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const i=await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal);if(!("base-and-top"===e.operationType?i.mensuration.supportsHeightFromBaseAndTop:"base-and-top-shadow"===e.operationType?i.mensuration.supportsHeightFromBaseAndTopShadow:i.mensuration.supportsHeightFromTopAndTopShadow))throw new a.A("imagery-layer:measure-height","this operation is not supported on the input image service");return e=(0,w.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,i){t=(0,S.PZ)(ut,t);const r=await ri(e,t,[t.fromGeometry,t.toGeometry],i);return ct.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const i=await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal);if(!i.mensuration.supportsAreaAndPerimeter||e.is3D&&!i.mensuration.supports3D)throw new a.A("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=(0,w.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,i){t=(0,S.PZ)(je,t);const r=await ri(e,t,[t.geometry],i);return Je.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const i=await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal);if(!i.mensuration.supportsDistanceAndAngle||e.is3D&&!i.mensuration.supports3D)throw new a.A("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=(0,w.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,i){t=(0,S.PZ)(Qe,t);const r=await ri(e,t,[t.fromGeometry,t.toGeometry],i);return ke.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const i=await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal);if(!i.mensuration.supportsPointOrCentroid||e.is3D&&!i.mensuration.supports3D)throw new a.A("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=(0,w.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,i){t=(0,S.PZ)(It,t);const r=await ri(e,t,[t.geometry],i);return Ft.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measureLengthFromImage(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsMeasureFromImage)throw new a.A("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if("polyline"!==e.geometry.type)throw new a.A("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return async function(e,t,i){const r=await ni(e,t,i);return Xt.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measureAreaFromImage(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsMeasureFromImage)throw new a.A("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if("polygon"!==e.geometry.type)throw new a.A("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return async function(e,t,i){const r=await ni(e,t,i);return $t.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return null!=t?t.get(e):void 0}getFieldDomain(e,t){const i=this.getField(e);return i?i.domain:null}async fetchImage(e,t,r){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(null==e||null==t||null==r)throw new a.A("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const e=await this._generateRasterInfo(this.rasterFunction,{signal:n.signal});e&&(this.rasterInfo=e)}const s=this.getExportImageServiceParameters(e,t,r,n.timeExtent);if(null==s){var o;if(n.requestAsImageElement&&this._canRequestImageElement(this.format)){const e=document.createElement("canvas");return e.width=t,e.height=r,n.returnImageBitmap?{imageBitmap:await(0,X.m)(e,"".concat(i(this.parsedUrl),"/exportImage"),n.signal)}:{imageOrCanvasElement:e}}const{bandIds:s,rasterInfo:a}=this,l=null!==(o=(null===s||void 0===s?void 0:s.length)||a.bandCount)&&void 0!==o?o:0,u=t*r,p=a.pixelType,c=[];for(let e=0;e<l;e++)c.push(te.A.createEmptyBand(p,u));return{pixelData:{pixelBlock:new te.A({width:t,height:r,pixels:c,mask:new Uint8Array(u),pixelType:p}),extent:e}}}const l=!!n.requestAsImageElement&&!this.pixelFilter,u=l&&!!n.returnImageBitmap,p={imageServiceParameters:s,imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:l,returnImageBitmap:u,signal:n.signal};return this._requestArrayBuffer(p)}fetchKeyProperties(e){return(0,v.A)(i(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?null===e||void 0===e?void 0:e.rasterFunction:null})}).then((e=>e.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new a.A("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,v.A)(i(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?null===e||void 0===e?void 0:e.rasterFunction:null})}).then((e=>gt.A.fromJSON(e.data)))}getCatalogItemRasterInfo(e,t){const n=(0,r.A)((0,r.A)({},t),{},{query:this._getQueryParams()});return async function(e,t,i){var n,s;const o=(0,pe.Dl)(e),a=(0,pe.lF)((0,r.A)((0,r.A)({},null===o||void 0===o?void 0:o.query),{},{f:"json"})),l=(0,pe.jV)(a,i),u="".concat(null===o||void 0===o?void 0:o.path,"/").concat(t,"/info"),p=(0,v.A)("".concat(u),l),c=(0,v.A)("".concat(u,"/keyProperties"),l),d=await Promise.allSettled([p,c]),m="fulfilled"===d[0].status?d[0].value.data:null,y="fulfilled"===d[1].status?d[1].value.data:null;let h=null;(null===(n=m.statistics)||void 0===n?void 0:n.length)&&(h=m.statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))));const g=Ge.A.fromJSON(m.extent),f=Math.ceil(g.width/m.pixelSizeX-.1),w=Math.ceil(g.height/m.pixelSizeY-.1),R=g.spatialReference,_=new ce.A({x:m.pixelSizeX,y:m.pixelSizeY,spatialReference:R}),S=null!==(s=m.histograms)&&void 0!==s&&s.length?m.histograms:null,b=new ui.A({origin:m.origin,blockWidth:m.blockWidth,blockHeight:m.blockHeight,firstPyramidLevel:m.firstPyramidLevel,maximumPyramidLevel:m.maxPyramidLevel});return new ie.A({width:f,height:w,bandCount:m.bandCount,extent:g,spatialReference:R,pixelSize:_,pixelType:m.pixelType.toLowerCase(),statistics:h,histograms:S,keyProperties:y,storageInfo:b})}(i(this.parsedUrl),e,n)}async getCatalogItemICSInfo(e,t){var n,s;const{data:o}=await(0,v.A)(i(this.parsedUrl)+"/"+e+"/info/ics",(0,r.A)({query:this._getQueryParams()},t)),a=null===o||void 0===o?void 0:o.ics;if(!a)return;let l=null;try{l=(await(0,v.A)(i(this.parsedUrl)+"/"+e+"/info",(0,r.A)({query:this._getQueryParams()},t))).data.extent}catch(V){}if(null===(n=l)||void 0===n||!n.spatialReference)return{ics:a,icsToPixelTransform:null,icsExtent:null,northDirection:null};const u=this.version>=10.7?(0,v.A)(i(this.parsedUrl)+"/"+e+"/info/icstopixel",(0,r.A)({query:this._getQueryParams()},t)).then((e=>e.data)).catch((()=>({}))):{},p=l.spatialReference,c={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[l]}),inSR:(0,A.YX)(p),outSR:"0:"+e},d=(0,v.A)(i(this.parsedUrl)+"/project",(0,r.A)({query:this._getQueryParams(c)},t)).then((e=>e.data)).catch((()=>({}))),m=(l.xmin+l.xmax)/2,y=(l.ymax-l.ymin)/6,h=l.ymin+y,g=[];for(let i=0;i<5;i++)g.push({x:m,y:h+y*i});const f={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:g}),inSR:(0,A.YX)(p),outSR:"0:"+e},w=(0,v.A)(i(this.parsedUrl)+"/project",(0,r.A)({query:this._getQueryParams(f)},t)).then((e=>e.data)).catch((()=>({}))),R=await Promise.all([u,d,w]);let _=R[0].ipxf;if(null==_){var S,b,x;const e=null===(S=a.geodataXform)||void 0===S?void 0:S.xf_0;"topup"===(null===e||void 0===e||null===(b=e.name)||void 0===b?void 0:b.toLowerCase())&&6===(null===e||void 0===e||null===(x=e.coefficients)||void 0===x?void 0:x.length)&&(_={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const I=Ge.A.fromJSON(null===(s=R[1])||void 0===s||null===(s=s.geometries)||void 0===s?void 0:s[0]);I&&(I.spatialReference=new Re.A({wkid:0,imageCoordinateSystem:a}));const M=R[2].geometries?R[2].geometries.filter((e=>null!=(null===e||void 0===e?void 0:e.x)&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],F=M.length;if(F<3)return{ics:a,icsToPixelTransform:_,icsExtent:I,northDirection:null};let D=0,P=0,j=0,T=0;for(let i=0;i<F;i++)D+=M[i].x,P+=M[i].y,j+=M[i].x*M[i].x,T+=M[i].x*M[i].y;const O=(F*T-D*P)/(F*j-D*D);let N=0;const Z=M[4].x>M[0].x,C=M[4].y>M[0].y;return O===1/0?N=C?90:270:0===O?N=Z?0:180:O>0?N=Z?180*Math.atan(O)/Math.PI:180*Math.atan(O)/Math.PI+180:O<0&&(N=C?180+180*Math.atan(O)/Math.PI:360+180*Math.atan(O)/Math.PI),{ics:a,icsToPixelTransform:_,icsExtent:I,northDirection:N}}async generateRasterInfo(e,t){var n,s;e=(0,S.PZ)(F.A,e);const o=(0,r.A)((0,r.A)({},t),{},{query:this._getQueryParams()});if(!e||"none"===(null===(n=e.functionName)||void 0===n?void 0:n.toLowerCase())||this._isVectorFieldResampleFunction(e))return null!==(s=this.serviceRasterInfo)&&void 0!==s?s:(0,li.Tw)(i(this.parsedUrl),this.sourceJSON,o);const l=function(e){const t=JSON.stringify(e),i=t.includes('"rasterFunctionDefinition":{'),r=i?t.match(/"type":"(.*?FunctionArguments")/gi):t.match(/"rasterFunction":"(.*?")/gi),n=null===r||void 0===r?void 0:r.map((e=>i?e.slice(8,-18):e.slice(18,-1)));return n?n.join("/"):null}(e);if(!l)throw new a.A("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[l])return this._functionRasterInfos[l];const u=(0,li.X6)(i(this.parsedUrl),e,o);this._functionRasterInfos[l]=u;try{return await u}catch(he){throw this._functionRasterInfos[l]=null,he}}getExportImageServiceParameters(e,t,n,s){var o,a;const l=ai((e=e.clone().shiftCentralMeridian()).spatialReference,i(this.parsedUrl));this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const u=this.exportImageServiceParameters.toJSON(),{bandIds:p,noData:c}=u;let{renderingRule:d}=u;const m=null===(o=this.rasterFunction)||void 0===o?void 0:o.rasterFunctionDefinition,y=null===(a=this.renderer)||void 0===a?void 0:a.type,h=!y||"raster-stretch"===y||"raster-colormap"===y||"unique-value"===y||"class-breaks"===y||"raster-shaded-relief"===y;if(null!==p&&void 0!==p&&p.length&&this._hasRasterFunction(this.rasterFunction)&&!m&&h){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:p}};if("Stretch"===d.rasterFunction)e.rasterFunctionArguments.Raster=d.rasterFunctionArguments.Raster,d.rasterFunctionArguments.Raster=e;else if("Colormap"===d.rasterFunction){const t=d.rasterFunctionArguments.Raster;"Stretch"===(null===t||void 0===t?void 0:t.rasterFunction)?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,d.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=d,d=e;u.bandIds=void 0}else u.bandIds=null===p||void 0===p?void 0:p.join(",");Array.isArray(c)&&c.length>0&&(u.noData=c.join(","));const g=this._processMultidimensionalIntersection(null,s,this.exportImageServiceParameters.mosaicRule);if(g.isOutSide)return null;u.mosaicRule=null!=g.mosaicRule?JSON.stringify(g.mosaicRule):null,s=g.timeExtent,u.renderingRule=this._getRenderingRuleString(F.A.fromJSON(d));const f={};if(null!=s){const{start:e,end:t}=s.toJSON();e&&t&&e===t?f.time=""+e:null==e&&null==t||(f.time="".concat(null!==e&&void 0!==e?e:"null",",").concat(null!==t&&void 0!==t?t:"null"))}return(0,r.A)((0,r.A)({bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:l,imageSR:l,size:t+","+n},u),f)}async getSamples(e,t){const i=await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal);if(null===i||void 0===i||!i.operations.supportsGetSamples)throw new a.A("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,w.o8)(e);const{raster:n}=this;return n&&null==e.raster&&(e.raster=n),async function(e,t,i){var n,s;const o=(t=(0,S.PZ)(Tt,t)).toJSON();ei(o),(null===(n=o.outFields)||void 0===n?void 0:n.length)&&(o.outFields=o.outFields.join(","));const a=await(0,ue.el)(t.geometry),l=null===a||void 0===a?void 0:a[0];null!=l&&(o.geometry=si(l));const u=(0,pe.Dl)(e),p=(0,pe.lF)((0,r.A)((0,r.A)({},u.query),{},{f:"json"},o)),c=(0,pe.jV)(p,i),{data:d}=await(0,v.A)("".concat(u.path,"/getSamples"),c),m=null===d||void 0===d||null===(s=d.samples)||void 0===s?void 0:s.map((e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map((e=>Number(e)));return(0,r.A)((0,r.A)({},e),{},{pixelValue:t})}));return Ct.fromJSON({samples:m})}(this.url,e,this._getRequestOptions(t))}async identify(e,t){var i;if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsIdentify)throw new a.A("imagery-layer:identify","identify operation is not supported on the input image service");e=(0,w.o8)(e),this.version<10.91&&"extent"===(null===(i=e.geometry)||void 0===i?void 0:i.type)&&(e.geometry=ze.A.fromExtent(e.geometry));const r=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(r.isOutSide)throw new a.A("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=r.timeExtent,e.mosaicRule=r.mosaicRule;const{raster:n,rasterFunction:s}=this;return s&&null==e.rasterFunction&&(e.rasterFunction=s),n&&null==e.raster&&(e.raster=n),ii(this.url,e,this._getRequestOptions(t))}async imageToMap(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsImageToMap)throw new a.A("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return async function(e,t,i){const n=(t=(0,S.PZ)(qt,t)).toJSON();t.geometry.spatialReference.imageCoordinateSystem&&(n.geometry=si(t.geometry)),t.depthOffset&&t.adjust||delete n.options;const s=(0,pe.Dl)(e),o=(0,pe.lF)((0,r.A)((0,r.A)({},s.query),{},{f:"json"},n)),a=(0,pe.jV)(o,i),{data:l}=await(0,v.A)("".concat(s.path,"/imageToMap"),a);return(0,Ie.rS)(l)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async imageToMapMultiray(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsImageToMapMultiray)throw new a.A("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return async function(e,t,i){var n;const s=(t=(0,S.PZ)(Jt,t)).toJSON();(null===(n=t.rasterIds)||void 0===n?void 0:n.length)&&(s.rasterIds=t.rasterIds.join(","));const o=(0,pe.Dl)(e),a=(0,pe.lF)((0,r.A)((0,r.A)({},o.query),{},{f:"json"},s)),l=(0,pe.jV)(a,i),{data:u}=await(0,v.A)("".concat(o.path,"/imageToMapMultiray"),l);return(0,Ie.rS)(u)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async mapToImage(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsMapToImage)throw new a.A("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return async function(e,t,i){var n,s;const o=(t=(0,S.PZ)(Ht,t)).toJSON(),a=await(0,ue.el)(t.geometry),l=null===a||void 0===a?void 0:a[0];null!=l&&(o.geometry=si(l)),t.visibleOnly||delete o.options;const u=null!==(n=null===l||void 0===l?void 0:l.spatialReference)&&void 0!==n?n:null===(s=t.geometry)||void 0===s?void 0:s.spatialReference;u&&(o.inSR=ai(u));const p=(0,pe.Dl)(e),c=(0,pe.lF)((0,r.A)((0,r.A)({},p.query),{},{f:"json"},o)),d=(0,pe.jV)(c,i),{data:m}=await(0,v.A)("".concat(p.path,"/mapToImage"),d);return(0,Ie.rS)(m)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async findImages(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsFindImages)throw new a.A("imagery-layer:find-images","findImages operation is not supported on the input image service");return async function(e,t,i){var n;const s=(t=(0,S.PZ)(me,t)).toJSON(),o=await(0,ue.el)([t.fromGeometry,t.toGeometry]);null!=o[0]&&(s.fromGeometry=si(o[0]),o[0].spatialReference&&(s.inSR=ai(o[0].spatialReference))),null!=o[1]&&(s.toGeometry=si(o[1])),(null===(n=t.objectIds)||void 0===n?void 0:n.length)&&(s.objectIds=s.objectIds.join(","));const a=(0,pe.Dl)(e),l=(0,pe.lF)((0,r.A)((0,r.A)({},a.query),{},{f:"json"},s)),u=(0,pe.jV)(l,i),{data:p}=await(0,v.A)("".concat(a.path,"/find"),u);return ve.fromJSON(p)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async getImageUrl(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsGetImageUrl)throw new a.A("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return async function(e,t,i){const n=(t=(0,S.PZ)(zt,t)).toJSON(),s=(0,pe.Dl)(e),o=(0,pe.lF)((0,r.A)((0,r.A)({},s.query),{},{f:"json"},n)),a=(0,pe.jV)(o,i),{data:l}=await(0,v.A)("".concat(s.path,"/getImageUrl"),a);return Bt.fromJSON(l)}(i(this.parsedUrl),e,this._getRequestOptions(t))}createQuery(){return new mi.A({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,t){var n;if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsQueryBoundary)throw new a.A("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=null!==(n=e)&&void 0!==n?n:{outSpatialReference:this.spatialReference},async function(e,t,i){t=(0,S.PZ)(qe,t);const n=(0,pe.Dl)(e),s=t.toJSON();t.outSpatialReference&&(s.outSR=ai(t.outSpatialReference));const o=(0,pe.lF)((0,r.A)((0,r.A)({},n.query),{},{f:"json"},s)),a=(0,pe.jV)(o,i),{data:l}=await(0,v.A)(n.path+"/queryBoundary",a);return Be.fromJSON(l)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,di.s)(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,ci.V)(this.url,e,t)}async queryGPSInfo(e,t){var n;if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsQueryGPSInfo)throw new a.A("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=null!==(n=e)&&void 0!==n?n:{where:"1=1"},async function(e,t,i){var n,s,o;const a=(t=(0,S.PZ)(et,t)).toJSON();ei(a),null!==(n=a.objectIds)&&void 0!==n&&n.length&&(a.objectIds=a.objectIds.join(",")),a.geometry||a.objectIds||a.time||a.where||(a.where="1=1");const l=await(0,ue.el)(t.geometry),u=null===l||void 0===l?void 0:l[0];null!=u&&(a.geometry=si(u));const p=null!==(s=null===u||void 0===u?void 0:u.spatialReference)&&void 0!==s?s:null===(o=t.geometry)||void 0===o?void 0:o.spatialReference;p&&(a.inSR=ai(p));const c=(0,pe.Dl)(e),d=(0,pe.lF)((0,r.A)((0,r.A)({},c.query),{},{f:"json"},a)),m=(0,pe.jV)(d,i),{data:y}=await(0,v.A)("".concat(c.path,"/queryGPSInfo"),m);return ot.fromJSON(y)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,pi.I)(this.url,e,t)}async queryVisibleRasters(e,t){var i;if(!e)throw new a.A("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:n,returnDomainValues:s,returnTopmostRaster:o,showNoDataRecords:l}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let u=!1,p=null,c=null;const d="raster.servicepixelvalue",m=this._rasterFunctionNamesIndex;if(null!=e.outFields&&(u=e.outFields.some((e=>!e.toLowerCase().includes(d))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().includes(d)&&e.length>24)).map((e=>{const t=e.slice(25);return[this._updateRenderingRulesFunctionName(t,m),t]}));p=t.map((e=>new F.A({functionName:e[0]}))),c=t.map((e=>e[1]));const{rasterFunction:i}=this;0===p.length?null!==i&&void 0!==i&&i.functionName?(p.push(i),c.push(i.functionName)):p=null:(null===i||void 0===i?void 0:i.functionName)&&!p.some((e=>e.functionName===i.functionName))&&(p.push(i),c.push(i.functionName))}const y=null==e.outSpatialReference||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:h}=this;let g=e.timeExtent||this.timeExtent;if(h){var f;const{isOutside:t,intersection:i}=(0,ne.Rp)(h,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:null===(f=this.exportImageServiceParameters.mosaicRule)||void 0===f?void 0:f.multidimensionalDefinition});if(t)throw new a.A("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");null!=(null===i||void 0===i?void 0:i.timeExtent)&&(g=i.timeExtent)}const v=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,g);let w=e.geometry;this.version<10.91&&"extent"===(null===(i=w)||void 0===i?void 0:i.type)&&(w=ze.A.fromExtent(w));const R=this._getQueryParams({geometry:w,timeExtent:g,mosaicRule:v,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:p,pixelSize:n,returnCatalogItems:u,returnGeometry:y,raster:this.raster,maxItemCount:o?1:null});delete R.f;const _=new ht(R);try{var S,b,A,x;await this._generateRasterInfo(this.rasterFunction);const i=await ii(this.url,_,{signal:null===t||void 0===t?void 0:t.signal,query:(0,r.A)({},this.customParameters)}),n=e.outFields,o=null!=i.value&&i.value.toLowerCase().includes("nodata");if(!u||y||null===i||void 0===i||null===(S=i.catalogItems)||void 0===S||!S.features.length||!l&&o)return this._processVisibleRastersResponse(i,{returnDomainValues:s,templateRRFunctionNames:c,showNoDataRecords:l,templateFields:n});const a=this.objectIdField||"ObjectId",p=null!==(b=null===(A=i.catalogItems)||void 0===A?void 0:A.features)&&void 0!==b?b:[],d=p.map((e=>{var t;return null===(t=e.attributes)||void 0===t?void 0:t[a]})),m=new mi.A({objectIds:d,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[a]}),h=await this.queryRasters(m);return null!==h&&void 0!==h&&null!==(x=h.features)&&void 0!==x&&x.length&&h.features.forEach((t=>{p.forEach((i=>{i.attributes[a]===t.attributes[a]&&t.geometry&&(i.geometry=t.geometry.clone(),null!=e.outSpatialReference&&(i.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(i,{returnDomainValues:s,templateRRFunctionNames:c,showNoDataRecords:l,templateFields:n})}catch(I){throw new a.A("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const r=(0,v.A)(i(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.statistics})),n=(0,v.A)(i(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.histograms})),s=await Promise.all([r,n]);return s[0]&&s[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:s[0]||null,histograms:s[1]||null}}async createFlowMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):(0,yi.CW)(e.meshType,e.simulationSettings,e.flowData,null!=t.signal?t.signal:(new AbortController).signal)}getMultidimensionalSubsetVariables(e){const t=null!==e&&void 0!==e?e:this.serviceRasterInfo.multidimensionalInfo;return(0,ne.z2)(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=null!=this.serviceRasterInfo?Promise.resolve(this.serviceRasterInfo):(0,li.Tw)(i(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then((e=>(this._set("serviceRasterInfo",e),this._set("multidimensionalInfo",e.multidimensionalInfo),(0,li.E9)(e,t),e))),n=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,s=this._getRasterFunctionInfos();return Promise.all([r,n,s]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),c.A.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([(0,R.wB)((()=>this.rasterFunction),(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}))]);const{serviceRasterInfo:t}=this;null!=t.multidimensionalInfo&&this._updateMultidimensionalDefinition(t)}))}_combineMosaicRuleWithTimeExtent(e,t){var i;const r=this.timeInfo,{multidimensionalInfo:n}=this.serviceRasterInfo;if(null==e||null==n||null==t||null==(null===r||void 0===r?void 0:r.startField))return e;const{startField:s}=r,o=n.variables.some((e=>e.dimensions.some((e=>e.name===s))))?s:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=null===(i=e.multidimensionalDefinition)||void 0===i?void 0:i.filter((e=>e.dimensionName!==o)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const a=e.multidimensionalDefinition.filter((e=>e.dimensionName===o)),l=null!=t.start?t.start.getTime():null,u=null!=t.end?t.end.getTime():null,p=null==l||null==u||l===u,c=p?[l||u]:[[l,u]],d=this.version>=10.8;if(a.length)a.forEach((e=>{e.dimensionName===o&&(d?(e.dimensionName=null,e.isSlice=!1,e.values=[]):(e.isSlice=p,e.values=c))}));else if(!d){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=o,e.isSlice=p,e.values=c})):e.multidimensionalDefinition.push(new I.A({variableName:"",dimensionName:o,isSlice:p,values:c}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return null==e?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){var i;if(!(await this._fetchCapabilities(null===(i=t)||void 0===i?void 0:i.signal)).operations.supportsQuery)throw new a.A("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=null!=e?(0,S.PZ)(mi.A,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query=(0,r.A)((0,r.A)({},t.query),{},{raster:this.raster})),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new re.A;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>{})),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:i}=this;return"unique-value"===e.type&&this._hasRasterFunction(i)&&1===(null===t||void 0===t?void 0:t.bandCount)&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&(0,ae.fp)(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:n}=await(0,v.A)(i(this.parsedUrl),{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,n&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null===(t=r.capabilities)||void 0===t?void 0:t.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly"))>-1)throw new a.A("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:(null===(t=e.fields)||void 0===t?void 0:t.length)>0}_isMosaicRuleSupported(e){var t;if(!e)return!1;const i=this._isMosaicDataset(e),r=e.currentVersion>=10.71&&e.hasMultidimensions&&!((null===(t=e.fields)||void 0===t?void 0:t.length)>1);return i||r}_isVectorFieldResampleFunction(e){if(null==e)return!1;const{functionName:t,functionArguments:i}=e,r="resample"===(null===t||void 0===t?void 0:t.toLowerCase()),n=(null===i||void 0===i?void 0:i.ResampleType)||(null===i||void 0===i?void 0:i.resampleType);return r&&(7===n||10===n)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){const t=this._isPicture(),{rasterInfo:i}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){var r,n,s;const t=null===(r=this.mosaicRule)||void 0===r||null===(r=r.multidimensionalDefinition)||void 0===r?void 0:r[0].variableName,a=(0,ae.I8)({variableName:t,rasterFunctionName:null===(n=this.rasterFunction)||void 0===n?void 0:n.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&i.bandCount>=3){var o;const e=null!==(o=null===a||void 0===a?void 0:a.bandIds)&&void 0!==o?o:(0,ae.ci)(i);!e||3===i.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=null!==(s=null===a||void 0===a?void 0:a.renderer)&&void 0!==s?s:(0,ae.PD)(i,{bandIds:this.bandIds,variableName:this.rasterFunction?null:t}));const l=(0,ae.$P)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=l,this.symbolizer.rasterInfo=i):this.symbolizer=new le.A({rendererJSON:l,rasterInfo:i}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:null!=e.pixelBlock?e.pixelBlock.clone():null}}_getQueryParams(e){null!=(null===e||void 0===e?void 0:e.renderingRule)&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:i}=this;return(0,r.A)((0,r.A)({raster:t,viewId:i,f:"json"},e),this.customParameters)}_getRequestOptions(e){return(0,r.A)((0,r.A)({},e),{},{query:(0,r.A)((0,r.A)({},null===e||void 0===e?void 0:e.query),this.customParameters)})}_decodePixelBlock(e,t,i){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,se.D)(e,t,i)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;if(this.loaded)return t;if(t&&this.version>=10.3){var r;if(1===t.length&&"none"===t[0].name.toLowerCase())return t;return null===(r=(await(0,v.A)(i(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)||void 0===r?void 0:r.rasterFunctionInfos}return null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:n,returnImageBitmap:s,signal:o}=e;if(n&&this._canRequestImageElement(t.format)){const n="".concat(i(this.parsedUrl),"/exportImage"),{data:a}=await(0,v.A)(n,{responseType:s?"blob":"image",query:this._getQueryParams((0,r.A)((0,r.A)({f:"image"},this.refreshParameters),e.imageServiceParameters)),signal:o});return a instanceof Blob?{imageBitmap:await(0,X.m)(a,n,o),params:t}:{imageOrCanvasElement:a,params:t}}const l=this._initJobHandler(),u=(0,v.A)(i(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams((0,r.A)({f:"image"},e.imageServiceParameters)),signal:o}),p=(await Promise.all([u,l]))[0].data,c=t.format||"jpgpng";let d=c;if("bsq"!==d&&"bip"!==d&&(d=(0,se.g)(p)),!d)throw new a.A("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(p)));const m={signal:o},y="gif"===c||"bmp"===c||c.includes("png")&&("png"===d||"jpg"===d)?(0,se.D)(p,(0,r.A)({useCanvas:!0},t),m):this._decodePixelBlock(p,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:c},m);return{pixelData:{pixelBlock:await y,extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch((()=>null))}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify(null===(t=this.defaultMosaicRule)||void 0===t?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=(0,ne.fy)(e,{multidimensionalSubset:this.multidimensionalSubset});if(null!=t&&t.length>0){var i;this.mosaicRule=this.mosaicRule||new $.A;const e=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&"none"!==(null===(i=this.rasterFunction.functionName)||void 0===i?void 0:i.toLowerCase())&&t.forEach((e=>e.variableName="")),t=t.filter((e=>{let{variableName:t,dimensionName:i}=e;return t&&"*"!==t||i})),(null===e||void 0===e||!e.length)&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){var i,r;t=t||{};const n=e.value,{templateRRFunctionNames:s,showNoDataRecords:o,returnDomainValues:a,templateFields:l}=t,u=e.processedValues;let p=null===(i=e.catalogItems)||void 0===i?void 0:i.features,c=(null===(r=e.properties)||void 0===r||null===(r=r.Values)||void 0===r?void 0:r.map((e=>e.replaceAll(/ /gi,", "))))||[];const d=this.objectIdField||"ObjectId",m="string"==typeof n&&n.toLowerCase().includes("nodata"),y=[];if(n&&!p&&!m){const e={};e[d]=0,c=[n],p=[new g.A({geometry:this.fullExtent,attributes:e})]}if(!p)return[];let h,f,v;this._updateResponseFieldNames(p,l),m&&!o&&(p=[]);for(let g=0;g<p.length;g++){if(h=p[g],null!=n){if(f=c[g],v=this.rasterFunction&&u&&u.length>0&&s&&s.length>0&&s.includes(this.rasterFunction.functionName)?u[s.indexOf(this.rasterFunction.functionName)]:n,"nodata"===f.toLowerCase()&&!o)continue;const e="Raster.ItemPixelValue",t="Raster.ServicePixelValue";h.attributes[e]=f,h.attributes[t]=v,this._updateFeatureWithMagDirValues(h,f);const i=this.fields&&this.fields.length>0;let r=this.rasterFunction&&null!=this.serviceRasterInfo.attributeTable?i?f:n:v;this.rasterFunction||(r=i?f:n),this._updateFeatureWithRasterAttributeTableValues(h,r)}if(h.sourceLayer=h.layer=this,a&&this._updateFeatureWithDomainValues(h),s&&u&&s.length===u.length)for(let e=0;e<s.length;e++){const t="Raster.ServicePixelValue."+s[e];h.attributes[t]=u[e]}y.push(p[g])}return y}_processMultidimensionalIntersection(e,t,i){var r;const{multidimensionalSubset:n}=this;if(!n)return{isOutSide:!1,timeExtent:t,mosaicRule:i=this._combineMosaicRuleWithTimeExtent(i,t)};if(n){const{isOutside:i,intersection:r}=(0,ne.Rp)(n,{geometry:e,timeExtent:t});if(i)return{isOutSide:!0,timeExtent:null,mosaicRule:null};null!=(null===r||void 0===r?void 0:r.timeExtent)&&(t=r.timeExtent)}if(null!==(r=i=this._combineMosaicRuleWithTimeExtent(i,t))&&void 0!==r&&r.multidimensionalDefinition){const{isOutside:e}=(0,ne.Rp)(n,{multidimensionalDefinition:i.multidimensionalDefinition});if(e)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:i}}_updateFeatureWithRasterAttributeTableValues(e,t){const i=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(null==i)return;const{features:r,fields:n}=i,s=n.map((e=>e.name)).find((e=>"value"===e.toLowerCase()));if(!s)return;const o=r.filter((e=>e.attributes[s]===(null!=t?parseInt(t,10):null)));o&&o[0]&&n.forEach((t=>{const i=this._rasterAttributeTableFieldPrefix+t.name;e.attributes[i]=o[0].attributes[t.name]}))}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const i=t.split(/,\s*/).map((e=>parseFloat(e))),r=i.map((e=>[e])),n=i.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),s=new te.A({height:1,width:1,pixelType:"f32",pixels:r,statistics:n});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:s,extent:new Ge.A(0,0,0,0,this.spatialReference)});const o="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[s.pixels[0][0],s.pixels[1][0]]:(0,oe.Lu)([s.pixels[0][0],s.pixels[1][0]]);e.attributes["Raster.Magnitude"]=o[0],e.attributes["Raster.Direction"]=o[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const i=e.attributes[t.name];if(null!=i){const r=t.domain.codedValues.find((e=>e.code===i));r&&(e.attributes[t.name]=r.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const i=this.fieldsIndex;null!=i&&e.forEach((e=>{if(null!==e&&void 0!==e&&e.attributes)for(const n of t){var r;const t=null===(r=i.get(n))||void 0===r?void 0:r.name;t&&t!==n&&(e.attributes[n]=e.attributes[t],delete e.attributes[t])}}))}_getRenderingRuleString(e){if(e){var t;let i=e.toJSON();return i=null!==(t=i.rasterFunctionDefinition)&&void 0!==t?t:i,(i.thumbnail||i.thumbnailEx)&&(i.thumbnail=i.thumbnailEx=null),JSON.stringify(i)}return null}_hasRasterFunction(e){return null!=(null===e||void 0===e?void 0:e.functionName)&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const i=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(i)?t.get(i):e}_isRFTJson(e){return(null===e||void 0===e?void 0:e.name)&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:i,rasterFunction:r}=this;r&&"rasterFunction"in e&&null==e.rasterFunction&&(e.rasterFunction=r),i&&null==e.mosaicRule&&(e.mosaicRule=i),t&&null==e.raster&&(e.raster=t)}_readCapabilities(e){var t;const i=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:n,maxRecordCount:s}=e,o=i.includes("image"),a="esriImageServiceDataTypeElevation"===e.serviceDataType,l=!(!e.spatialReference&&(null===(t=e.extent)||void 0===t||!t.spatialReference)),u=i.includes("edit"),p=i.includes("mensuration")&&l,c=null==e.mensurationCapabilities?[]:e.mensurationCapabilities.toLowerCase().split(",").map((e=>e.trim())),d=p&&c.includes("basic"),m=this._isMosaicDataset(e)&&i.includes("catalog"),y=i.includes("download");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:o,supportsExportImage:o,supportsIdentify:o,supportsImageToMap:r>=11.2&&m,supportsImageToMapMultiray:r>=11.2&&m,supportsMapToImage:r>=11.2&&m,supportsFindImages:r>=11.2&&m,supportsGetImageUrl:r>=11.3&&y,supportsMeasure:p,supportsMeasureFromImage:r>=11.2,supportsDownload:y,supportsQuery:m&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&o,supportsProject:r>=10.3&&o,supportsComputeStatisticsHistograms:r>=10.4&&o,supportsQueryBoundary:r>=10.6&&o,supportsCalculateVolume:r>=10.7&&a,supportsComputePixelLocation:r>=10.7&&m,supportsComputeAngles:r>=10.91,supportsQueryGPSInfo:r>=11.2&&m,supportsAdd:u,supportsDelete:u,supportsEditing:u,supportsUpdate:u,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:s,maxRecordCountFactor:void 0,supportsStatistics:!(null===n||void 0===n||!n.supportsStatistics),supportsOrderBy:!(null===n||void 0===n||!n.supportsOrderBy),supportsDistinct:!(null===n||void 0===n||!n.supportsDistinct),supportsPagination:!(null===n||void 0===n||!n.supportsPagination),supportsStandardizedQueriesOnly:!(null===n||void 0===n||!n.useStandardizedQueries),supportsPercentileStatistics:!(null===n||void 0===n||!n.supportsPercentileStatistics),supportsCentroid:!(null===n||void 0===n||!n.supportsReturningGeometryCentroid),supportsDistance:!(null===n||void 0===n||!n.supportsQueryWithDistance),supportsExtent:!(null===n||void 0===n||!n.supportsReturningQueryExtent),supportsGeometryProperties:!(null===n||void 0===n||!n.supportsReturningGeometryProperties),supportsHavingClause:!(null===n||void 0===n||!n.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!(null===n||void 0===n||!n.supportsDefaultSR),supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0},mensuration:{supportsDistanceAndAngle:d,supportsAreaAndPerimeter:d,supportsPointOrCentroid:d,supportsHeightFromBaseAndTop:p&&c.includes("base-top height"),supportsHeightFromBaseAndTopShadow:p&&c.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:p&&c.includes("top-top shadow height"),supports3D:p&&c.includes("3d")}}}};function i(e){var t;return null!==(t=null===e||void 0===e?void 0:e.path)&&void 0!==t?t:""}return(0,n._)([(0,p.MZ)({clonable:!1})],t.prototype,"_functionRasterInfos",void 0),(0,n._)([(0,p.MZ)({clonable:!1})],t.prototype,"_rasterJobHandler",void 0),(0,n._)([(0,p.MZ)({clonable:!1})],t.prototype,"_cachedRendererJson",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),(0,n._)([(0,b.w)("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"_rasterAttributeTableFieldPrefix",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"_rasterFunctionNamesIndex",null),(0,n._)([(0,p.MZ)()],t.prototype,"adjustAspectRatio",void 0),(0,n._)([(0,p.MZ)({type:[S.jz],json:{write:!0}})],t.prototype,"bandIds",void 0),(0,n._)([(0,b.w)("bandIds")],t.prototype,"readBandIds",null),(0,n._)([(0,p.MZ)({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),(0,n._)([(0,b.w)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),(0,n._)([(0,p.MZ)({type:Number})],t.prototype,"compressionQuality",void 0),(0,n._)([(0,m.K)("compressionQuality")],t.prototype,"writeCompressionQuality",null),(0,n._)([(0,p.MZ)({type:Number})],t.prototype,"compressionTolerance",void 0),(0,n._)([(0,m.K)("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),(0,n._)([(0,p.MZ)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,n._)([(0,p.MZ)({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"defaultMosaicRule",void 0),(0,n._)([(0,b.w)("defaultMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultMosaicRule",null),(0,n._)([(0,p.MZ)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),(0,n._)([(0,p.MZ)({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),(0,n._)([(0,p.MZ)()],t.prototype,"rasterInfo",void 0),(0,n._)([(0,p.MZ)({readOnly:!0,type:[Y.A]})],t.prototype,"fields",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"fieldsIndex",null),(0,n._)([(0,p.MZ)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],t.prototype,"format",null),(0,n._)([(0,b.w)("service","format",["serviceDataType"])],t.prototype,"readFormat",null),(0,n._)([(0,p.MZ)({type:Ge.A})],t.prototype,"fullExtent",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),(0,n._)([(0,p.MZ)({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),(0,n._)([(0,p.MZ)({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),(0,n._)([(0,p.MZ)({type:String,json:{type:k.SZ.jsonValues,read:k.SZ.read,write:k.SZ.write}})],t.prototype,"interpolation",void 0),(0,n._)([(0,p.MZ)()],t.prototype,"minScale",void 0),(0,n._)([(0,b.w)("service","minScale")],t.prototype,"readMinScale",null),(0,n._)([(0,p.MZ)()],t.prototype,"maxScale",void 0),(0,n._)([(0,b.w)("service","maxScale")],t.prototype,"readMaxScale",null),(0,n._)([(0,p.MZ)({type:$.A})],t.prototype,"mosaicRule",null),(0,n._)([(0,b.w)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),(0,n._)([(0,m.K)("mosaicRule")],t.prototype,"writeMosaicRule",null),(0,n._)([(0,p.MZ)()],t.prototype,"multidimensionalInfo",void 0),(0,n._)([(0,p.MZ)({type:ee.A,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),(0,n._)([(0,p.MZ)({json:{type:S.jz}})],t.prototype,"noData",void 0),(0,n._)([(0,m.K)("noData")],t.prototype,"writeNoData",null),(0,n._)([(0,p.MZ)({type:String,json:{type:k.hm.jsonValues,read:k.hm.read,write:k.hm.write}})],t.prototype,"noDataInterpretation",void 0),(0,n._)([(0,p.MZ)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),(0,n._)([(0,b.w)("objectIdField")],t.prototype,"readObjectIdField",null),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"geometryType",void 0),(0,n._)([(0,p.MZ)({})],t.prototype,"typeIdField",void 0),(0,n._)([(0,p.MZ)({})],t.prototype,"types",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"parsedUrl",null),(0,n._)([(0,p.MZ)({type:Function})],t.prototype,"pixelFilter",void 0),(0,n._)([(0,p.MZ)()],t.prototype,"raster",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"sourceType",void 0),(0,n._)([(0,b.w)("sourceType",["serviceSourceType","fields"])],t.prototype,"readSourceType",null),(0,n._)([(0,p.MZ)()],t.prototype,"viewId",void 0),(0,n._)([(0,p.MZ)()],t.prototype,"renderer",null),(0,n._)([(0,p.MZ)({types:f.uy,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:f.Gj,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],t.prototype,"internalRenderer",null),(0,n._)([(0,b.w)("internalRenderer")],t.prototype,"readRenderer",null),(0,n._)([(0,m.K)("internalRenderer")],t.prototype,"writeRenderer",null),(0,n._)([(0,p.MZ)({clonable:!1})],t.prototype,"symbolizer",void 0),(0,n._)([(0,p.MZ)(x.ke)],t.prototype,"opacity",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"rasterFields",null),(0,n._)([(0,p.MZ)({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),(0,n._)([(0,p.MZ)({type:F.A,json:{name:"renderingRule"}})],t.prototype,"rasterFunction",null),(0,n._)([(0,b.w)("rasterFunction",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRasterFunction",null),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"serviceDataType",void 0),(0,n._)([(0,p.MZ)({readOnly:!0,type:Re.A})],t.prototype,"spatialReference",void 0),(0,n._)([(0,b.w)("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),(0,n._)([(0,p.MZ)({json:{type:k.e8.jsonValues}})],t.prototype,"pixelType",void 0),(0,n._)([(0,b.w)("pixelType")],t.prototype,"readPixelType",null),(0,n._)([(0,m.K)("pixelType")],t.prototype,"writePixelType",null),(0,n._)([(0,p.MZ)({constructOnly:!0,type:ie.A})],t.prototype,"serviceRasterInfo",void 0),(0,n._)([(0,p.MZ)()],t.prototype,"sourceJSON",void 0),(0,n._)([(0,p.MZ)(x.OZ)],t.prototype,"url",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"version",void 0),(0,n._)([(0,b.w)("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=(0,n._)([(0,d.$)("esri.layers.mixins.ArcGISImageService")],t),t};var vi=i(19502),wi=i(65624),Ri=i(31362),_i=i(11270),Si=i(94729),bi=i(8350),Ai=i(21617),xi=i(5682),Ii=i(78817),Mi=i(38278),Fi=i(30973),Di=i(61701);let Pi=class extends((0,wi.dM)((0,Ii.e)((0,xi.j)((0,_i.q)((0,Si.A)((0,bi.H)(fi((0,Ai.J)((0,Ri.d)((0,vi.b)((0,l.P)((0,o.O)(y.A))))))))))))){constructor(){super(...arguments),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=(0,u.sg)((async(e,t,r)=>{const{save:n,saveAs:s}=await i.e(964).then(i.bind(i,20964));switch(e){case Di.X.SAVE:return n(this,t);case Di.X.SAVE_AS:return s(this,r,t)}}))}normalizeCtorArgs(e,t){return"string"==typeof e?(0,r.A)({url:e},t):e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(u.QP).then((()=>this._fetchService(t)))),Promise.resolve(this)}get legendEnabled(){var e;return!this._isPreviewLayer&&(null===(e=this._get("legendEnabled"))||void 0===e||e)}set legendEnabled(e){this._set("legendEnabled",e)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(e){this._set("listMode",e)}writeOperationalLayerType(e,t,i){var r;const n="vector-field"===(null===(r=this.renderer)||void 0===r?void 0:r.type);t[i]=n?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){var e;return!(!this.raster||null===(e=this.url)||void 0===e||!e.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(e){var t;const i=this.rasterFields,n=this.title,s=new Set;let o=!1,a=!1;this.capabilities&&(o=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,a="esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType);const l=new Set;o&&l.add("raster.itempixelvalue");for(const r of i){const e=r.name.toLowerCase();l.has(e)||e.includes("raster.servicepixelvalue.")||s.add(r.name)}a&&s.add("raster.magnitude").add("raster.direction");const u=(0,Fi.tn)({fields:i,title:n},(0,r.A)((0,r.A)({},e),{},{visibleFieldNames:s}));return null!==u&&void 0!==u&&u.fieldInfos&&null!==(t=this.rasterInfo)&&void 0!==t&&t.pixelType.startsWith("f")&&u.fieldInfos.forEach((e=>{let{format:t,fieldName:i}=e;t&&i&&/^raster\.(item|service)pixelvalue/i.test(i)&&(t.places=2)})),u}queryFeatures(e,t){return this.queryRasters(e,t).then((e=>{if(null!==e&&void 0!==e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}async save(e){return this._debouncedSaveOperations(Di.X.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(Di.X.SAVE_AS,t,e)}serviceSupportsSpatialReference(e){return(0,Mi.D)(this,e)}write(e,t){if(!this._isPreviewLayer)return super.write(e,t);if(null!==t&&void 0!==t&&t.messages){const e="".concat(t.origin,"/").concat(t.layerContainerType||"operational-layers");t.messages.push(new a.A("layer:unsupported","Imagery preview layer (".concat(this.title,", ").concat(this.id,") of type '").concat(this.declaredClass,"' are not supported in the context of '").concat(e,"'"),{layer:this}))}return null}};(0,n._)([(0,p.MZ)(x.fV)],Pi.prototype,"legendEnabled",null),(0,n._)([(0,p.MZ)({type:["show","hide"]})],Pi.prototype,"listMode",null),(0,n._)([(0,p.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Pi.prototype,"isReference",void 0),(0,n._)([(0,p.MZ)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Pi.prototype,"operationalLayerType",void 0),(0,n._)([(0,m.K)("web-map","operationalLayerType")],Pi.prototype,"writeOperationalLayerType",null),(0,n._)([(0,p.MZ)(x.M6)],Pi.prototype,"popupEnabled",void 0),(0,n._)([(0,p.MZ)({type:s.A,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Pi.prototype,"popupTemplate",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],Pi.prototype,"defaultPopupTemplate",null),(0,n._)([(0,p.MZ)({readOnly:!0,json:{read:!1}})],Pi.prototype,"type",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],Pi.prototype,"_isPreviewLayer",null),Pi=(0,n._)([(0,d.$)("esri.layers.ImageryLayer")],Pi);const ji=Pi},16852:(e,t,i)=>{i.d(t,{C:()=>o,m:()=>s});var r=i(50076),n=i(50346);async function s(e,t,i){let s;try{s=await createImageBitmap(e)}catch(o){throw new r.A("request:server","Unable to load ".concat(t),{url:t,error:o})}return(0,n.Te)(i),s}async function o(e,t,i,s,o){let a;try{a=await createImageBitmap(e)}catch(l){throw new r.A("request:server","Unable to load tile ".concat(t,"/").concat(i,"/").concat(s),{error:l,level:t,row:i,col:s})}return(0,n.Te)(o),a}},78238:(e,t,i)=>{function r(e){const t={};for(const i in e){if("declaredClass"===i)continue;const n=e[i];if(null!=n&&"function"!=typeof n)if(Array.isArray(n)){t[i]=[];for(let e=0;e<n.length;e++)t[i][e]=r(n[e])}else"object"==typeof n?n.toJSON&&(t[i]=JSON.stringify(n)):t[i]=n}return t}i.d(t,{z:()=>r})},37713:(e,t,i)=>{i.d(t,{I:()=>o});var r=i(54994),n=i(36643),s=i(68295);async function o(e,t,i){const o=(0,r.Dl)(e),{data:a}=await(0,n.gW)(o,s.A.from(t),i);return a.count}},53104:(e,t,i)=>{i.d(t,{V:()=>o});var r=i(54994),n=i(36643),s=i(68295);async function o(e,t,i){const o=(0,r.Dl)(e),{data:a}=await(0,n.Pk)(o,s.A.from(t),i);return a.objectIds}},14009:(e,t,i)=>{i.d(t,{e:()=>u,s:()=>l});var r=i(8),n=i(54994),s=i(36643),o=i(77725),a=i(68295);async function l(e,t,i){const r=await u(e,t,i);return o.A.fromJSON(r)}async function u(e,t,i){const o=(0,n.Dl)(e),l=(0,r.A)({},i),u=a.A.from(t),{data:p}=await(0,s.eW)(o,u,u.sourceSpatialReference,l);return p}},36643:(e,t,i)=>{i.d(t,{GB:()=>R,IJ:()=>h,Jf:()=>w,Pk:()=>f,eW:()=>y,gW:()=>v,kS:()=>g});var r=i(8),n=i(3825),s=i(90534),o=i(19902),a=i(1438),l=i(80963),u=i(78238),p=i(89122),c=i(57831);const d="Layer does not support extent calculation.";function m(e,t){var i;const r=e.geometry,n=e.toJSON();delete n.compactGeometryEnabled,delete n.defaultSpatialReferenceEnabled;const s=n;let a,u,p;if(null!=r&&(u=r.spatialReference,p=(0,l.YX)(u),s.geometryType=(0,o.$B)(r),s.geometry=function(e,t){if(t&&"extent"===e.type)return"".concat(e.xmin,",").concat(e.ymin,",").concat(e.xmax,",").concat(e.ymax);if(t&&"point"===e.type)return"".concat(e.x,",").concat(e.y);const i=e.toJSON();return delete i.spatialReference,JSON.stringify(i)}(r,e.compactGeometryEnabled),s.inSR=p),n.groupByFieldsForStatistics&&(s.groupByFieldsForStatistics=n.groupByFieldsForStatistics.join(",")),n.objectIds&&(s.objectIds=n.objectIds.join(",")),n.orderByFields&&(s.orderByFields=n.orderByFields.join(",")),!n.outFields||!n.returnDistinctValues&&(null!==t&&void 0!==t&&t.returnCountOnly||null!==t&&void 0!==t&&t.returnExtentOnly||null!==t&&void 0!==t&&t.returnIdsOnly)?delete s.outFields:n.outFields.includes("*")?s.outFields="*":s.outFields=n.outFields.join(","),n.outSR?(s.outSR=(0,l.YX)(n.outSR),a=e.outSpatialReference):r&&(n.returnGeometry||n.returnCentroid)&&(s.outSR=s.inSR,a=u),n.returnGeometry&&delete n.returnGeometry,n.outStatistics&&(s.outStatistics=JSON.stringify(n.outStatistics)),n.fullText&&(s.fullText=JSON.stringify(n.fullText)),n.pixelSize&&(s.pixelSize=JSON.stringify(n.pixelSize)),n.quantizationParameters&&(e.defaultSpatialReferenceEnabled&&null!=u&&null!=(null===(i=e.quantizationParameters)||void 0===i?void 0:i.extent)&&u.equals(e.quantizationParameters.extent.spatialReference)&&delete n.quantizationParameters.extent.spatialReference,s.quantizationParameters=JSON.stringify(n.quantizationParameters)),n.parameterValues&&(s.parameterValues=JSON.stringify(n.parameterValues)),n.rangeValues&&(s.rangeValues=JSON.stringify(n.rangeValues)),n.dynamicDataSource&&(s.layer=JSON.stringify({source:n.dynamicDataSource}),delete n.dynamicDataSource),n.timeExtent){const e=n.timeExtent,{start:t,end:i}=e;null==t&&null==i||(s.time=t===i?t:"".concat(null!==t&&void 0!==t?t:"null",",").concat(null!==i&&void 0!==i?i:"null")),delete n.timeExtent}return e.defaultSpatialReferenceEnabled&&null!=u&&null!=a&&u.equals(a)&&(s.defaultSR=s.inSR,delete s.inSR,delete s.outSR),s}async function y(e,t,i,r){const n=null!=t.timeExtent&&t.timeExtent.isEmpty?{data:{features:[]}}:await R(e,t,"json",r);return(0,c.q)(t,i,n.data),n}async function h(e,t,i,r){if(null!=t.timeExtent&&t.timeExtent.isEmpty)return{data:i.createFeatureResult()};const n=await g(e,t,r),s=n;return s.data=(0,p.m)(n.data,i),s}function g(e,t,i){return R(e,t,"pbf",i)}function f(e,t,i){return null!=t.timeExtent&&t.timeExtent.isEmpty?Promise.resolve({data:{objectIds:[]}}):R(e,t,"json",i,{returnIdsOnly:!0})}function v(e,t,i){return null!=t.timeExtent&&t.timeExtent.isEmpty?Promise.resolve({data:{count:0}}):R(e,t,"json",i,{returnIdsOnly:!0,returnCountOnly:!0})}async function w(e,t,i){if(null!=t.timeExtent&&t.timeExtent.isEmpty)return{data:{count:0,extent:null}};const r=await R(e,t,"json",i,{returnExtentOnly:!0,returnCountOnly:!0}),n=r.data;if(n.hasOwnProperty("extent"))return r;if(n.features)throw new Error(d);if(n.hasOwnProperty("count"))throw new Error(d);return r}async function R(e,t,i){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};const p="string"==typeof e?(0,s.An)(e):e,c=t.geometry?[t.geometry]:[],d=await(0,a.el)(c,null,{signal:o.signal}),y=null===d||void 0===d?void 0:d[0];null!=y&&((t=t.clone()).geometry=y);const h=(0,u.z)((0,r.A)((0,r.A)((0,r.A)({},p.query),{},{f:i},l),m(t,l)));return(0,n.A)((0,s.fj)(p.path,(g=l,null==t.formatOf3DObjects||g.returnCountOnly||g.returnExtentOnly||g.returnIdsOnly?"query":"query3d")),(0,r.A)((0,r.A)({},o),{},{responseType:"pbf"===i?"array-buffer":"json",query:(0,r.A)((0,r.A)({},h),o.query)}));var g}}}]);
//# sourceMappingURL=9051.aa9c4b1d.chunk.js.map