{"version":3,"file":"static/js/4621.1c1932e0.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/utils/logger.ts","../node_modules/@esri/calcite-components/dist/components/src/components/modal/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/modal/modal.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/modal/modal.scss?tag=calcite-modal&encapsulation=shadow"],"sourcesContent":["import type { JSX } from \"../components\";\nimport { logLevel } from \"./config\";\n\nexport type LogLevel = \"debug\" | \"info\" | \"warn\" | \"error\" | \"trace\" | \"off\";\n\ntype Message = string;\ntype MajorVersion = number;\n\ntype DeprecatedContext = \"component\" | \"property\" | \"method\" | \"event\" | \"slot\";\n\ntype DeprecatedParams = {\n  name: string;\n  suggested?: string | string[];\n  component?: string;\n  removalVersion: MajorVersion | \"future\";\n};\n\ntype SimpleComponentName<T> = T extends `calcite-${infer Name}` ? Name : T;\n\ntype ComponentDeprecatedParams = Omit<DeprecatedParams, \"name\"> & {\n  name: SimpleComponentName<keyof JSX.IntrinsicElements>;\n};\n\n/**\n * Exported for testing purposes only\n */\nexport const loggedDeprecations = new Set<string>();\n\nconst logLevels = {\n  trace: 0,\n  debug: 1,\n  info: 2,\n  warn: 4,\n  error: 8,\n  off: 10,\n} as const;\n\nfunction willLog(level: LogLevel): boolean {\n  return logLevels[level] >= logLevels[logLevel];\n}\n\nfunction forwardToConsole(level: LogLevel, ...data: any[]): void {\n  if (!willLog(level)) {\n    return;\n  }\n\n  const badgeTemplate = \"%ccalcite\";\n  const badgeStyle = \"background: #007AC2; color: #fff; border-radius: 4px; padding: 2px 4px;\";\n\n  console[level].call(this, badgeTemplate, badgeStyle, ...data);\n}\n\nlet listFormatter: Intl.ListFormat;\n\nexport const logger = {\n  debug: (message: Message) => forwardToConsole(\"debug\", message),\n  info: (message: Message) => forwardToConsole(\"info\", message),\n  warn: (message: Message) => forwardToConsole(\"warn\", message),\n  error: (message: Message) => forwardToConsole(\"error\", message),\n  trace: (message: Message) => forwardToConsole(\"trace\", message),\n\n  deprecated,\n} as const;\n\n/**\n * Logs a deprecation warning to the console.\n *\n * @param context the context in which the deprecation is occurring\n * @param params the deprecation details\n */\nfunction deprecated(context: Exclude<DeprecatedContext, \"component\">, params: DeprecatedParams): void;\nfunction deprecated(context: Extract<DeprecatedContext, \"component\">, params: ComponentDeprecatedParams): void;\nfunction deprecated(\n  context: DeprecatedContext,\n  { component, name, suggested, removalVersion }: DeprecatedParams | ComponentDeprecatedParams,\n): void {\n  const key = `${context}:${context === \"component\" ? \"\" : component}${name}`;\n\n  if (loggedDeprecations.has(key)) {\n    return;\n  }\n\n  loggedDeprecations.add(key);\n\n  const multiSuggestions = Array.isArray(suggested);\n\n  if (multiSuggestions && !listFormatter) {\n    listFormatter = new Intl.ListFormat(\"en\", { style: \"long\", type: \"disjunction\" });\n  }\n\n  const message = `[${name}] ${context} is deprecated and will be removed in ${removalVersion === \"future\" ? `a future version` : `v${removalVersion}`}.${suggested ? ` Use ${multiSuggestions ? listFormatter.format(suggested.map((suggestion) => `\"${suggestion}\"`)) : `\"${suggested}\"`} instead.` : \"\"}`;\n\n  forwardToConsole(\"warn\", message);\n}\n","export const CSS = {\n  modal: \"modal\",\n  title: \"title\",\n  header: \"header\",\n  footer: \"footer\",\n  scrim: \"scrim\",\n  back: \"back\",\n  close: \"close\",\n  secondary: \"secondary\",\n  primary: \"primary\",\n  container: \"container\",\n  containerOpen: \"container--open\",\n  containerEmbedded: \"container--embedded\",\n  content: \"content\",\n  contentNoFooter: \"content--no-footer\",\n  contentBottom: \"content-bottom\",\n  contentTop: \"content-top\",\n\n  // these classes help apply the animation in phases to only set transform on open/close\n  // this helps avoid a positioning issue for any floating-ui-owning children\n  openingIdle: \"modal--opening-idle\",\n  openingActive: \"modal--opening-active\",\n  closingIdle: \"modal--closing-idle\",\n  closingActive: \"modal--closing-active\",\n};\n\nexport const DURATIONS = {\n  slow: 14000,\n  medium: 10000,\n  fast: 6000,\n  test: 300 / 1000,\n};\n\nexport const ICONS = {\n  close: \"x\",\n} as const;\n\nexport const SLOTS = {\n  content: \"content\",\n  contentBottom: \"content-bottom\",\n  contentTop: \"content-top\",\n  header: \"header\",\n  back: \"back\",\n  secondary: \"secondary\",\n  primary: \"primary\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  ensureId,\n  focusFirstTabbable,\n  getSlotted,\n  slotChangeHasAssignedElement,\n} from \"../../utils/dom\";\nimport {\n  activateFocusTrap,\n  connectFocusTrap,\n  deactivateFocusTrap,\n  FocusTrap,\n  FocusTrapComponent,\n  updateFocusTrapElements,\n} from \"../../utils/focusTrapComponent\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { Kind, Scale } from \"../interfaces\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { componentOnReady, getIconScale } from \"../../utils/component\";\nimport { logger } from \"../../utils/logger\";\nimport { ModalMessages } from \"./assets/modal/t9n\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\nlet totalOpenModals: number = 0;\nlet initialDocumentOverflowStyle: string = \"\";\n\nlogger.deprecated(\"component\", {\n  name: \"modal\",\n  removalVersion: 4,\n  suggested: \"dialog\",\n});\n\n/**\n * @deprecated Use the `calcite-dialog` component instead.\n * @slot header - A slot for adding header text.\n * @slot content - A slot for adding the component's content.\n * @slot content-top - A slot for adding content to the component's sticky header, where content remains at the top of the component when scrolling up and down.\n * @slot content-bottom - A slot for adding content to the component's sticky footer, where content remains at the bottom of the component when scrolling up and down.\n * @slot primary - A slot for adding a primary button.\n * @slot secondary - A slot for adding a secondary button.\n * @slot back - A slot for adding a back button.\n */\n@Component({\n  tag: \"calcite-modal\",\n  styleUrl: \"modal.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Modal\n  implements\n    ConditionalSlotComponent,\n    OpenCloseComponent,\n    FocusTrapComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, displays and positions the component.  */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  /**\n   * We use an internal property to handle styles for when a modal is actually opened, not just when the open attribute is applied. This is a property because we need to apply styles to the host element and to keep the styles present while beforeClose is.\n   *\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) opened = false;\n\n  /** Passes a function to run before the component closes. */\n  @Prop() beforeClose: (el: HTMLCalciteModalElement) => Promise<void>;\n\n  /** When `true`, disables the component's close button. */\n  @Prop({ reflect: true }) closeButtonDisabled = false;\n\n  /**\n   * When `true`, prevents focus trapping.\n   */\n  @Prop({ reflect: true }) focusTrapDisabled = false;\n\n  @Watch(\"focusTrapDisabled\")\n  handleFocusTrapDisabled(focusTrapDisabled: boolean): void {\n    if (!this.open) {\n      return;\n    }\n\n    focusTrapDisabled ? deactivateFocusTrap(this) : activateFocusTrap(this);\n  }\n\n  /** When `true`, disables the closing of the component when clicked outside. */\n  @Prop({ reflect: true }) outsideCloseDisabled = false;\n\n  /** When `true`, prevents the component from expanding to the entire screen on mobile devices. */\n  @Prop({ reflect: true }) docked: boolean;\n\n  /**\n   * This internal property, managed by a containing calcite-shell, is used\n   * to inform the component if special configuration or styles are needed\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) embedded = false;\n\n  /** When `true`, disables the default close on escape behavior. */\n  @Prop({ reflect: true }) escapeDisabled = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the width of the component. */\n  @Prop({ reflect: true }) widthScale: Scale = \"m\";\n\n  /** Sets the component to always be fullscreen. Overrides `widthScale` and `--calcite-modal-width` / `--calcite-modal-height`. */\n  @Prop({ reflect: true }) fullscreen: boolean;\n\n  /** Specifies the kind of the component, which will apply to top border. */\n  @Prop({ reflect: true }) kind: Extract<\"brand\" | \"danger\" | \"info\" | \"success\" | \"warning\", Kind>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ModalMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ModalMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n    // when modal initially renders, if active was set we need to open as watcher doesn't fire\n    if (this.open) {\n      this.openModal();\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  connectedCallback(): void {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n    this.cssVarObserver?.observe(this.el, { attributeFilter: [\"style\"] });\n    this.updateSizeCssVars();\n    this.updateFooterVisibility();\n    connectConditionalSlotComponent(this);\n    connectLocalized(this);\n    connectMessages(this);\n    connectFocusTrap(this);\n  }\n\n  disconnectedCallback(): void {\n    this.removeOverflowHiddenClass();\n    this.mutationObserver?.disconnect();\n    this.cssVarObserver?.disconnect();\n    disconnectConditionalSlotComponent(this);\n    deactivateFocusTrap(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.embedded = false;\n  }\n\n  render(): VNode {\n    return (\n      <Host\n        aria-describedby={this.contentId}\n        aria-labelledby={this.titleId}\n        aria-modal=\"true\"\n        role=\"dialog\"\n      >\n        <div\n          class={{\n            [CSS.container]: true,\n            [CSS.containerOpen]: this.opened,\n            [CSS.containerEmbedded]: this.embedded,\n          }}\n        >\n          <calcite-scrim class={CSS.scrim} onClick={this.handleOutsideClose} />\n          {this.renderStyle()}\n          <div\n            class={{\n              [CSS.modal]: true,\n            }}\n            ref={this.setTransitionEl}\n          >\n            <div class={CSS.header}>\n              {this.renderCloseButton()}\n              <header class={CSS.title}>\n                <slot name={CSS.header} />\n              </header>\n            </div>\n            {this.renderContentTop()}\n            <div\n              class={{\n                [CSS.content]: true,\n                [CSS.contentNoFooter]: !this.hasFooter,\n              }}\n              ref={(el) => (this.modalContent = el)}\n            >\n              <slot name={SLOTS.content} />\n            </div>\n            {this.renderContentBottom()}\n            {this.renderFooter()}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  renderFooter(): VNode {\n    return this.hasFooter ? (\n      <div class={CSS.footer} key=\"footer\">\n        <span class={CSS.back}>\n          <slot name={SLOTS.back} />\n        </span>\n        <span class={CSS.secondary}>\n          <slot name={SLOTS.secondary} />\n        </span>\n        <span class={CSS.primary}>\n          <slot name={SLOTS.primary} />\n        </span>\n      </div>\n    ) : null;\n  }\n\n  renderContentTop(): VNode {\n    return (\n      <div class={CSS.contentTop} hidden={!this.hasContentTop}>\n        <slot name={SLOTS.contentTop} onSlotchange={this.contentTopSlotChangeHandler} />\n      </div>\n    );\n  }\n\n  renderContentBottom(): VNode {\n    return (\n      <div class={CSS.contentBottom} hidden={!this.hasContentBottom}>\n        <slot name={SLOTS.contentBottom} onSlotchange={this.contentBottomSlotChangeHandler} />\n      </div>\n    );\n  }\n\n  renderCloseButton(): VNode {\n    return !this.closeButtonDisabled ? (\n      <button\n        aria-label={this.messages.close}\n        class={CSS.close}\n        key=\"button\"\n        onClick={this.handleCloseClick}\n        ref={(el) => (this.closeButtonEl = el)}\n        title={this.messages.close}\n      >\n        <calcite-icon icon={ICONS.close} scale={getIconScale(this.scale)} />\n      </button>\n    ) : null;\n  }\n\n  renderStyle(): VNode {\n    if (!this.fullscreen && (this.cssWidth || this.cssHeight)) {\n      return (\n        <style>\n          {`.${CSS.container} {\n              ${this.docked && this.cssWidth ? `align-items: center !important;` : \"\"}\n            }\n            .${CSS.modal} {\n              block-size: ${this.cssHeight ? this.cssHeight : \"auto\"} !important;\n              ${this.cssWidth ? `inline-size: ${this.cssWidth} !important;` : \"\"}\n              ${this.cssWidth ? `max-inline-size: ${this.cssWidth} !important;` : \"\"}\n              ${this.docked ? `border-radius: var(--calcite-border-radius) !important;` : \"\"}\n            }\n            @media screen and (max-width: ${this.cssWidth}) {\n              .${CSS.container} {\n                ${this.docked ? `align-items: flex-end !important;` : \"\"}\n              }\n              .${CSS.modal} {\n                max-block-size: 100% !important;\n                inline-size: 100% !important;\n                max-inline-size: 100% !important;\n                min-inline-size: 100% !important;\n                margin: 0 !important;\n                ${!this.docked ? `block-size: 100% !important;` : \"\"}\n                ${!this.docked ? `border-radius: 0 !important;` : \"\"}\n                ${\n                  this.docked\n                    ? `border-radius: var(--calcite-border-radius) var(--calcite-border-radius) 0 0 !important;`\n                    : \"\"\n                }\n              }\n            }\n          `}\n        </style>\n      );\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties/ State\n  //\n  //--------------------------------------------------------------------------\n\n  ignoreOpenChange = false;\n\n  @Element() el: HTMLCalciteModalElement;\n\n  modalContent: HTMLDivElement;\n\n  private mutationObserver: MutationObserver = createObserver(\"mutation\", () =>\n    this.handleMutationObserver(),\n  );\n\n  private cssVarObserver: MutationObserver = createObserver(\"mutation\", () => {\n    this.updateSizeCssVars();\n  });\n\n  titleId: string;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  focusTrap: FocusTrap;\n\n  closeButtonEl: HTMLButtonElement;\n\n  contentId: string;\n\n  @State() cssWidth: string | number;\n\n  @State() cssHeight: string | number;\n\n  @State() hasFooter = true;\n\n  @State() hasContentTop = false;\n\n  @State() hasContentBottom = false;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ModalMessages;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"keydown\", { target: \"window\" })\n  handleEscape(event: KeyboardEvent): void {\n    if (this.open && !this.escapeDisabled && event.key === \"Escape\" && !event.defaultPrevented) {\n      this.open = false;\n      event.preventDefault();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteModalBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteModalClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteModalBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteModalOpen: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's \"close\" button (the first focusable item).\n   *\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n\n  /**\n   * Updates the element(s) that are used within the focus-trap of the component.\n   */\n  @Method()\n  async updateFocusTrapElements(): Promise<void> {\n    updateFocusTrapElements(this);\n  }\n\n  /**\n   * Sets the scroll top of the component's content.\n   *\n   * @param top\n   * @param left\n   */\n  @Method()\n  async scrollContent(top = 0, left = 0): Promise<void> {\n    if (this.modalContent) {\n      if (this.modalContent.scrollTo) {\n        this.modalContent.scrollTo({ top, left, behavior: \"smooth\" });\n      } else {\n        this.modalContent.scrollTop = top;\n        this.modalContent.scrollLeft = left;\n      }\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private setTransitionEl = (el: HTMLDivElement): void => {\n    this.transitionEl = el;\n  };\n\n  onBeforeOpen(): void {\n    this.transitionEl.classList.add(CSS.openingActive);\n    this.calciteModalBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.transitionEl.classList.remove(CSS.openingIdle, CSS.openingActive);\n    this.calciteModalOpen.emit();\n    activateFocusTrap(this);\n  }\n\n  onBeforeClose(): void {\n    this.transitionEl.classList.add(CSS.closingActive);\n    this.calciteModalBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.transitionEl.classList.remove(CSS.closingIdle, CSS.closingActive);\n    this.calciteModalClose.emit();\n    deactivateFocusTrap(this);\n  }\n\n  @Watch(\"open\")\n  toggleModal(value: boolean): void {\n    if (this.ignoreOpenChange) {\n      return;\n    }\n\n    if (value) {\n      this.openModal();\n    } else {\n      this.closeModal();\n    }\n  }\n\n  @Watch(\"opened\")\n  handleOpenedChange(value: boolean): void {\n    const idleClass = value ? CSS.openingIdle : CSS.closingIdle;\n    this.transitionEl.classList.add(idleClass);\n    onToggleOpenCloseComponent(this);\n  }\n\n  private openEnd = (): void => {\n    this.setFocus();\n    this.el.removeEventListener(\"calciteModalOpen\", this.openEnd);\n  };\n\n  private handleCloseClick = () => {\n    this.open = false;\n  };\n\n  private async openModal(): Promise<void> {\n    await componentOnReady(this.el);\n    this.el.addEventListener(\"calciteModalOpen\", this.openEnd);\n    this.opened = true;\n    const titleEl = getSlotted(this.el, SLOTS.header);\n    const contentEl = getSlotted(this.el, SLOTS.content);\n\n    this.titleId = ensureId(titleEl);\n    this.contentId = ensureId(contentEl);\n\n    if (!this.embedded) {\n      if (totalOpenModals === 0) {\n        initialDocumentOverflowStyle = document.documentElement.style.overflow;\n      }\n\n      totalOpenModals++;\n      // use an inline style instead of a utility class to avoid global class declarations.\n      document.documentElement.style.setProperty(\"overflow\", \"hidden\");\n    }\n  }\n\n  private handleOutsideClose = (): void => {\n    if (this.outsideCloseDisabled) {\n      return;\n    }\n\n    this.open = false;\n  };\n\n  closeModal = async (): Promise<void> => {\n    if (this.beforeClose) {\n      try {\n        await this.beforeClose(this.el);\n      } catch (_error) {\n        // close prevented\n        requestAnimationFrame(() => {\n          this.ignoreOpenChange = true;\n          this.open = true;\n          this.ignoreOpenChange = false;\n        });\n        return;\n      }\n    }\n\n    totalOpenModals--;\n    this.opened = false;\n    this.removeOverflowHiddenClass();\n  };\n\n  private removeOverflowHiddenClass(): void {\n    document.documentElement.style.setProperty(\"overflow\", initialDocumentOverflowStyle);\n  }\n\n  private handleMutationObserver = (): void => {\n    this.updateFooterVisibility();\n    this.updateFocusTrapElements();\n  };\n\n  private updateFooterVisibility = (): void => {\n    this.hasFooter = !!getSlotted(this.el, [SLOTS.back, SLOTS.primary, SLOTS.secondary]);\n  };\n\n  private updateSizeCssVars = (): void => {\n    this.cssWidth = getComputedStyle(this.el).getPropertyValue(\"--calcite-modal-width\");\n    this.cssHeight = getComputedStyle(this.el).getPropertyValue(\"--calcite-modal-height\");\n  };\n\n  private contentTopSlotChangeHandler = (event: Event): void => {\n    this.hasContentTop = slotChangeHasAssignedElement(event);\n  };\n\n  private contentBottomSlotChangeHandler = (event: Event): void => {\n    this.hasContentBottom = slotChangeHasAssignedElement(event);\n  };\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-modal-content-background: Specifies the background color of content placed in the component's `\"content\"` slot.\n * @prop --calcite-modal-content-padding: Specifies the padding of the component's `\"content\"` slot.\n * @prop --calcite-modal-scrim-background: Specifies the background color of the component's scrim.\n * @prop --calcite-modal-width: Specifies the width of the component, using `px`, `em`, `rem`, `vw`, or `%`. Will never exceed the width of the viewport. Will not apply if `fullscreen` if set.\n * @prop --calcite-modal-height: Specifies the height of the component, using `px`, `em`, `rem`, `vh`, or `%`. Will never exceed the height of the viewport. Will not apply if `fullscreen` if set.\n *\n */\n\n:host {\n  --calcite-modal-scrim-background: #{rgba($calcite-color-neutral-blk-240, $calcite-opacity-85)};\n  @apply absolute flex inset-0 opacity-0 z-overlay;\n  visibility: hidden !important;\n  transition:\n    visibility 0ms linear var(--calcite-internal-animation-timing-slow),\n    opacity var(--calcite-internal-animation-timing-slow) $easing-function;\n  // the modal should always use a dark scrim, regardless of light / dark mode - matches value in global.scss\n  --calcite-modal-scrim-background-internal: #{rgba($calcite-color-neutral-blk-240, $calcite-opacity-85)};\n}\n\n.content-top[hidden],\n.content-bottom[hidden] {\n  @apply hidden;\n}\n\n.container {\n  @apply text-color-2\n    fixed\n    inset-0\n    flex\n    items-center\n    justify-center\n    overflow-y-hidden\n    opacity-0\n    z-overlay;\n  visibility: hidden !important;\n  transition:\n    visibility 0ms linear var(--calcite-internal-animation-timing-slow),\n    opacity var(--calcite-internal-animation-timing-slow) $easing-function;\n}\n\n:host([scale=\"s\"]) {\n  --calcite-modal-padding-internal: theme(\"spacing.3\");\n  --calcite-modal-padding-large-internal: theme(\"spacing.4\");\n  --calcite-modal-title-text-internal: theme(\"fontSize.1h\");\n  --calcite-modal-content-text-internal: theme(\"fontSize.n1\");\n}\n\n:host([scale=\"m\"]) {\n  --calcite-modal-padding-internal: theme(\"spacing.4\");\n  --calcite-modal-padding-large-internal: theme(\"spacing.5\");\n  --calcite-modal-title-text-internal: theme(\"fontSize.2h\");\n  --calcite-modal-content-text-internal: theme(\"fontSize.0\");\n}\n\n:host([scale=\"l\"]) {\n  --calcite-modal-padding-internal: theme(\"spacing.5\");\n  --calcite-modal-padding-large-internal: theme(\"spacing.6\");\n  --calcite-modal-title-text-internal: theme(\"fontSize.3h\");\n  --calcite-modal-content-text-internal: theme(\"fontSize.1\");\n}\n\n.scrim {\n  --calcite-scrim-background: var(--calcite-modal-scrim-background, var(--calcite-color-transparent-scrim));\n  @apply fixed inset-0 flex overflow-y-hidden;\n}\n\n.modal {\n  @apply shadow-2-sm\n    bg-foreground-1\n    pointer-events-none\n    float-none\n    m-6\n    box-border\n    flex\n    w-full\n    flex-col\n    overflow-hidden\n    rounded\n    opacity-0\n    z-modal;\n  -webkit-overflow-scrolling: touch;\n  visibility: hidden;\n  transition:\n    transform var(--calcite-internal-animation-timing-slow) $easing-function,\n    visibility 0ms linear var(--calcite-internal-animation-timing-slow),\n    opacity var(--calcite-internal-animation-timing-slow) $easing-function;\n\n  --calcite-modal-hidden-position: translate3d(0, 20px, 0);\n  --calcite-modal-shown-position: translate3d(0, 0, 0);\n\n  &--opening {\n    &-idle {\n      transform: var(--calcite-modal-hidden-position);\n    }\n    &-active {\n      transform: var(--calcite-modal-shown-position);\n    }\n  }\n\n  &--closing {\n    &-idle {\n      transform: var(--calcite-modal-shown-position);\n    }\n    &-active {\n      transform: var(--calcite-modal-hidden-position);\n    }\n  }\n}\n\n:host([opened]) {\n  @apply opacity-100;\n  visibility: visible !important;\n  transition-delay: 0ms;\n}\n\n.container--open {\n  @apply opacity-100;\n  visibility: visible !important;\n  transition-delay: 0ms;\n  .modal {\n    @apply pointer-events-auto visible opacity-100;\n    transition:\n      transform var(--calcite-internal-animation-timing-slow) $easing-function,\n      visibility 0ms linear,\n      opacity var(--calcite-internal-animation-timing-slow) $easing-function,\n      max-inline-size var(--calcite-internal-animation-timing-slow) $easing-function,\n      max-block-size var(--calcite-internal-animation-timing-slow) $easing-function;\n    transition-delay: 0ms;\n  }\n}\n\n/**\n * Header\n */\n.header {\n  @apply bg-foreground-1\n    border-color-3\n    flex\n    min-w-0\n    max-w-full\n    rounded-t\n    border-0\n    border-b\n    border-solid\n    z-header;\n  flex: 0 0 auto;\n}\n\n.close {\n  @apply text-color-3\n    transition-default\n    focus-base\n    order-2\n    m-0\n    cursor-pointer\n    appearance-none\n    border-none\n    bg-transparent;\n  padding-block: var(--calcite-modal-padding-internal);\n  padding-inline: var(--calcite-modal-padding-internal);\n  flex: 0 0 auto;\n  calcite-icon {\n    @apply pointer-events-none;\n    vertical-align: -2px;\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n  &:hover,\n  &:focus,\n  &:active {\n    @apply bg-foreground-2 text-color-1;\n  }\n}\n\n.title {\n  @apply order-1 flex min-w-0 items-center;\n  flex: 1 1 auto;\n  padding-block: var(--calcite-modal-padding-internal);\n  padding-inline: var(--calcite-modal-padding-large-internal);\n}\n\n@include slotted(\"header\", \"*\") {\n  @apply text-color-1 m-0 font-normal;\n  font-size: var(--calcite-modal-title-text-internal);\n}\n\n/**\n * Content area\n */\n.content {\n  @apply relative box-border block h-full overflow-auto p-0;\n  background-color: var(--calcite-modal-content-background, theme(\"colors.background.foreground.1\"));\n  max-block-size: 100%;\n  padding: var(--calcite-modal-content-padding, var(--calcite-modal-padding-internal));\n}\n\n.content-top,\n.content-bottom {\n  @apply bg-foreground-1 border-color-3 border-solid border-0 z-header flex;\n  flex: 0 0 auto;\n  padding: var(--calcite-modal-padding-internal);\n}\n\n.content-top {\n  @apply min-w-0 max-w-full border-b;\n}\n\n.content-bottom {\n  @apply mt-auto box-border w-full justify-between border-t;\n}\n\n.content-top:not(.header ~ .content-top) {\n  @apply rounded-t;\n}\n\n.content-bottom:not(.content-bottom ~ .footer),\n.content--no-footer {\n  @apply rounded-b;\n}\n\n@include slotted(\"content\", \"*\") {\n  font-size: var(--calcite-modal-context-text-internal);\n}\n\n/**\n * Footer\n */\n.footer {\n  @apply bg-foreground-1\n    border-color-3\n    mt-auto\n    box-border\n    flex\n    w-full\n    justify-between\n    rounded-b\n    border-0\n    border-t\n    border-solid\n    z-header;\n  flex: 0 0 auto;\n  padding-block: var(--calcite-modal-padding-internal);\n  padding-inline: var(--calcite-modal-padding-large-internal);\n}\n\n.footer--hide-back .back,\n.footer--hide-secondary .secondary {\n  @apply hidden;\n}\n\n.back {\n  @apply block;\n  margin-inline-end: auto;\n}\n\n.secondary {\n  @apply mx-1 block;\n}\n\nslot[name=\"primary\"] {\n  @apply block;\n}\n\n/**\n * Sizes\n */\n@mixin modal-size($size, $width) {\n  :host([width-scale=\"#{$size}\"]) .modal {\n    @apply max-h-full max-w-full;\n    inline-size: var(--calcite-modal-width, $width);\n    block-size: var(--calcite-modal-height, auto);\n  }\n\n  @media screen and (max-width: $width + 2 * $baseline) {\n    :host([width-scale=\"#{$size}\"]) {\n      .modal {\n        @apply m-0 h-full max-h-full w-full max-w-full;\n      }\n      .content {\n        flex: 1 1 auto;\n        max-block-size: unset;\n      }\n    }\n    :host([width-scale=\"#{$size}\"][docked]) .container {\n      align-items: flex-end;\n    }\n  }\n}\n\n:host([width=\"small\"]) .modal {\n  @apply w-auto;\n}\n\n@include modal-size(\"s\", 32rem);\n@include modal-size(\"m\", 48rem);\n@include modal-size(\"l\", 94rem);\n\n/**\n * Fullscreen\n */\n:host([fullscreen]) {\n  .modal {\n    @apply m-0 max-h-full max-w-full h-full w-full rounded-none;\n    --calcite-modal-hidden-position: translate3D(0, 20px, 0) scale(0.95);\n    --calcite-modal-shown-position: translate3D(0, 0, 0) scale(1);\n  }\n  .content {\n    @apply max-h-full;\n    flex: 1 1 auto;\n  }\n}\n\n:host([opened][fullscreen]) {\n  .header,\n  .footer,\n  .content-top,\n  .content-bottom {\n    border-radius: 0;\n  }\n}\n\n/**\n * Docked\n */\n:host([docked]) {\n  .modal {\n    block-size: var(--calcite-modal-height, auto);\n  }\n  .content {\n    @apply h-auto;\n    flex: 1 1 auto;\n  }\n}\n\n/**\n * Kinds\n */\n:host([kind=\"brand\"]) .modal {\n  @apply border-color-brand;\n}\n\n:host([kind=\"danger\"]) .modal {\n  @apply border-color-danger;\n}\n\n:host([kind=\"info\"]) .modal {\n  @apply border-color-info;\n}\n\n:host([kind=\"success\"]) .modal {\n  @apply border-color-success;\n}\n\n:host([kind=\"warning\"]) .modal {\n  @apply border-color-warning;\n}\n\n:host([kind=\"brand\"]),\n:host([kind=\"danger\"]),\n:host([kind=\"info\"]),\n:host([kind=\"success\"]),\n:host([kind=\"warning\"]) {\n  .modal {\n    @apply border-0 border-t-4 border-solid;\n  }\n  .header,\n  .content-top {\n    @apply rounded rounded-b-none;\n  }\n}\n\n/**\n * Tablet\n */\n@media screen and (max-width: $viewport-medium) {\n  @include slotted(\"header\", \"content-top\", \"*\") {\n    @apply text-1;\n  }\n  .footer,\n  .content-bottom {\n    @apply sticky bottom-0;\n  }\n}\n\n/**\n * Mobile\n */\n@media screen and (max-width: $viewport-small) {\n  .footer,\n  .content-bottom {\n    @apply flex-col;\n  }\n  .back,\n  .secondary {\n    @apply m-0 mb-1;\n  }\n}\n\n/**\n * Conditional styles for when Modal is slotted in Shell\n */\n\n.container--embedded {\n  position: absolute;\n  pointer-events: auto;\n  calcite-scrim {\n    position: absolute;\n  }\n}\n\n@include base-component();\n"],"names":["loggedDeprecations","Set","logLevels","trace","debug","info","warn","error","off","forwardToConsole","level","logLevel","willLog","_len","arguments","length","data","Array","_key","console","call","this","listFormatter","logger","message","deprecated","context","_ref","component","name","suggested","removalVersion","key","concat","has","add","multiSuggestions","isArray","Intl","ListFormat","style","type","format","map","suggestion","CSS","ICONS","SLOTS","totalOpenModals","initialDocumentOverflowStyle","Modal","proxyCustomElement","HTMLElement","ignoreOpenChange","mutationObserver","createObserver","handleMutationObserver","cssVarObserver","updateSizeCssVars","openTransitionProp","setTransitionEl","el","transitionEl","openEnd","setFocus","removeEventListener","handleCloseClick","open","handleOutsideClose","outsideCloseDisabled","closeModal","async","beforeClose","_error","requestAnimationFrame","opened","removeOverflowHiddenClass","updateFooterVisibility","updateFocusTrapElements","hasFooter","getSlotted","cssWidth","getComputedStyle","getPropertyValue","cssHeight","contentTopSlotChangeHandler","event","hasContentTop","slotChangeHasAssignedElement","contentBottomSlotChangeHandler","hasContentBottom","handleFocusTrapDisabled","focusTrapDisabled","deactivateFocusTrap","activateFocusTrap","onMessagesChange","componentWillLoad","setUpMessages","setUpLoadableComponent","openModal","componentDidLoad","setComponentLoaded","connectedCallback","_this$mutationObserve","_this$cssVarObserver","observe","childList","subtree","attributeFilter","connectConditionalSlotComponent","connectLocalized","connectMessages","connectFocusTrap","disconnectedCallback","_this$mutationObserve2","_this$cssVarObserver2","disconnect","disconnectConditionalSlotComponent","disconnectLocalized","disconnectMessages","embedded","render","h","Host","contentId","titleId","role","class","onClick","renderStyle","ref","renderCloseButton","renderContentTop","modalContent","renderContentBottom","renderFooter","hidden","onSlotchange","closeButtonDisabled","messages","close","closeButtonEl","title","icon","scale","getIconScale","fullscreen","docked","effectiveLocaleChange","updateMessages","effectiveLocale","handleEscape","escapeDisabled","defaultPrevented","preventDefault","componentFocusable","focusFirstTabbable","scrollContent","top","undefined","left","scrollTo","behavior","scrollTop","scrollLeft","onBeforeOpen","classList","calciteModalBeforeOpen","emit","onOpen","remove","calciteModalOpen","onBeforeClose","calciteModalBeforeClose","onClose","calciteModalClose","toggleModal","value","handleOpenedChange","idleClass","onToggleOpenCloseComponent","componentOnReady","addEventListener","titleEl","contentEl","ensureId","document","documentElement","overflow","setProperty"],"sourceRoot":""}