{"version":3,"file":"static/js/4961.8155585d.chunk.js","mappings":";yMAAO,MAAMA,EACJ,QADIA,EAEK,mBAFLA,EAGM,oBCgBNC,GAAIC,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,qEA4Ef,KAAAC,sBAAuBC,EAAAA,EAAAA,GAAe,YAAY,IAAMC,KAAKC,oBAyC7D,KAAAC,iBAAmB,CAACC,EAA0BC,IAEZD,GAAoBC,EAAmB,GADtCD,EAAmB,EAO7CC,EAAmBD,EAAmB,aAAe,YAHnD,KAMX,KAAAF,gBAAkB,KAChB,MAAM,oBAAEI,EAAmB,GAAEC,EAAE,MAAEC,GAAUP,KAErCQ,EAAWC,MAAMC,KACrBJ,EAAGK,iBAAiB,oBAADC,OACGP,EAAsB,IAAHO,OAAOP,GAAwB,MAExEQ,QAAQC,GAAaA,EAASC,QAAQ,kBAAoBT,IAEtDU,EAAeT,EAAMU,OACrBC,EAAeV,EAASS,OACxBE,EAAaX,EAASU,EAAe,GACrCE,EAAeZ,EAASU,EAAe,GAe7C,GAbIA,GAAgBC,GAClBX,EAASa,SAASC,IAChBA,EAASC,eAAiBD,IAAaH,GAAcD,EAAe,EACpEI,EAASE,OAASF,IAAaH,CAAU,IAIzCC,IACFA,EAAaK,UAAW,GAG1BzB,KAAKO,MAAQC,EAETQ,IAAiBE,EAAc,CACjC,MAAMQ,EAAgB1B,KAAKE,iBAAiBc,EAAcE,GAC1DlB,KAAK2B,UAAYT,EACjBlB,KAAK0B,cAAgBA,uDAxFe,oBAEnB,aAEmB,GA/DxC,UAAME,GACJ,MAAM,MAAErB,GAAUP,KAEZ6B,EAAWtB,EAAMA,EAAMU,OAAS,GAEtC,IAAKY,EACH,OAGF,MAAMC,EAAaD,EAASC,WACxBD,EAASC,WACT,IAAqBC,QAAQC,UAEjC,UACQF,EAAWG,KAAKJ,GACtB,MAAOK,GAEP,OAKF,OAFAL,EAASM,SAEFN,EAOT,cAAMO,SACEC,EAAAA,EAAAA,GAAmBrC,MAEzB,MAAM,MAAEO,GAAUP,KACZmB,EAAaZ,EAAMA,EAAMU,OAAS,GAExC,OAAiB,OAAVE,QAAU,IAAVA,OAAU,EAAVA,EAAYiB,WAsCrBE,iBAAAA,GAAiB,IAAAC,EACU,QAAzBA,EAAAvC,KAAKF,4BAAoB,IAAAyC,GAAzBA,EAA2BC,QAAQxC,KAAKM,GAAI,CAAEmC,WAAW,EAAMC,SAAS,IACxE1C,KAAKC,kBAGP,uBAAM0C,IACJC,EAAAA,EAAAA,GAAuB5C,MAGzB6C,gBAAAA,IACEC,EAAAA,EAAAA,GAAmB9C,MAGrB+C,oBAAAA,GAAoB,IAAAC,EACO,QAAzBA,EAAAhD,KAAKF,4BAAoB,IAAAkD,GAAzBA,EAA2BC,aAU7B,yBAAMC,CAAoBC,GACxB,IAAIA,EAAMC,iBAKV,aADMpD,KAAK4B,OACJ5B,KAAKoC,WAsDdiB,MAAAA,GACE,MAAM,cAAE3B,GAAkB1B,KAEpBsD,EAAwB,CAC5B,CAAC5D,IAAY,EACb,CAACA,GAAuC,cAAlBgC,EACtB,CAAChC,GAAwC,eAAlBgC,GAGzB,OACE6B,EAAAA,EAAAA,GAAA,OAAAC,IAAA,2CAAKC,MAAOH,IACVC,EAAAA,EAAAA,GAAA,QAAAC,IAAA,4FCtMQ","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/flow/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/flow/flow.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/flow/flow.scss?tag=calcite-flow&encapsulation=shadow"],"sourcesContent":["export const CSS = {\n  frame: \"frame\",\n  frameAdvancing: \"frame--advancing\",\n  frameRetreating: \"frame--retreating\",\n};\n","import { Component, Element, h, Listen, Method, Prop, State, VNode } from \"@stencil/core\";\nimport { createObserver } from \"../../utils/observers\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { FlowDirection, FlowItemLikeElement } from \"./interfaces\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-flow-item` elements to the component.\n */\n@Component({\n  tag: \"calcite-flow\",\n  styleUrl: \"flow.scss\",\n  shadow: true,\n})\nexport class Flow implements LoadableComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Removes the currently active `calcite-flow-item`.\n   */\n  @Method()\n  async back(): Promise<HTMLCalciteFlowItemElement | FlowItemLikeElement> {\n    const { items } = this;\n\n    const lastItem = items[items.length - 1];\n\n    if (!lastItem) {\n      return;\n    }\n\n    const beforeBack = lastItem.beforeBack\n      ? lastItem.beforeBack\n      : (): Promise<void> => Promise.resolve();\n\n    try {\n      await beforeBack.call(lastItem);\n    } catch (_error) {\n      // back prevented\n      return;\n    }\n\n    lastItem.remove();\n\n    return lastItem;\n  }\n\n  /**\n   * Sets focus on the component.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    const { items } = this;\n    const activeItem = items[items.length - 1];\n\n    return activeItem?.setFocus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * This property enables the component to consider other custom elements implementing flow-item's interface.\n   *\n   * @internal\n   */\n  @Prop() customItemSelectors: string;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteFlowElement;\n\n  @State() flowDirection: FlowDirection = null;\n\n  @State() itemCount = 0;\n\n  @State() items: FlowItemLikeElement[] = [];\n\n  itemMutationObserver = createObserver(\"mutation\", () => this.updateFlowProps());\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.itemMutationObserver?.observe(this.el, { childList: true, subtree: true });\n    this.updateFlowProps();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    this.itemMutationObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  @Listen(\"calciteFlowItemBack\")\n  async handleItemBackClick(event: CustomEvent): Promise<void> {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    await this.back();\n    return this.setFocus();\n  }\n\n  getFlowDirection = (oldFlowItemCount: number, newFlowItemCount: number): FlowDirection | null => {\n    const allowRetreatingDirection = oldFlowItemCount > 1;\n    const allowAdvancingDirection = oldFlowItemCount && newFlowItemCount > 1;\n\n    if (!allowAdvancingDirection && !allowRetreatingDirection) {\n      return null;\n    }\n\n    return newFlowItemCount < oldFlowItemCount ? \"retreating\" : \"advancing\";\n  };\n\n  updateFlowProps = (): void => {\n    const { customItemSelectors, el, items } = this;\n\n    const newItems = Array.from<FlowItemLikeElement>(\n      el.querySelectorAll(\n        `calcite-flow-item${customItemSelectors ? `,${customItemSelectors}` : \"\"}`,\n      ),\n    ).filter((flowItem) => flowItem.closest(\"calcite-flow\") === el);\n\n    const oldItemCount = items.length;\n    const newItemCount = newItems.length;\n    const activeItem = newItems[newItemCount - 1];\n    const previousItem = newItems[newItemCount - 2];\n\n    if (newItemCount && activeItem) {\n      newItems.forEach((itemNode) => {\n        itemNode.showBackButton = itemNode === activeItem && newItemCount > 1;\n        itemNode.hidden = itemNode !== activeItem;\n      });\n    }\n\n    if (previousItem) {\n      previousItem.menuOpen = false;\n    }\n\n    this.items = newItems;\n\n    if (oldItemCount !== newItemCount) {\n      const flowDirection = this.getFlowDirection(oldItemCount, newItemCount);\n      this.itemCount = newItemCount;\n      this.flowDirection = flowDirection;\n    }\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { flowDirection } = this;\n\n    const frameDirectionClasses = {\n      [CSS.frame]: true,\n      [CSS.frameAdvancing]: flowDirection === \"advancing\",\n      [CSS.frameRetreating]: flowDirection === \"retreating\",\n    };\n\n    return (\n      <div class={frameDirectionClasses}>\n        <slot />\n      </div>\n    );\n  }\n}\n",":host {\n  @extend %component-host;\n  @apply relative\n    flex\n    w-full\n    flex-auto\n    items-stretch\n    overflow-hidden\n    bg-transparent;\n\n  .frame {\n    @apply relative\n      m-0\n      flex\n      w-full\n      flex-auto\n      flex-col\n      items-stretch\n      p-0;\n  }\n\n  ::slotted(calcite-flow-item),\n  ::slotted(calcite-panel) {\n    @apply h-full;\n  }\n\n  ::slotted(.calcite-match-height:last-child) {\n    @apply flex\n    flex-auto\n    overflow-hidden;\n  }\n\n  .frame--advancing {\n    animation: calcite-frame-advance var(--calcite-animation-timing);\n  }\n\n  .frame--retreating {\n    animation: calcite-frame-retreat var(--calcite-animation-timing);\n  }\n\n  @keyframes calcite-frame-advance {\n    0% {\n      @apply bg-opacity-50;\n      transform: translate3d(50px, 0, 0);\n    }\n    100% {\n      @apply bg-opacity-100;\n      transform: translate3d(0, 0, 0);\n    }\n  }\n\n  @keyframes calcite-frame-retreat {\n    0% {\n      @apply bg-opacity-50;\n      transform: translate3d(-50px, 0, 0);\n    }\n    100% {\n      @apply bg-opacity-100;\n      transform: translate3d(0, 0, 0);\n    }\n  }\n}\n\n@include base-component();\n"],"names":["CSS","Flow","proxyCustomElement","HTMLElement","itemMutationObserver","createObserver","this","updateFlowProps","getFlowDirection","oldFlowItemCount","newFlowItemCount","customItemSelectors","el","items","newItems","Array","from","querySelectorAll","concat","filter","flowItem","closest","oldItemCount","length","newItemCount","activeItem","previousItem","forEach","itemNode","showBackButton","hidden","menuOpen","flowDirection","itemCount","back","lastItem","beforeBack","Promise","resolve","call","_error","remove","setFocus","componentFocusable","connectedCallback","_this$itemMutationObs","observe","childList","subtree","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","disconnectedCallback","_this$itemMutationObs2","disconnect","handleItemBackClick","event","defaultPrevented","render","frameDirectionClasses","h","key","class"],"sourceRoot":""}