"use strict";(self.webpackChunksc_viaduct=self.webpackChunksc_viaduct||[]).push([[5698],{45698:(e,s,t)=>{t.d(s,{uploadAssets:()=>H});var o=t(3825),n=t(81806),r=t(76460),a=t(50346),i=t(91417),c=t(90534),l=t(49723),u=t(57045),p=t(50076);const d="upload-assets",f=()=>new Error;class m extends p.A{constructor(){super("".concat(d,":unsupported"),"Layer does not support asset uploads.",f())}}class h extends p.A{constructor(){super("".concat(d,":no-glb-support"),"Layer does not support glb.",f())}}class g extends p.A{constructor(){super("".concat(d,":no-supported-source"),"No supported external source found",f())}}class w extends p.A{constructor(){super("".concat(d,":not-base-64"),"Expected gltf data in base64 format after conversion.",f())}}class y extends p.A{constructor(){super("".concat(d,":unable-to-prepare-options"),"Unable to prepare uploadAsset request options.",f())}}class v extends p.A{constructor(e,s){super("".concat(d,":bad-response"),"Bad response. Uploaded ".concat(e," items and received ").concat(s," results."),f())}}class T extends p.A{constructor(e,s){var t,o;super("".concat(d,"-layer:upload-failed"),"Failed to upload mesh file ".concat(e,". Error code: ").concat(null!==(t=null===s||void 0===s?void 0:s.code)&&void 0!==t?t:"-1",". Error message: ").concat(null!==(o=null===s||void 0===s?void 0:s.messages)&&void 0!==o?o:"unknown"),f())}}class A extends p.A{constructor(e){super("".concat(d,"-layer:unsupported-format"),"The service allowed us to upload an asset of FormatID ".concat(e,", but it does not list it in its supported formats."),f())}}class P extends p.A{constructor(){super("".concat(d,":convert3D-failed"),"convert3D failed.")}}const b={upload:{createFromFiles:.8,loadMesh:.2},uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};var j=t(13096),x=t(54901),F=t(87663);function E(e){return new _(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>{},arguments.length>2?arguments[2]:void 0)}class _{constructor(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>{},t=arguments.length>2?arguments[2]:void 0;if(this.onProgress=s,this.taskName=t,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,"number"==typeof e){this._weights={};for(let s=0;s<e;s++){const t=s,o=1/e;this._weights[t]=o,this._progressMap.set(t,0)}}else this._weights=e;this.emitProgress()}emitProgress(){let e=0;for(const[o,n]of this._progressMap.entries())e+=n*this._weights[o];if(1===e&&(0,n.A)("enable-feature:esri-3dofl-upload-timings")){var s;const e=Math.round(performance.now()-(null!==(s=this._startTime)&&void 0!==s?s:0))/1e3;console.log("".concat(this.taskName," done in ").concat(e," sec"));for(const[s,o]of this._timingsMap){var t;const n=Math.round(o.end-o.start)/1e3,r=Math.round(n/e*100);console.log(null!==(t=this.taskName)&&void 0!==t?t:"Task",{stepKey:s,stepTime:n,relativeTime:r})}}this.onProgress(e)}setProgress(e,s){if(this._progressMap.set(e,s),(0,n.A)("enable-feature:esri-3dofl-upload-timings")){var t;const o=performance.now();null!==(t=this._startTime)&&void 0!==t||(this._startTime=o);const n=(0,F.tE)(this._timingsMap,e,(()=>({start:o,end:0})));1===s&&(n.end=o)}this.emitProgress()}simulate(e,s){return M((s=>this.setProgress(e,s)),s)}makeOnProgress(e){return s=>this.setProgress(e,s)}}function M(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e=>{},s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:U;const t=performance.now();e(0);const o=setInterval((()=>{const o=performance.now()-t,n=1-Math.exp(-o/s);e(n)}),D);return(0,x.hA)((()=>{clearInterval(o),e(1)}))}function N(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:k;return(0,i.gr)((0,i.Kp)(e*I/s))}const k=10,S=10,I=8e-6,D=(0,i.l5)(50),U=(0,i.l5)(1e3),B=1e6,q=20*B,C=2e9,O=3;async function R(e,s,t){let{data:n,name:r,description:i}=e,l=null;try{const e=(0,c.fj)(s,"uploads"),u=(0,c.fj)(e,"info"),{data:p}=await(0,o.A)(u,{query:{f:"json"},responseType:"json"});(0,a.Te)(t);const d=(0,j.Wo)(s),f=p.maxUploadFileSize*B,m=d?C:f,h=d?Math.min(q,f):q;if(n.size>m)throw new Error("Data too large");const g=(0,c.fj)(e,"register"),{data:w}=await(0,o.A)(g,{query:{f:"json",itemName:L(r),description:i},responseType:"json",method:"post"});if((0,a.Te)(t),!w.success)throw new Error("Registration failed");const{itemID:y}=w.item;l=(0,c.fj)(e,y);const v=(0,c.fj)(l,"uploadPart"),T=Math.ceil(n.size/h),A=new Array;for(let s=0;s<T;++s)A.push(n.slice(s*h,Math.min((s+1)*h,n.size)));const P=A.slice().reverse(),b=new Array,x=E(T,null===t||void 0===t?void 0:t.onProgress,"uploadItem"),F=async()=>{for(;0!==P.length;){const e=A.length-P.length,s=P.pop(),n=new FormData,r=x.simulate(e,N(s.size));try{const r=s;n.append("f","json"),n.append("file",r),n.append("partId","".concat(e));const{data:i}=await(0,o.A)(v,{timeout:0,body:n,responseType:"json",method:"post"});if((0,a.Te)(t),!i.success)throw new Error("Part upload failed")}finally{r.remove()}}};for(let s=0;s<O&&0!==P.length;++s)b.push(F());await Promise.all(b);const _=(0,c.fj)(l,"commit"),{data:M}=await(0,o.A)(_,{query:{f:"json",parts:A.map(((e,s)=>s)).join(",")},responseType:"json",method:"post"});if((0,a.Te)(t),!M.success)throw new Error("Commit failed");return M.item}catch(u){if(null!=l){const e=(0,c.fj)(l,"delete");await(0,o.A)(e,{query:{f:"json"},responseType:"json",method:"post"})}throw u}}function L(e){return e.replaceAll("/","_").replaceAll("\\","_")}var z=t(19463);async function H(e,s,t){var o;const n=e.length;if(!n)return null!==t&&void 0!==t&&null!==(o=t.onProgress)&&void 0!==o&&o.call(t,1),[];const r=E(n,null===t||void 0===t?void 0:t.onProgress,"uploadAssets");return Promise.all(e.map(((e,o)=>async function(e,s,t){var o;let{layer:n,ongoingUploads:r}=s;const c=r.get(e);if(c)return c;if(!function(e){return!!e.infoFor3D&&!!e.url}(n))throw new m;if(function(e,s){const{parsedUrl:t}=s;return null!=t&&e.metadata.externalSources.some((e=>(0,u.eN)(e,t)))}(e,n))return null!==t&&void 0!==t&&null!==(o=t.onProgress)&&void 0!==o&&o.call(t,1),e;const p=async function(e,s,t){const{metadata:o}=e,{displaySource:n}=o,r=G(null===n||void 0===n?void 0:n.source,s),c=!!r,u=o.externalSources.length>0,p=c?async function(e,s,t){return{source:await Q(e,s,t),original:!0}}(r,s,t):u?async function(e,s,t){const o=Z(s),{externalSources:n}=e.metadata,r=function(e,s){for(const t of e){const e=G(t.source,s);if(e)return e}return null}(n,s);if(!r)throw new g;const a=E(b.uploadConvertibleSource,null===t||void 0===t?void 0:t.onProgress,"uploadConvertibleSource"),c=await Q(r,s,{onProgress:a.makeOnProgress("uploadEditSource")});e.addExternalSources([{source:c,original:!0}]);const l=r.reduce(((e,s)=>{let{asset:t}=s;return t instanceof File?e+t.size:e}),0),u=a.simulate("serviceAssetsToGlb",function(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:S;return(0,i.gr)((0,i.Kp)(e*I/s))}(l));try{return{source:await V(c,s,o)}}finally{u.remove()}}(e,s,t):async function(e,s,t){const o=E(b.uploadLocalMesh,null===t||void 0===t?void 0:t.onProgress,"uploadLocalMesh"),n=async function(e,s,t){const o=Z(s),n=await e.load(t),r=await n.toBinaryGLTF({ignoreLocalTransform:!0});(0,a.Te)(t);const i=await r.buffer();return(0,a.Te)(t),{blob:new Blob([i.data],{type:i.type}),assetName:"".concat((0,l.yS)(),".glb"),assetType:o}}(e,s,{...t,onProgress:o.makeOnProgress("meshToAssetBlob")});return{source:await W([n],s,{...t,onProgress:o.makeOnProgress("uploadAssetBlobs")}),extent:e.extent.clone(),original:!0}}(e,s,t),d=await p;return(0,a.Te)(t),e.addExternalSources([d]),e}(e,n,t);r.set(e,p);try{await p}finally{r.delete(e)}return e}(e,s,{...t,onProgress:r.makeOnProgress(o)}))))}function G(e,s){if(!e)return null;const{infoFor3D:{supportedFormats:t,editFormats:o}}=s,n=(0,u.WN)(e),r=new Array;let a=!1;for(let i=0;i<n.length;++i){const e=K(n[i],t);if(!e)return null;o.includes(e.assetType)&&(a=!0),r.push(e)}return a?r:null}function K(e,s){const t=(0,u.fH)(e,s);return t?{asset:e,assetType:t}:null}async function Q(e,s,t){return W(e.map((e=>async function(e,s){const{asset:t,assetType:o}=e;if(t instanceof File)return{blob:t,assetName:t.name,assetType:o};const n=await t.toBlob(s);return(0,a.Te)(s),{blob:n,assetName:t.assetName,assetType:o}}(e,t))),s,t)}async function W(e,s,t){const o=E(b.uploadAssetBlobs,null===t||void 0===t?void 0:t.onProgress,"uploadAssetBlobs"),n=await function(e,s,t){const o=E(e.length,null===t||void 0===t?void 0:t.onProgress,"prepareAssetItems");return Promise.all(e.map((async(e,n)=>{const i=async function(e,s,t){const{blob:o,assetType:n,assetName:i}=e;let l=null;try{const e=await R({data:o,name:i},s.url,t);(0,a.Te)(t),l={assetType:n,assetUploadId:e.itemID}}catch(U){(0,a.QP)(U),r.A.getLogger("esri.layers.graphics.sources.support.uploadAssets").warnOnce("Service ".concat(s.url," does not support the REST Uploads API."))}if(!l){const e=await(0,c._0)(o);if((0,a.Te)(t),!e.isBase64)throw new w;l={assetType:n,assetData:e.data}}if(!l)throw new y;return{item:l,assetName:i}}(await e,s,{...t,onProgress:o.makeOnProgress(n)});return(0,a.Te)(t),i})))}(e,s,{...t,onProgress:o.makeOnProgress("prepareAssetItems")});(0,a.Te)(t);const i=n.map((e=>{let{item:s}=e;return s})),{uploadResults:l}=await J(i,s,{...t,onProgress:o.makeOnProgress("uploadAssetItems")});return(0,a.Te)(t),e.map(((e,t)=>function(e,s,t){const{success:o}=s;if(!o){const{error:t}=s;throw new T(e.assetName,t)}const{assetHash:n}=s,{assetName:r,item:{assetType:a}}=e,{infoFor3D:{supportedFormats:i}}=t,c=(0,z.Fm)(a,i);if(!c)throw new A(a);return new u.Qp(r,c,[new u.Bq("".concat(t.parsedUrl.path,"/assets/").concat(n),n)])}(n[t],l[t],s)))}async function J(e,s,t){const n=M(null===t||void 0===t?void 0:t.onProgress);try{const n=await(0,o.A)((0,c.fj)(s.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(e)},method:"post",responseType:"json"});if((0,a.Te)(t),n.data.uploadResults.length!==e.length)throw new v(e.length,n.data.uploadResults.length);return n.data}finally{n.remove()}}async function V(e,s,t){var o;const n=e.map((e=>{let{assetName:s,parts:t}=e;return{assetName:s,assetHash:t[0].partHash}})),r=null===(o=s.capabilities)||void 0===o?void 0:o.operations.supportsAsyncConvert3D,a={f:"json",assets:JSON.stringify(n),transportType:"esriTransportTypeUrl",targetFormat:t,async:r},i=(0,c.fj)(s.parsedUrl.path,"convert3D");let l;try{l=(await(r?Y:X)(i,{query:a,responseType:"json",timeout:0})).data}catch(U){throw new P}const{supportedFormats:p}=s.infoFor3D;return l.assets.map((e=>{const s=(0,z.R_)(e.contentType,p);if(!s)throw new A(s);return new u.Qp(e.assetName,e.contentType,[new u.Bq(e.assetURL,e.assetHash)])}))}function X(e,s){return(0,o.A)(e,s)}async function Y(e,s){const t=(await(0,o.A)(e,s)).data.statusUrl;for(;;){const e=(await(0,o.A)(t,{query:{f:"json"},responseType:"json"})).data;switch(e.status){case"Completed":return(0,o.A)(e.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(e.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await(0,a.Pl)($)}}function Z(e){var s;const{infoFor3D:t}=e,o=null!==(s=(0,z.R_)("model/gltf-binary",t.supportedFormats))&&void 0!==s?s:(0,z.E1)("glb",t.supportedFormats);if(!o)throw new h;return o}const $=(0,i.l5)(1e3)}}]);
//# sourceMappingURL=5698.908a715f.chunk.js.map