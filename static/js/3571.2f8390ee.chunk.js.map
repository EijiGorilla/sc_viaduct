{"version":3,"file":"static/js/3571.2f8390ee.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/layers/support/ElevationTile.js","../node_modules/@arcgis/core/layers/support/ElevationQuery.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{ElevationSamplerData as a}from\"./ElevationSamplerData.js\";class t{constructor(t,l=null){if(this.tile=t,null!=l&&null!=t){const e=t.extent;this._samplerData=new a(l,e)}}get zmin(){return null!=this._samplerData?this._samplerData.data.minValue:0}get zmax(){return null!=this._samplerData?this._samplerData.data.maxValue:0}sample(a,t){if(null==this._samplerData)return;const{safeWidth:e,data:r,dx:s,dy:n,y1:i,x0:u}=this._samplerData,{width:m,values:o,noDataValue:h}=r,p=l(n*(i-t),0,e),D=l(s*(a-u),0,e),f=Math.floor(p),c=Math.floor(D),d=f*m+c,_=d+m,x=o[d],V=o[_],g=o[d+1],v=o[_+1];if(x!==h&&V!==h&&g!==h&&v!==h){const a=D-c,t=x+(g-x)*a;return t+(V+(v-V)*a-t)*(p-f)}}}function l(a,t,l){return a<t?t:a>l?l:a}export{t as ElevationTile};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{result as e}from\"../../core/asyncUtils.js\";import t from\"../../core/Error.js\";import{assertIsSome as i}from\"../../core/maybe.js\";import{whenOrAbort as n,throwIfAbortError as l}from\"../../core/promiseUtils.js\";import{getMetersPerUnitForSR as s}from\"../../core/unitUtils.js\";import o from\"../../geometry/Multipoint.js\";import a from\"../../geometry/Point.js\";import r from\"../../geometry/Polyline.js\";import{initializeProjection as c,project as u}from\"../../geometry/projection.js\";import{fromExtent as h,create as p,contains as m}from\"../../geometry/support/aaBoundingRect.js\";import{MultiTileElevationSampler as f}from\"./ElevationSampler.js\";import{ElevationTile as d}from\"./ElevationTile.js\";import{TileKey as y}from\"./TileKey.js\";class T{async queryAll(e,i,n){if(!(e=n&&n.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");const l=v.fromGeometry(i);let s=!1;n&&n.returnSampleInfo||(s=!0);const o={...R,...n,returnSampleInfo:!0},a=await this.query(e[e.length-1],l,o),r=await this._queryAllContinue(e,a,o);return r.geometry=r.geometry.export(),s&&delete r.sampleInfo,r}async query(e,i,n){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||!(i instanceof v)&&\"point\"!==i.type&&\"multipoint\"!==i.type&&\"polyline\"!==i.type)throw new t(\"elevation-query:invalid-geometry\",\"Only point, polyline and multipoint geometries can be used to query elevation\");const l={...R,...n},s=new x(e,i.spatialReference,l),o=l.signal;return await e.load({signal:o}),await this._createGeometryDescriptor(s,i,o),await this._selectTiles(s,o),await this._populateElevationTiles(s,o),this._sampleGeometryWithElevation(s),this._createQueryResult(s,o)}async createSampler(e,i,n){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const l={...R,...n};return this._createSampler(e,i,l)}async createSamplerAll(e,i,n){if(!(e=n&&n.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const l={...R,...n,returnSampleInfo:!0},s=await this._createSampler(e[e.length-1],i,l);return this._createSamplerAllContinue(e,i,s,l)}async _createSampler(e,t,i,n){const l=i.signal;await e.load({signal:l});const s=t.spatialReference,o=e.tileInfo.spatialReference;s.equals(o)||(await c([{source:s,dest:o}],{signal:l}),t=u(t,o));const a=new _(e,t,i,n);return await this._selectTiles(a,l),await this._populateElevationTiles(a,l),new f(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const l=i.samplers.map((e=>h(e.extent))),s=await this._createSampler(e[e.length-1],t,n,l);if(0===s.samplers.length)return i;const o=i.samplers.concat(s.samplers),a=new f(o,n.noDataValue);return this._createSamplerAllContinue(e,t,a,n)}async _queryAllContinue(e,t,n){const l=e.pop(),s=t.geometry.coordinates,o=t.sampleInfo;i(o);const a=[],r=[];for(let i=0;i<s.length;i++){const t=o[i];t.demResolution>=0?t.source||(t.source=l):e.length&&(a.push(s[i]),r.push(i))}if(!e.length||0===a.length)return t;const c=t.geometry.clone(a),u=await this.query(e[e.length-1],c,n),h=u.sampleInfo;if(!h)throw new Error(\"no sampleInfo\");return r.forEach(((e,t)=>{s[e].z=u.geometry.coordinates[t].z,o[e].demResolution=h[t].demResolution})),this._queryAllContinue(e,t,n)}async _createQueryResult(e,t){const n=await e.geometry.project(e.outSpatialReference,t);i(n);const l={geometry:n.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(l.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),l}async _createGeometryDescriptor(e,i,n){let l;const s=e.layer.tileInfo.spatialReference;if(i instanceof v?l=await i.project(s,n):(await c([{source:i.spatialReference,dest:s}],{signal:n}),l=u(i,s)),!l)throw new t(\"elevation-query:spatial-reference-mismatch\",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${s.wkid}'`);e.geometry=v.fromGeometry(l)}async _selectTiles(e,i){\"geometry\"===e.type&&this._preselectOutsideLayerExtent(e);const n=e.options.demResolution;if(\"number\"==typeof n)this._selectTilesClosestResolution(e,n);else if(\"finest-contiguous\"===n)await this._selectTilesFinestContiguous(e,i);else{if(\"auto\"!==n)throw new t(\"elevation-query:invalid-dem-resolution\",`Invalid dem resolution value '${n}', expected a number, \"finest-contiguous\" or \"auto\"`);await this._selectTilesAuto(e,i)}}_preselectOutsideLayerExtent(e){if(null==e.layer.fullExtent)return;const t=new d(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const n=e.x,l=e.y;(n<i.xmin||n>i.xmax||l<i.ymin||l>i.ymax)&&(e.elevationTile=t)}))}_selectTilesClosestResolution(e,t){const i=this._findNearestDemResolutionLODIndex(e,t);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,l=t/s(i.spatialReference),o=q(i,n);let a=o[0],r=0;for(let s=1;s<o.length;s++){const e=o[s];Math.abs(e.resolution-l)<Math.abs(a.resolution-l)&&(a=e,r=s)}return r}async _selectTilesFinestContiguous(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,l=E(i,n,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,l,t)}async _selectTilesFinestContiguousAt(e,i,s){const o=e.layer;if(e.selectTilesAtLOD(i),i<0)return;const a=o.tilemapCache,r=e.getTilesToFetch();try{if(a&&!I(a))await n(Promise.all(r.map((e=>a.fetchAvailability(e.level,e.row,e.col,{signal:s})))),s);else if(await this._populateElevationTiles(e,s),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new t(\"elevation-query:has-unavailable-tiles\")}catch(c){l(c),await this._selectTilesFinestContiguousAt(e,i-1,s)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),l={},s=e.options.cache,o=e.options.noDataValue,a=i.map((async i=>{if(null==i.id)return;const n=`${e.layer.uid}:${i.id}:${o}`,a=null!=s?s.get(n):null,r=null!=a?a:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:o,signal:t});null!=s&&s.put(n,r),l[i.id]=new d(i,r)}));await n(Promise.allSettled(a),t),e.populateElevationTiles(l)}async _selectTilesAuto(t,i){this._selectTilesAutoFinest(t),this._reduceTilesForMaximumRequests(t);const s=t.layer.tilemapCache;if(!s||I(s))return this._selectTilesAutoPrefetchUpsample(t,i);const o=t.getTilesToFetch(),a={},r=o.map((async t=>{const n=new y(null,0,0,0,p()),o=await e(s.fetchAvailabilityUpsample(t.level,t.row,t.col,n,{signal:i}));!1!==o.ok?null!=t.id&&(a[t.id]=n):l(o.error)}));await n(Promise.all(r),i),t.remapTiles(a)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const n={},l=e=>{null!=e.id&&(e.id in n?n[e.id]++:(n[e.id]=1,i++))},s=e=>{if(null==e.id)return;const t=n[e.id];1===t?(delete n[e.id],i--):n[e.id]=t-1};e.forEachTileToFetch(l,s);let o=!0;for(;o&&(o=!1,e.forEachTileToFetch((n=>{i<=e.options.maximumAutoTileRequests||(s(n),t.upsampleTile(n)&&(o=!0),l(n))}),s),o););}_selectTilesAutoFinest(e){const{tileInfo:t,tilemapCache:i}=e.layer,n=E(t,i,e.options.minDemResolution);e.selectTilesAtLOD(n,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let n=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?n=!0:t()})),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let n=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);null!=e?n=e:t.elevationTile=null}t.z=n}))}_extractSampleInfo(e){const t=e.layer.tileInfo,i=s(t.spatialReference);return e.geometry.coordinates.map((n=>{let l=-1;if(n.elevationTile&&n.elevationTile!==e.outsideExtentTile){l=t.lodAt(n.elevationTile.tile.level).resolution*i}return{demResolution:l}}))}}class v{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new v;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>e.clone())),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await c([{source:this.spatialReference,dest:e}],{signal:t});const i=new o({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),n=u(i,e);if(!n)return null;const l=this.coordinates.map(((e,t)=>{const i=e.clone(),l=n.points[t];return i.x=l[0],i.y=l[1],i})),s=this.clone(l);return s.spatialReference=e,s}static fromGeometry(e){const t=new v;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof v)t.coordinates=e.coordinates.map((e=>e.clone())),t._exporter=(t,i)=>{const n=e.clone(t);return n.spatialReference=i,n};else switch(e.type){case\"point\":{const i=e,{hasZ:n,hasM:l}=i;t.coordinates=n&&l?[new w(i.x,i.y,i.z,i.m)]:n?[new w(i.x,i.y,i.z)]:l?[new w(i.x,i.y,null,i.m)]:[new w(i.x,i.y)],t._exporter=(t,i)=>e.hasM?new a(t[0].x,t[0].y,t[0].z,t[0].m,i):new a(t[0].x,t[0].y,t[0].z,i);break}case\"multipoint\":{const i=e,{hasZ:n,hasM:l}=i;t.coordinates=n&&l?i.points.map((e=>new w(e[0],e[1],e[2],e[3]))):n?i.points.map((e=>new w(e[0],e[1],e[2]))):l?i.points.map((e=>new w(e[0],e[1],null,e[2]))):i.points.map((e=>new w(e[0],e[1]))),t._exporter=(t,i)=>e.hasM?new o({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatiaReference:i}):new o(t.map((e=>[e.x,e.y,e.z])),i);break}case\"polyline\":{const i=e,n=[],l=[],{hasZ:s,hasM:o}=e;let a=0;for(const e of i.paths)if(l.push([a,a+e.length]),a+=e.length,s&&o)for(const t of e)n.push(new w(t[0],t[1],t[2],t[3]));else if(s)for(const t of e)n.push(new w(t[0],t[1],t[2]));else if(o)for(const t of e)n.push(new w(t[0],t[1],null,t[2]));else for(const t of e)n.push(new w(t[0],t[1]));t.coordinates=n,t._exporter=(t,i)=>{const n=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),s=l.map((e=>n.slice(e[0],e[1])));return new r({paths:s,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class w{constructor(e,t,i=null,n=null,l=null,s=null){this.x=e,this.y=t,this.z=i,this.m=n,this.tile=l,this.elevationTile=s}clone(){return new w(this.x,this.y,this.z,this.m)}}class g{constructor(e,t){this.layer=e,this.options=t}}class x extends g{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type=\"geometry\"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>e.tile=null));else{const{tileInfo:t,tilemapCache:i}=this.layer,n=q(t,i)[e].level;this.geometry.coordinates.forEach((e=>e.tile=t.tileAt(n,e.x,e.y)))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile?.id&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates){const i=t.tile?.id;t.tile=i?e[i]:null}}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const n=i.tile;if(!n)continue;const l=i.tile?.id;i.elevationTile||!l||e[l]||(e[l]=n,t.push(n))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>{t.tile=null}))}}class _ extends g{constructor(e,t,i,n){super(e,i),this.type=\"extent\",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const{tileInfo:t,tilemapCache:i}=this.layer,n=q(t,i);if(!e)return n.length-1;const l=this.extent;if(null==l)return-1;for(let s=n.length-1;s>=0;s--){const i=n[s],o=i.resolution*t.size[0],a=i.resolution*t.size[1];if(Math.ceil(l.width/o)*Math.ceil(l.height/a)<=e)return s}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach((i=>{if(this._fetchedCandidates.has(i))return void(t&&t(i));let n=!1;e(i,(()=>n=!0)),n?t&&t(i):this._candidateTiles.push(i)})),this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},n=[];for(const s of e){const e=s.id;e&&!i[e]?(i[e]=s,n.push(s)):t&&t(s)}const l=n.sort(((e,t)=>e.level-t.level));return l.filter(((e,i)=>{for(let n=0;n<i;n++){const i=l[n].extent;if(i&&e.extent&&m(i,e.extent))return t&&t(e),!1}return!0}))}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(null==t)return;const{tileInfo:i,tilemapCache:n}=this.layer,l=q(i,n)[e],s=i.tileAt(l.level,t.xmin,t.ymin),o=s.extent;if(null==o)return;const a=l.resolution*i.size[0],r=l.resolution*i.size[1],c=Math.ceil((t.xmax-o[0])/a),u=Math.ceil((t.ymax-o[1])/r);for(let h=0;h<u;h++)for(let e=0;e<c;e++){const t=new y(null,s.level,s.row-h,s.col+e);i.updateTileInfo(t),this._tileIsMasked(t)||this._candidateTiles.push(t)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>e.extent&&m(t,e.extent)))}}function E(e,t,i=0){const n=q(e,t);let l=n.length-1;if(i>0){const t=i/s(e.spatialReference),o=n.findIndex((e=>e.resolution<t));0===o?l=0:o>0&&(l=o-1)}return l}const R={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:\"auto\",minDemResolution:0};function q(e,t){const i=e.lods;if(I(t)){const{effectiveMinLOD:e,effectiveMaxLOD:n}=t;return i.filter((t=>t.level>=e&&t.level<=n))}return i}function I(e){return null!=e?.tileInfo}export{T as ElevationQuery,v as GeometryDescriptor,E as getFinestLodIndex};\n"],"names":["t","constructor","l","arguments","length","undefined","this","tile","e","extent","_samplerData","a","zmin","data","minValue","zmax","maxValue","sample","safeWidth","r","dx","s","dy","n","y1","i","x0","u","width","m","values","o","noDataValue","h","p","D","f","Math","floor","c","d","_","x","V","g","v","T","queryAll","ignoreInvisibleLayers","filter","visible","slice","fromGeometry","returnSampleInfo","R","query","_queryAllContinue","geometry","export","sampleInfo","type","spatialReference","signal","load","_createGeometryDescriptor","_selectTiles","_populateElevationTiles","_sampleGeometryWithElevation","_createQueryResult","createSampler","_createSampler","createSamplerAll","_createSamplerAllContinue","tileInfo","equals","source","dest","elevationTiles","layer","options","pop","samplers","map","concat","coordinates","demResolution","push","clone","Error","forEach","z","project","outSpatialReference","_extractSampleInfo","elevationTile","wkid","_preselectOutsideLayerExtent","_selectTilesClosestResolution","_selectTilesFinestContiguous","_selectTilesAuto","fullExtent","outsideExtentTile","y","xmin","xmax","ymin","ymax","_findNearestDemResolutionLODIndex","selectTilesAtLOD","tilemapCache","q","abs","resolution","E","minDemResolution","_selectTilesFinestContiguousAt","getTilesToFetch","I","Promise","all","fetchAvailability","level","row","col","allElevationTilesFetched","clearElevationTiles","cache","async","id","uid","get","fetchTile","put","allSettled","populateElevationTiles","_selectTilesAutoFinest","_reduceTilesForMaximumRequests","_selectTilesAutoPrefetchUpsample","fetchAvailabilityUpsample","ok","error","remapTiles","forEachTileToFetch","maximumAutoTileRequests","upsampleTile","lodAt","_exporter","points","hasZ","hasM","w","spatiaReference","paths","super","tileAt","some","_t$tile","_t$tile2","_i$tile","_candidateTiles","_fetchedCandidates","Set","intersection","maskExtents","_maximumLodForRequests","min","_selectCandidateTilesCoveringExtentAt","size","ceil","height","clear","add","_uniqueNonOverlappingTiles","has","sort","updateTileInfo","_tileIsMasked","findIndex","lods","effectiveMinLOD","effectiveMaxLOD"],"sourceRoot":""}