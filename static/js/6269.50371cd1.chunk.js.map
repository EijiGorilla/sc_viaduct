{"version":3,"file":"static/js/6269.50371cd1.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/panel/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/panel/panel.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/panel/panel.scss?tag=calcite-panel&encapsulation=shadow"],"sourcesContent":["export const CSS = {\n  actionBarContainer: \"action-bar-container\",\n  backButton: \"back-button\",\n  container: \"container\",\n  contentBottom: \"content-bottom\",\n  contentTop: \"content-top\",\n  header: \"header\",\n  headerContainer: \"header-container\",\n  headerContainerBorderEnd: \"header-container--border-end\",\n  heading: \"heading\",\n  summary: \"summary\",\n  description: \"description\",\n  headerContent: \"header-content\",\n  headerActions: \"header-actions\",\n  headerActionsEnd: \"header-actions--end\",\n  headerActionsStart: \"header-actions--start\",\n  contentWrapper: \"content-wrapper\",\n  fabContainer: \"fab-container\",\n  footer: \"footer\",\n  footerContent: \"footer-content\",\n  footerActions: \"footer-actions\",\n  footerStart: \"footer-start\",\n  footerEnd: \"footer-end\",\n};\n\nexport const IDS = {\n  close: \"close\",\n  collapse: \"collapse\",\n};\n\nexport const ICONS = {\n  close: \"x\",\n  menu: \"ellipsis\",\n  backLeft: \"chevron-left\",\n  backRight: \"chevron-right\",\n  expand: \"chevron-down\",\n  collapse: \"chevron-up\",\n} as const;\n\nexport const SLOTS = {\n  actionBar: \"action-bar\",\n  alerts: \"alerts\",\n  contentBottom: \"content-bottom\",\n  contentTop: \"content-top\",\n  headerActionsStart: \"header-actions-start\",\n  headerActionsEnd: \"header-actions-end\",\n  headerMenuActions: \"header-menu-actions\",\n  headerContent: \"header-content\",\n  fab: \"fab\",\n  footer: \"footer\",\n  footerEnd: \"footer-end\",\n  footerStart: \"footer-start\",\n  footerActions: \"footer-actions\",\n};\n\nexport const HEADING_LEVEL = 3;\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  focusFirstTabbable,\n  slotChangeGetAssignedElements,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { SLOTS as ACTION_MENU_SLOTS } from \"../action-menu/resources\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  defaultEndMenuPlacement,\n  FlipPlacement,\n  LogicalPlacement,\n  OverlayPositioning,\n} from \"../../utils/floating-ui\";\nimport { CollapseDirection } from \"../interfaces\";\nimport { Scale } from \"../interfaces\";\nimport { PanelMessages } from \"./assets/panel/t9n\";\nimport { CSS, ICONS, IDS, SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding custom content.\n * @slot action-bar - A slot for adding a `calcite-action-bar` to the component.\n * @slot alerts - A slot for adding `calcite-alert`s to the component.\n * @slot content-bottom - A slot for adding content below the unnamed (default) slot and above the footer slot (if populated)\n * @slot content-top - A slot for adding content above the unnamed (default) slot and below the action-bar slot (if populated).\n * @slot header-actions-start - A slot for adding actions or content to the start side of the header.\n * @slot header-actions-end - A slot for adding actions or content to the end side of the header.\n * @slot header-content - A slot for adding custom content to the header.\n * @slot header-menu-actions - A slot for adding an overflow menu with actions inside a `calcite-dropdown`.\n * @slot fab - A slot for adding a `calcite-fab` (floating action button) to perform an action.\n * @slot footer - A slot for adding custom content to the component's footer. Should not be used with the `\"footer-start\"` or `\"footer-end\"` slots.\n * @slot footer-actions - [Deprecated] Use the `footer-start` and `footer-end` slots instead. A slot for adding `calcite-button`s to the component's footer.\n * @slot footer-end - A slot for adding a trailing footer custom content. Should not be used with the `\"footer\"` slot.\n * @slot footer-start - A slot for adding a leading footer custom content. Should not be used with the `\"footer\"` slot.\n */\n@Component({\n  tag: \"calcite-panel\",\n  styleUrl: \"panel.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Panel\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** Passes a function to run before the component closes. */\n  @Prop() beforeClose: () => Promise<void>;\n\n  /** When `true`, the component will be hidden. */\n  @Prop({ mutable: true, reflect: true }) closed = false;\n\n  @Watch(\"closed\")\n  toggleDialog(value: boolean): void {\n    value ? this.close() : this.open();\n  }\n\n  /**\n   *  When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** When `true`, displays a close button in the trailing side of the header. */\n  @Prop({ reflect: true }) closable = false;\n\n  /**\n   * When `true`, hides the component's content area.\n   */\n  @Prop({ reflect: true }) collapsed = false;\n\n  /**\n   * Specifies the direction of the collapse.\n   *\n   * @internal\n   */\n  @Prop() collapseDirection: CollapseDirection = \"down\";\n\n  /**\n   * When `true`, the component is collapsible.\n   */\n  @Prop({ reflect: true }) collapsible = false;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading: string;\n\n  /** A description for the component. */\n  @Prop() description: string;\n\n  /**\n   * Specifies the component's fallback menu `placement` when it's initial or specified `placement` has insufficient space available.\n   */\n  @Prop() menuFlipPlacements: FlipPlacement[];\n\n  /**\n   * When `true`, the action menu items in the `header-menu-actions` slot are open.\n   */\n  @Prop({ reflect: true }) menuOpen = false;\n\n  /**\n   * Determines where the action menu will be positioned.\n   */\n  @Prop({ reflect: true }) menuPlacement: LogicalPlacement = defaultEndMenuPlacement;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<PanelMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: PanelMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.isClosed = this.closed;\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePanelElement;\n\n  containerEl: HTMLElement;\n\n  panelScrollEl: HTMLElement;\n\n  resizeObserver = createObserver(\"resize\", () => this.resizeHandler());\n\n  @State() isClosed = false;\n\n  @State() hasStartActions = false;\n\n  @State() hasEndActions = false;\n\n  @State() hasMenuItems = false;\n\n  @State() hasHeaderContent = false;\n\n  @State() hasActionBar = false;\n\n  @State() hasContentBottom = false;\n\n  @State() hasContentTop = false;\n\n  @State() hasFab = false;\n\n  @State() hasFooterActions = false;\n\n  @State() hasFooterContent = false;\n\n  @State() hasFooterEndContent = false;\n\n  @State() hasFooterStartContent = false;\n\n  @State() defaultMessages: PanelMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @State() showHeaderContent = false;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the close button is clicked.\n   */\n  @Event({ cancelable: false }) calcitePanelClose: EventEmitter<void>;\n\n  /**\n   * Fires when the collapse button is clicked.\n   */\n  @Event({ cancelable: false }) calcitePanelToggle: EventEmitter<void>;\n\n  /**\n   * Fires when the content is scrolled.\n   */\n  @Event({ cancelable: false }) calcitePanelScroll: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  resizeHandler = (): void => {\n    const { panelScrollEl } = this;\n\n    if (\n      !panelScrollEl ||\n      typeof panelScrollEl.scrollHeight !== \"number\" ||\n      typeof panelScrollEl.offsetHeight !== \"number\"\n    ) {\n      return;\n    }\n\n    const hasScrollingContent = panelScrollEl.scrollHeight > panelScrollEl.offsetHeight;\n\n    // intentionally using setAttribute to avoid reflecting -1 so default browser behavior will occur\n    if (hasScrollingContent) {\n      panelScrollEl.setAttribute(\"tabindex\", \"0\");\n    } else {\n      panelScrollEl.removeAttribute(\"tabindex\");\n    }\n  };\n\n  setContainerRef = (node: HTMLElement): void => {\n    this.containerEl = node;\n  };\n\n  panelKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.closable && event.key === \"Escape\" && !event.defaultPrevented) {\n      this.handleUserClose();\n      event.preventDefault();\n    }\n  };\n\n  private handleUserClose = (): void => {\n    this.closed = true;\n    this.calcitePanelClose.emit();\n  };\n\n  open = (): void => {\n    this.isClosed = false;\n  };\n\n  close = async (): Promise<void> => {\n    const beforeClose = this.beforeClose ?? (() => Promise.resolve());\n\n    try {\n      await beforeClose();\n    } catch (_error) {\n      // close prevented\n      requestAnimationFrame(() => {\n        this.closed = false;\n      });\n      return;\n    }\n\n    this.isClosed = true;\n  };\n\n  collapse = (): void => {\n    this.collapsed = !this.collapsed;\n    this.calcitePanelToggle.emit();\n  };\n\n  panelScrollHandler = (): void => {\n    this.calcitePanelScroll.emit();\n  };\n\n  handleHeaderActionsStartSlotChange = (event: Event): void => {\n    this.hasStartActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleHeaderActionsEndSlotChange = (event: Event): void => {\n    this.hasEndActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleHeaderMenuActionsSlotChange = (event: Event): void => {\n    this.hasMenuItems = slotChangeHasAssignedElement(event);\n  };\n\n  handleActionBarSlotChange = (event: Event): void => {\n    const actionBars = slotChangeGetAssignedElements(event).filter(\n      (el): el is HTMLCalciteActionBarElement => el?.matches(\"calcite-action-bar\"),\n    );\n\n    actionBars.forEach((actionBar) => (actionBar.layout = \"horizontal\"));\n\n    this.hasActionBar = !!actionBars.length;\n  };\n\n  handleHeaderContentSlotChange = (event: Event): void => {\n    this.hasHeaderContent = slotChangeHasAssignedElement(event);\n  };\n\n  handleFabSlotChange = (event: Event): void => {\n    this.hasFab = slotChangeHasAssignedElement(event);\n  };\n\n  handleFooterActionsSlotChange = (event: Event): void => {\n    this.hasFooterActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleFooterEndSlotChange = (event: Event): void => {\n    this.hasFooterEndContent = slotChangeHasAssignedElement(event);\n  };\n\n  handleFooterStartSlotChange = (event: Event): void => {\n    this.hasFooterStartContent = slotChangeHasAssignedElement(event);\n  };\n\n  handleFooterSlotChange = (event: Event): void => {\n    this.hasFooterContent = slotChangeHasAssignedElement(event);\n  };\n\n  private contentBottomSlotChangeHandler = (event: Event): void => {\n    this.hasContentBottom = slotChangeHasAssignedElement(event);\n  };\n\n  private contentTopSlotChangeHandler = (event: Event): void => {\n    this.hasContentTop = slotChangeHasAssignedElement(event);\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.containerEl);\n  }\n\n  /**\n   * Scrolls the component's content to a specified set of coordinates.\n   *\n   * @example\n   * myCalciteFlowItem.scrollContentTo({\n   *   left: 0, // Specifies the number of pixels along the X axis to scroll the window or element.\n   *   top: 0, // Specifies the number of pixels along the Y axis to scroll the window or element\n   *   behavior: \"auto\" // Specifies whether the scrolling should animate smoothly (smooth), or happen instantly in a single jump (auto, the default value).\n   * });\n   * @param options - allows specific coordinates to be defined.\n   * @returns - promise that resolves once the content is scrolled to.\n   */\n  @Method()\n  async scrollContentTo(options?: ScrollToOptions): Promise<void> {\n    this.panelScrollEl?.scrollTo(options);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderHeaderContent(): VNode {\n    const { heading, headingLevel, description, hasHeaderContent } = this;\n    const headingNode = heading ? (\n      <Heading class={CSS.heading} level={headingLevel}>\n        {heading}\n      </Heading>\n    ) : null;\n\n    const descriptionNode = description ? <span class={CSS.description}>{description}</span> : null;\n\n    return !hasHeaderContent && (headingNode || descriptionNode) ? (\n      <div class={CSS.headerContent} key=\"header-content\">\n        {headingNode}\n        {descriptionNode}\n      </div>\n    ) : null;\n  }\n\n  renderActionBar(): VNode {\n    return (\n      <div class={CSS.actionBarContainer} hidden={!this.hasActionBar}>\n        <slot name={SLOTS.actionBar} onSlotchange={this.handleActionBarSlotChange} />\n      </div>\n    );\n  }\n\n  renderHeaderSlottedContent(): VNode {\n    return (\n      <div class={CSS.headerContent} hidden={!this.hasHeaderContent} key=\"slotted-header-content\">\n        <slot name={SLOTS.headerContent} onSlotchange={this.handleHeaderContentSlotChange} />\n      </div>\n    );\n  }\n\n  renderHeaderStartActions(): VNode {\n    const { hasStartActions } = this;\n\n    return (\n      <div\n        class={{ [CSS.headerActionsStart]: true, [CSS.headerActions]: true }}\n        hidden={!hasStartActions}\n        key=\"header-actions-start\"\n      >\n        <slot\n          name={SLOTS.headerActionsStart}\n          onSlotchange={this.handleHeaderActionsStartSlotChange}\n        />\n      </div>\n    );\n  }\n\n  renderHeaderActionsEnd(): VNode {\n    const {\n      hasEndActions,\n      messages,\n      closable,\n      collapsed,\n      collapseDirection,\n      collapsible,\n      hasMenuItems,\n    } = this;\n    const { collapse, expand, close } = messages;\n\n    const icons = [ICONS.expand, ICONS.collapse];\n\n    if (collapseDirection === \"up\") {\n      icons.reverse();\n    }\n\n    const collapseNode = collapsible ? (\n      <calcite-action\n        aria-expanded={toAriaBoolean(!collapsed)}\n        aria-label={collapse}\n        icon={collapsed ? icons[0] : icons[1]}\n        id={IDS.collapse}\n        onClick={this.collapse}\n        scale={this.scale}\n        text={collapse}\n        title={collapsed ? expand : collapse}\n      />\n    ) : null;\n\n    const closeNode = closable ? (\n      <calcite-action\n        aria-label={close}\n        icon={ICONS.close}\n        id={IDS.close}\n        onClick={this.handleUserClose}\n        scale={this.scale}\n        text={close}\n        title={close}\n      />\n    ) : null;\n\n    const slotNode = (\n      <slot name={SLOTS.headerActionsEnd} onSlotchange={this.handleHeaderActionsEndSlotChange} />\n    );\n\n    const showContainer = hasEndActions || collapseNode || closeNode || hasMenuItems;\n\n    return (\n      <div\n        class={{ [CSS.headerActionsEnd]: true, [CSS.headerActions]: true }}\n        hidden={!showContainer}\n        key=\"header-actions-end\"\n      >\n        {slotNode}\n        {this.renderMenu()}\n        {collapseNode}\n        {closeNode}\n      </div>\n    );\n  }\n\n  renderMenu(): VNode {\n    const { hasMenuItems, messages, menuOpen, menuFlipPlacements, menuPlacement } = this;\n\n    return (\n      <calcite-action-menu\n        flipPlacements={menuFlipPlacements ?? [\"top\", \"bottom\"]}\n        hidden={!hasMenuItems}\n        key=\"menu\"\n        label={messages.options}\n        open={menuOpen}\n        overlayPositioning={this.overlayPositioning}\n        placement={menuPlacement}\n      >\n        <calcite-action\n          icon={ICONS.menu}\n          scale={this.scale}\n          slot={ACTION_MENU_SLOTS.trigger}\n          text={messages.options}\n        />\n        <slot\n          name={SLOTS.headerMenuActions}\n          onSlotchange={this.handleHeaderMenuActionsSlotChange}\n        />\n      </calcite-action-menu>\n    );\n  }\n\n  renderHeaderNode(): VNode {\n    const {\n      hasHeaderContent,\n      hasStartActions,\n      hasEndActions,\n      closable,\n      collapsible,\n      hasMenuItems,\n      hasActionBar,\n    } = this;\n\n    const headerContentNode = this.renderHeaderContent();\n\n    const showHeaderContent =\n      hasHeaderContent ||\n      !!headerContentNode ||\n      hasStartActions ||\n      hasEndActions ||\n      collapsible ||\n      closable ||\n      hasMenuItems;\n\n    this.showHeaderContent = showHeaderContent;\n\n    return (\n      <header class={CSS.header} hidden={!(showHeaderContent || hasActionBar)}>\n        <div\n          class={{ [CSS.headerContainer]: true, [CSS.headerContainerBorderEnd]: hasActionBar }}\n          hidden={!showHeaderContent}\n        >\n          {this.renderHeaderStartActions()}\n          {this.renderHeaderSlottedContent()}\n          {headerContentNode}\n          {this.renderHeaderActionsEnd()}\n        </div>\n        {this.renderActionBar()}\n        {this.renderContentTop()}\n      </header>\n    );\n  }\n\n  renderFooterNode(): VNode {\n    const { hasFooterEndContent, hasFooterStartContent, hasFooterContent, hasFooterActions } = this;\n\n    const showFooter =\n      hasFooterStartContent || hasFooterEndContent || hasFooterContent || hasFooterActions;\n\n    return (\n      <footer class={CSS.footer} hidden={!showFooter}>\n        <div class={CSS.footerContent} hidden={!hasFooterContent}>\n          <slot name={SLOTS.footer} onSlotchange={this.handleFooterSlotChange} />\n        </div>\n        <div class={CSS.footerStart} hidden={hasFooterContent || !hasFooterStartContent}>\n          <slot name={SLOTS.footerStart} onSlotchange={this.handleFooterStartSlotChange} />\n        </div>\n        <div class={CSS.footerEnd} hidden={hasFooterContent || !hasFooterEndContent}>\n          <slot name={SLOTS.footerEnd} onSlotchange={this.handleFooterEndSlotChange} />\n        </div>\n        <div class={CSS.footerActions} hidden={hasFooterContent || !hasFooterActions}>\n          <slot\n            key=\"footer-actions-slot\"\n            name={SLOTS.footerActions}\n            onSlotchange={this.handleFooterActionsSlotChange}\n          />\n        </div>\n      </footer>\n    );\n  }\n\n  setPanelScrollEl = (el: HTMLElement): void => {\n    this.panelScrollEl = el;\n    this.resizeObserver?.disconnect();\n\n    if (el) {\n      this.resizeObserver?.observe(el);\n      this.resizeHandler();\n    }\n  };\n\n  renderContent(): VNode {\n    return (\n      <div\n        class={CSS.contentWrapper}\n        hidden={this.collapsible && this.collapsed}\n        onScroll={this.panelScrollHandler}\n        ref={this.setPanelScrollEl}\n      >\n        <slot />\n        {this.renderFab()}\n      </div>\n    );\n  }\n\n  renderContentBottom(): VNode {\n    return (\n      <div class={CSS.contentBottom} hidden={!this.hasContentBottom}>\n        <slot name={SLOTS.contentBottom} onSlotchange={this.contentBottomSlotChangeHandler} />\n      </div>\n    );\n  }\n\n  renderContentTop(): VNode {\n    return (\n      <div class={CSS.contentTop} hidden={!this.hasContentTop}>\n        <slot name={SLOTS.contentTop} onSlotchange={this.contentTopSlotChangeHandler} />\n      </div>\n    );\n  }\n\n  renderFab(): VNode {\n    return (\n      <div class={CSS.fabContainer} hidden={!this.hasFab}>\n        <slot name={SLOTS.fab} onSlotchange={this.handleFabSlotChange} />\n      </div>\n    );\n  }\n\n  handleAlertsSlotChange = (event: Event): void => {\n    slotChangeGetAssignedElements(event)?.map((el) => {\n      if (el.nodeName === \"CALCITE-ALERT\") {\n        (el as HTMLCalciteAlertElement).embedded = true;\n      }\n    });\n  };\n\n  render(): VNode {\n    const { disabled, loading, isClosed } = this;\n\n    const panelNode = (\n      <article\n        aria-busy={toAriaBoolean(loading)}\n        class={CSS.container}\n        hidden={isClosed}\n        ref={this.setContainerRef}\n      >\n        {this.renderHeaderNode()}\n        {this.renderContent()}\n        {this.renderContentBottom()}\n        {this.renderFooterNode()}\n        <slot key=\"alerts\" name={SLOTS.alerts} onSlotchange={this.handleAlertsSlotChange} />\n      </article>\n    );\n\n    return (\n      <Host onKeyDown={this.panelKeyDownHandler}>\n        <InteractiveContainer disabled={disabled}>\n          {loading ? <calcite-scrim loading={loading} /> : null}\n          {panelNode}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-panel-content-space: Specifies the padding of the component's content.\n * @prop --calcite-panel-footer-padding: Specifies the padding of the component's footer.\n * @prop --calcite-panel-header-border-block-end: Specifies the component header's block end border.\n * @prop --calcite-panel-background-color: Specifies the background color of the component.\n */\n\n:host {\n  @extend %component-host;\n  @apply relative flex w-full h-full flex-auto overflow-hidden;\n\n  --calcite-min-header-height: calc(var(--calcite-icon-size) * 3);\n}\n\n@include disabled();\n\n@import \"../../assets/styles/header\";\n\n:host([scale=\"s\"]) {\n  --calcite-internal-panel-default-padding: var(--calcite-spacing-sm);\n  --calcite-internal-panel-header-vertical-padding: 10px; // this should use a spacing token once made available\n\n  .header-content {\n    .heading {\n      @apply text-n1h;\n    }\n\n    .description {\n      @apply text-n2h;\n    }\n  }\n}\n\n:host([scale=\"m\"]) {\n  --calcite-internal-panel-default-padding: var(--calcite-spacing-md);\n  --calcite-internal-panel-header-vertical-padding: var(--calcite-spacing-lg);\n\n  .header-content {\n    .heading {\n      @apply text-0h;\n    }\n\n    .description {\n      @apply text-n1h;\n    }\n  }\n}\n\n:host([scale=\"l\"]) {\n  --calcite-internal-panel-default-padding: var(--calcite-spacing-xl);\n  --calcite-internal-panel-header-vertical-padding: var(--calcite-spacing-xxl);\n\n  .header-content {\n    .heading {\n      @apply text-1h;\n    }\n\n    .description {\n      @apply text-0h;\n    }\n  }\n}\n\n.content-top,\n.content-bottom {\n  @apply flex items-start self-stretch;\n\n  border-block-start: 1px solid var(--calcite-color-border-3);\n  background-color: var(--calcite-color-foreground-1);\n}\n\n.container {\n  @apply relative bg-background m-0 flex w-full flex-auto flex-col items-stretch p-0;\n\n  transition:\n    max-block-size var(--calcite-animation-timing),\n    inline-size var(--calcite-animation-timing);\n}\n\n.container[hidden] {\n  @apply hidden;\n}\n\n.header {\n  @apply bg-foreground-1 flex flex-col z-header;\n  border-block-end: var(--calcite-panel-header-border-block-end, 1px solid var(--calcite-color-border-3));\n}\n\n.header-container {\n  @apply flex flex-row w-full\n  items-stretch\n  justify-start;\n  flex: 0 0 auto;\n}\n\n.header-container--border-end {\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\n.action-bar-container {\n  @apply w-full;\n}\n\n.action-bar-container ::slotted(calcite-action-bar) {\n  @apply w-full;\n}\n\n.header-content {\n  @apply flex\n    flex-col\n    overflow-hidden\n    px-3\n    py-3.5;\n\n  margin-inline-end: auto;\n\n  .heading,\n  .description {\n    @apply block\n      break-words\n      p-0;\n  }\n\n  .heading {\n    @apply mx-0 mt-0 mb-1 font-medium text-color-1;\n\n    &:only-child {\n      @apply mb-0;\n    }\n  }\n\n  .description {\n    @apply text-color-2;\n  }\n}\n\n.back-button {\n  @apply border-color-3\n  border-0\n  border-solid;\n  border-inline-end-width: theme(\"borderWidth.DEFAULT\");\n}\n\n.header-actions {\n  @apply flex\n  flex-row\n  flex-nowrap\n  items-stretch;\n}\n\n.header-actions--end {\n  margin-inline-start: theme(\"margin.auto\");\n}\n\n.content-wrapper {\n  @apply flex\n  flex-auto\n  flex-col\n  flex-nowrap\n  items-stretch\n  overflow-auto\n  h-full\n  focus-base;\n  padding: var(--calcite-panel-content-space, 0);\n  background: var(--calcite-panel-background-color, var(--calcite-color-background));\n}\n\n.content-wrapper:focus-visible {\n  @apply focus-inset;\n}\n\n.content-top,\n.content-bottom {\n  padding: var(--calcite-internal-panel-default-padding);\n}\n\n.header-content {\n  flex: 1 1 auto;\n  padding-block: var(--calcite-internal-panel-header-vertical-padding);\n  padding-inline: var(--calcite-internal-panel-default-padding);\n}\n\n.footer {\n  @apply flex mt-auto flex-row content-between justify-center items-center bg-foreground-1 text-n2-wrap;\n  border-block-start: 1px solid var(--calcite-color-border-3);\n  padding: var(--calcite-panel-footer-padding, var(--calcite-internal-panel-default-padding));\n}\n\n.footer-content {\n  @apply flex flex-row items-center justify-center flex-1;\n}\n\n.footer-actions {\n  @apply flex flex-row items-center justify-evenly flex-1;\n  gap: var(--calcite-internal-panel-default-padding);\n}\n\n.footer-start {\n  @apply flex flex-row items-center justify-start flex-1;\n  margin-inline-end: auto;\n  gap: var(--calcite-internal-panel-default-padding);\n}\n\n.footer-end {\n  @apply flex flex-row items-center justify-end flex-1;\n  margin-inline-start: auto;\n  gap: var(--calcite-internal-panel-default-padding);\n}\n\n.fab-container {\n  @apply sticky\n  bottom-0\n  my-0\n  mx-auto\n  block\n  p-2\n  z-sticky;\n  inset-inline: 0;\n  inline-size: fit-content;\n}\n\n@include base-component();\n"],"names":["CSS","IDS","ICONS","SLOTS","actionBar","alerts","contentBottom","contentTop","headerActionsStart","headerActionsEnd","headerMenuActions","headerContent","fab","footer","footerEnd","footerStart","footerActions","Panel","proxyCustomElement","HTMLElement","resizeObserver","createObserver","this","resizeHandler","panelScrollEl","scrollHeight","offsetHeight","setAttribute","removeAttribute","setContainerRef","node","containerEl","panelKeyDownHandler","event","closable","key","defaultPrevented","handleUserClose","preventDefault","closed","calcitePanelClose","emit","open","isClosed","close","async","_this$beforeClose","beforeClose","Promise","resolve","_error","requestAnimationFrame","collapse","collapsed","calcitePanelToggle","panelScrollHandler","calcitePanelScroll","handleHeaderActionsStartSlotChange","hasStartActions","slotChangeHasAssignedElement","handleHeaderActionsEndSlotChange","hasEndActions","handleHeaderMenuActionsSlotChange","hasMenuItems","handleActionBarSlotChange","actionBars","slotChangeGetAssignedElements","filter","el","matches","forEach","layout","hasActionBar","length","handleHeaderContentSlotChange","hasHeaderContent","handleFabSlotChange","hasFab","handleFooterActionsSlotChange","hasFooterActions","handleFooterEndSlotChange","hasFooterEndContent","handleFooterStartSlotChange","hasFooterStartContent","handleFooterSlotChange","hasFooterContent","contentBottomSlotChangeHandler","hasContentBottom","contentTopSlotChangeHandler","hasContentTop","setPanelScrollEl","_this$resizeObserver","_this$resizeObserver2","disconnect","observe","handleAlertsSlotChange","_slotChangeGetAssigne","map","nodeName","embedded","defaultEndMenuPlacement","toggleDialog","value","onMessagesChange","connectedCallback","connectLocalized","connectMessages","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","_this$resizeObserver3","disconnectLocalized","disconnectMessages","effectiveLocaleChange","updateMessages","effectiveLocale","setFocus","componentFocusable","focusFirstTabbable","scrollContentTo","options","_this$panelScrollEl","scrollTo","renderHeaderContent","heading","headingLevel","description","headingNode","h","Heading","class","level","descriptionNode","renderActionBar","hidden","name","onSlotchange","renderHeaderSlottedContent","renderHeaderStartActions","renderHeaderActionsEnd","messages","collapseDirection","collapsible","expand","icons","reverse","collapseNode","toAriaBoolean","icon","id","onClick","scale","text","title","closeNode","slotNode","showContainer","renderMenu","menuOpen","menuFlipPlacements","menuPlacement","flipPlacements","label","overlayPositioning","placement","slot","SLOTS$1","trigger","renderHeaderNode","headerContentNode","showHeaderContent","renderContentTop","renderFooterNode","showFooter","renderContent","onScroll","ref","renderFab","renderContentBottom","render","disabled","loading","panelNode","Host","onKeyDown","InteractiveContainer"],"sourceRoot":""}