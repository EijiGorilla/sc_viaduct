{"version":3,"file":"static/js/5294.f2b5eb35.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/layers/support/rasterTransforms/IdentityTransform.js","../node_modules/@arcgis/core/layers/support/rasterTransforms/utils.js","../node_modules/@arcgis/core/layers/support/RasterWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.31/esri/copyright.txt for details.\n*/\nimport{_ as r}from\"../../../chunks/tslib.es6.js\";import\"../../../core/Logger.js\";import\"../../../core/has.js\";import\"../../../core/RandomLCG.js\";import\"../../../core/Error.js\";import{enumeration as o}from\"../../../core/accessorSupport/decorators/enumeration.js\";import{subclass as s}from\"../../../core/accessorSupport/decorators/subclass.js\";import t from\"./BaseRasterTransform.js\";var e;let a=e=class extends t{constructor(){super(...arguments),this.type=\"identity\"}clone(){return new e}};r([o({IdentityXform:\"identity\"})],a.prototype,\"type\",void 0),a=e=r([s(\"esri.layers.support.rasterTransforms.IdentityTransform\")],a);const p=a;export{p as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.31/esri/copyright.txt for details.\n*/\nimport r from\"./GCSShiftTransform.js\";import t from\"./IdentityTransform.js\";import n from\"./PolynomialTransform.js\";const o={GCSShiftXform:r,IdentityXform:t,PolynomialXform:n},e=Object.keys(o);function f(r){const t=r?.type;return!r||e.includes(t)}function i(r){const t=r?.type;if(!t)return null;const n=o[r?.type];if(n){const t=new n;return t.read(r),t}return null}export{f as isTransformSupported,i as readTransform};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.31/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import r from\"../../geometry/support/GeographicTransformation.js\";import e from\"./PixelBlock.js\";import{decode as t}from\"./rasterFormats/RasterCodec.js\";import{split as s,clipTile as o,mosaic as i,approximateTransform as n,getLocalArithmeticNorthRotations as a}from\"./rasterFunctions/pixelUtils.js\";import{create as l}from\"./rasterFunctions/rasterFunctionHelper.js\";import{requirePE as m,load as c,getProjectionOffsetGrid as f}from\"./rasterFunctions/rasterProjectionHelper.js\";import{computeStatisticsHistograms as p,estimateStatisticsHistograms as u}from\"./rasterFunctions/stretchUtils.js\";import{convertVectorFieldData as S,convertToLocalDirections as d}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as x}from\"./rasterTransforms/utils.js\";import y from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as O}from\"../../views/2d/engine/flow/dataUtils.js\";import h from\"../../geometry/Extent.js\";import N from\"../../geometry/Point.js\";class J{convertVectorFieldData(r){const t=e.fromJSON(r.pixelBlock),s=S(t,r.type);return Promise.resolve(null!=s?s.toJSON():null)}computeStatisticsHistograms(r){const t=e.fromJSON(r.pixelBlock),s=p(t);return Promise.resolve(s)}async decode(r){const e=await t(r.data,r.options);return e&&e.toJSON()}symbolize(r){r.pixelBlock=e.fromJSON(r.pixelBlock),r.extent=r.extent?h.fromJSON(r.extent):null;const t=this.symbolizer.symbolize(r);return Promise.resolve(null!=t?t.toJSON():null)}async updateSymbolizer(r){this.symbolizer=y.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=r.histograms)}async updateRasterFunction(r){this.rasterFunction=l(r.rasterFunctionJSON)}async process(r){const t=this.rasterFunction.process({extent:h.fromJSON(r.extent),primaryPixelBlocks:r.primaryPixelBlocks.map((r=>null!=r?e.fromJSON(r):null)),primaryPixelSizes:r.primaryPixelSizes?.map((r=>null!=r?N.fromJSON(r):null)),primaryRasterIds:r.primaryRasterIds});return null!=t?t.toJSON():null}stretch(r){const t=this.symbolizer.simpleStretch(e.fromJSON(r.srcPixelBlock),r.stretchParams);return Promise.resolve(t?.toJSON())}estimateStatisticsHistograms(r){const t=u(e.fromJSON(r.srcPixelBlock));return Promise.resolve(t)}split(r){const t=s(e.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel??0,!1===r.useBilinear);return t&&t.forEach(((r,e)=>{t.set(e,r?.toJSON())})),Promise.resolve(t)}clipTile(r){const t=e.fromJSON(r.pixelBlock),s=o({...r,pixelBlock:t});return Promise.resolve(s?.toJSON())}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new e(r):null)),s=i(t,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let o,l=s;return r.coefs&&(l=n(s,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(o=a(r.destDimension,r.gcsGrid),l=d(l,r.isUV?\"vector-uv\":\"vector-magdir\",o)),{pixelBlock:l?.toJSON(),localNorthDirections:o}}async createFlowMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:o}=await O(r.meshType,r.simulationSettings,t,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(e){const t=h.fromJSON(e.projectedExtent),s=h.fromJSON(e.srcBufferExtent);let o=null;e.datumTransformationSteps&&(o=new r({steps:e.datumTransformationSteps})),(e.includeGCSGrid||m(t.spatialReference,s.spatialReference,o))&&await c();const i=e.rasterTransform?x(e.rasterTransform):null;return f({...e,projectedExtent:t,srcBufferExtent:s,datumTransformation:o,rasterTransform:i})}}export{J as default};\n"],"names":["e","a","t","constructor","super","arguments","this","type","clone","r","o","IdentityXform","prototype","s","p","GCSShiftXform","PolynomialXform","n","Object","keys","i","read","J","convertVectorFieldData","fromJSON","pixelBlock","S","Promise","resolve","toJSON","computeStatisticsHistograms","decode","data","options","symbolize","extent","h","symbolizer","updateSymbolizer","_this$symbolizer","y","symbolizerJSON","histograms","rendererJSON","updateRasterFunction","rasterFunction","l","rasterFunctionJSON","process","_r$primaryPixelSizes","primaryPixelBlocks","map","primaryPixelSizes","N","primaryRasterIds","stretch","simpleStretch","srcPixelBlock","stretchParams","estimateStatisticsHistograms","u","split","_r$maximumPyramidLeve","tileSize","maximumPyramidLevel","useBilinear","forEach","set","clipTile","_objectSpread","mosaicAndTransform","_l","srcPixelBlocks","srcMosaicSize","blockWidths","alignmentInfo","clipOffset","clipSize","coefs","destDimension","sampleSpacing","interpolation","projectDirections","gcsGrid","d","isUV","localNorthDirections","createFlowMesh","Float32Array","flowData","buffer","mask","Uint8Array","maskBuffer","width","height","vertexData","indexData","O","meshType","simulationSettings","signal","result","vertexBuffer","indexBuffer","transferList","getProjectionOffsetGrid","projectedExtent","srcBufferExtent","datumTransformationSteps","steps","includeGCSGrid","m","spatialReference","c","rasterTransform","x","f","datumTransformation"],"sourceRoot":""}